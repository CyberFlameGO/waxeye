var $__runtime_47_core_47_raw_95_hashing_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/raw_hashing.js";
  function hash(o) {
    if (o === null)
      return 0;
    switch ((typeof o === 'undefined' ? 'undefined' : $traceurRuntime.typeof(o))) {
      case 'number':
        return hashNumber(o);
      case 'string':
        return hashString(o);
      case 'boolean':
        return o ? 1 : -1;
      case 'undefined':
        return 0;
      case 'object':
      case 'function':
        return hashObjectIdentity(o);
      default:
        return hashString(o.toString());
    }
  }
  function hashString(s) {
    var h = 0;
    var n = s.length;
    for (var i = 0; i < n; ++i) {
      h = ~~(((h << 5) - h) + s.charCodeAt(i));
    }
    return h;
  }
  var kBuf = new ArrayBuffer(8);
  var kBufAsF64 = new Float64Array(kBuf);
  var kBufAsI32 = new Int32Array(kBuf);
  function hashNumber(n) {
    if (~~n === n) {
      return ~~n;
    }
    kBufAsF64[0] = n;
    return kBufAsI32[0] ^ kBufAsI32[1];
  }
  var objectIds = new WeakMap();
  var currentId = 0;
  function hashObjectIdentity(o) {
    var result = objectIds.get(o);
    if (result === undefined) {
      currentId = ~~(currentId + 1);
      objectIds.set(o, currentId);
      return currentId;
    }
    return result;
  }
  function hashIntArray(a) {
    var h = 0;
    var n = a.length;
    for (var i = 0; i < n; ++i) {
      h = ~~(((h << 5) - h) + a[i]);
    }
    return h;
  }
  function hashArray(a, valueToIntFn) {
    var h = 0;
    var n = a.length;
    for (var i = 0; i < n; ++i) {
      h = ~~(((h << 5) - h) + valueToIntFn(a[i]));
    }
    return h;
  }
  return {
    get hash() {
      return hash;
    },
    get hashString() {
      return hashString;
    },
    get hashNumber() {
      return hashNumber;
    },
    get hashObjectIdentity() {
      return hashObjectIdentity;
    },
    get hashIntArray() {
      return hashIntArray;
    },
    get hashArray() {
      return hashArray;
    }
  };
})();
var $__runtime_47_core_47_primitive_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/primitive.js";
  var hashString = ($__runtime_47_core_47_raw_95_hashing_46_js__).hashString;
  var Primitive = function() {
    function Primitive() {}
    return ($traceurRuntime.createClass)(Primitive, {hashForEqual: function() {
        return hashString(this.toString());
      }}, {});
  }();
  function check(v) {
    return (v instanceof Primitive);
  }
  return {
    get Primitive() {
      return Primitive;
    },
    get check() {
      return check;
    }
  };
})();
var $__runtime_47_core_47_mini_95_native_95_output_95_string_95_port_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/mini_native_output_string_port.js";
  var MiniNativeOutputStringPort = function() {
    function MiniNativeOutputStringPort() {
      this._buffer = [];
    }
    return ($traceurRuntime.createClass)(MiniNativeOutputStringPort, {
      consume: function(nativeString) {
        this._buffer.push(nativeString);
      },
      getOutputString: function() {
        return this._buffer.join('');
      }
    }, {});
  }();
  return {get MiniNativeOutputStringPort() {
      return MiniNativeOutputStringPort;
    }};
})();
var $__runtime_47_core_47_bytes_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/bytes.js";
  var hashIntArray = ($__runtime_47_core_47_raw_95_hashing_46_js__).hashIntArray;
  var TextDecoder = (typeof window === 'undefined') ? require('util').TextDecoder : window.TextDecoder;
  function check(bs) {
    return (typeof bs === 'undefined' ? 'undefined' : $traceurRuntime.typeof(bs)) === 'object' && bs !== null && bs.constructor === Uint8Array;
  }
  function eq(a, b) {
    if (a.length !== b.length)
      return false;
    var n = a.length;
    for (var i = 0; i < n; i++) {
      if (a[i] !== b[i])
        return false;
    }
    return true;
  }
  function lt(a, b) {
    var n = Math.min(a.length, b.length);
    for (var i = 0; i < n; i++) {
      if (a[i] !== b[i]) {
        return a[i] < b[i];
      }
    }
    return (a.length < b.length);
  }
  function gt(a, b) {
    var n = Math.min(a.length, b.length);
    for (var i = 0; i < n; i++) {
      if (a[i] !== b[i]) {
        return a[i] > b[i];
      }
    }
    return (a.length > b.length);
  }
  function lte(a, b) {
    return !gt(a, b);
  }
  function gte(a, b) {
    return !lt(a, b);
  }
  function fromIntArray(ints) {
    return new Uint8Array(ints);
  }
  var utf8Decoder = new TextDecoder('utf-8');
  function toString(bytes) {
    return utf8Decoder.decode(bytes);
  }
  function displayNativeString(out, bytes) {
    out.consume(toString(bytes));
  }
  function hashForEqual(bytes) {
    return hashIntArray(bytes);
  }
  return {
    get check() {
      return check;
    },
    get eq() {
      return eq;
    },
    get lt() {
      return lt;
    },
    get gt() {
      return gt;
    },
    get lte() {
      return lte;
    },
    get gte() {
      return gte;
    },
    get fromIntArray() {
      return fromIntArray;
    },
    get toString() {
      return toString;
    },
    get displayNativeString() {
      return displayNativeString;
    },
    get hashForEqual() {
      return hashForEqual;
    }
  };
})();
var $__runtime_47_core_47_char_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/char.js";
  var Primitive = ($__runtime_47_core_47_primitive_46_js__).Primitive;
  var Char = function($__super) {
    function Char(codepoint, nativeString) {
      $traceurRuntime.superConstructor(Char).call(this);
      this.codepoint = codepoint;
      this._nativeString = nativeString;
    }
    return ($traceurRuntime.createClass)(Char, {
      equals: function(v) {
        return check(v) && eq(this, v);
      },
      isImmutable: function() {
        return true;
      },
      valueOf: function() {
        return this.codepoint;
      },
      toString: function() {
        if (this._nativeString === null) {
          this._nativeString = String.fromCodePoint(this.codepoint);
        }
        return this._nativeString;
      },
      hashForEqual: function() {
        return this.codepoint;
      },
      displayNativeString: function(out) {
        out.consume(this.toString());
      },
      writeNativeString: function(out) {
        var c = this.codepoint;
        switch (c) {
          case 0:
            out.consume('#\\nul');
            break;
          case 8:
            out.consume('#\\backspace');
            break;
          case 9:
            out.consume('#\\tab');
            break;
          case 10:
            out.consume('#\\newline');
            break;
          case 11:
            out.consume('#\\vtab');
            break;
          case 12:
            out.consume('#\\page');
            break;
          case 13:
            out.consume('#\\return');
            break;
          case 32:
            out.consume('#\\space');
            break;
          case 127:
            out.consume('#\\rubout');
            break;
          default:
            if (isGraphicCodepoint(c)) {
              out.consume(("#\\" + this.toString()));
            } else {
              out.consume(c > 0xFFFF ? ("#\\U" + c.toString(16).toUpperCase().padStart(8, '0')) : ("#\\u" + c.toString(16).toUpperCase().padStart(4, '0')));
            }
        }
      },
      printNativeString: function(out) {
        this.writeNativeString(out);
      },
      printUString: function(out) {
        this.writeUString(out);
      }
    }, {}, $__super);
  }(Primitive);
  var INTERN_CACHE_SIZE = 256;
  var internedCache = new Array(INTERN_CACHE_SIZE);
  function charFromCodepoint(codepoint) {
    if (codepoint < INTERN_CACHE_SIZE) {
      if (internedCache[codepoint] === undefined) {
        internedCache[codepoint] = new Char(codepoint, null);
      }
      return internedCache[codepoint];
    }
    return new Char(codepoint, null);
  }
  function charFromNativeString(s) {
    var codepoint = s.codePointAt(0);
    if (codepoint < INTERN_CACHE_SIZE) {
      if (internedCache[codepoint] === undefined) {
        internedCache[codepoint] = new Char(codepoint, s);
      }
      return internedCache[codepoint];
    }
    return new Char(codepoint, s);
  }
  function check(char) {
    return (typeof char === 'undefined' ? 'undefined' : $traceurRuntime.typeof(char)) === 'object' && char !== null && char.constructor === Char;
  }
  function eq(a, b) {
    return a.codepoint === b.codepoint;
  }
  function charToInteger(c) {
    return c.codepoint;
  }
  function integerToChar(k) {
    return charFromCodepoint(k);
  }
  function charUtf8Length(c) {
    var cp = c.codepoint;
    if (cp < 0x80) {
      return 1;
    } else if (cp < 0x800) {
      return 2;
    } else if (cp < 0x10000) {
      return 3;
    } else if (cp < 0x200000) {
      return 4;
    } else if (cp < 0x4000000) {
      return 5;
    }
    return 6;
  }
  function isGraphicCodepoint(c) {
    return (c > 32 && c < 127 || (c > 160 && c < 896 && !(c === 173 || c > 887 && c < 890)) || (c > 899 && c < 1480 && !(c === 1328 || c > 1366 && c < 1369 || c === 1376 || c === 1416 || c > 1418 && c < 1421 || c === 1424 || (c > 906 && c < 910 && c !== 908) || c === 930)) || c > 1487 && c < 1515 || c > 1519 && c < 1525 || (c > 1541 && c < 1970 && !(c > 1563 && c < 1566 || c === 1757 || c > 1805 && c < 1808 || c > 1866 && c < 1869)) || c > 1983 && c < 2043);
  }
  function isBlankCodepoint(c) {
    return (c === 9 || c === 32 || c === 160 || c === 5760 || c > 8191 && c < 8203 || c === 8239 || c === 8287 || c === 12288);
  }
  function isWhitespaceCodepoint(c) {
    return (c > 8 && c < 14 || c === 32 || c === 133 || c === 160 || c === 5760 || c > 8191 && c < 8203 || c > 8231 && c < 8234 || c === 8239 || c === 8287 || c === 12288);
  }
  return {
    get Char() {
      return Char;
    },
    get charFromCodepoint() {
      return charFromCodepoint;
    },
    get charFromNativeString() {
      return charFromNativeString;
    },
    get check() {
      return check;
    },
    get eq() {
      return eq;
    },
    get charToInteger() {
      return charToInteger;
    },
    get integerToChar() {
      return integerToChar;
    },
    get charUtf8Length() {
      return charUtf8Length;
    },
    get isGraphicCodepoint() {
      return isGraphicCodepoint;
    },
    get isBlankCodepoint() {
      return isBlankCodepoint;
    },
    get isWhitespaceCodepoint() {
      return isWhitespaceCodepoint;
    }
  };
})();
var $__runtime_47_third_45_party_47_hamt_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/third-party/hamt.js";
  var _typeof = typeof Symbol === "function" && $traceurRuntime.typeof(Symbol.iterator) === "symbol" ? function(obj) {
    return (typeof obj === 'undefined' ? 'undefined' : $traceurRuntime.typeof(obj));
  } : function(obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : (typeof obj === 'undefined' ? 'undefined' : $traceurRuntime.typeof(obj));
  };
  var hamt = {};
  var SIZE = 5;
  var BUCKET_SIZE = Math.pow(2, SIZE);
  var MASK = BUCKET_SIZE - 1;
  var MAX_INDEX_NODE = BUCKET_SIZE / 2;
  var MIN_ARRAY_NODE = BUCKET_SIZE / 4;
  var nothing = {};
  var constant = function constant(x) {
    return function() {
      return x;
    };
  };
  var hash = hamt.hash = function(str) {
    var type = typeof str === 'undefined' ? 'undefined' : _typeof(str);
    if (type === 'number')
      return str;
    if (type !== 'string')
      str += '';
    var hash = 0;
    for (var i = 0,
        len = str.length; i < len; ++i) {
      var c = str.charCodeAt(i);
      hash = (hash << 5) - hash + c | 0;
    }
    return hash;
  };
  var popcount = function popcount(x) {
    x -= x >> 1 & 0x55555555;
    x = (x & 0x33333333) + (x >> 2 & 0x33333333);
    x = x + (x >> 4) & 0x0f0f0f0f;
    x += x >> 8;
    x += x >> 16;
    return x & 0x7f;
  };
  var hashFragment = function hashFragment(shift, h) {
    return h >>> shift & MASK;
  };
  var toBitmap = function toBitmap(x) {
    return 1 << x;
  };
  var fromBitmap = function fromBitmap(bitmap, bit) {
    return popcount(bitmap & bit - 1);
  };
  var arrayUpdate = function arrayUpdate(mutate, at, v, arr) {
    var out = arr;
    if (!mutate) {
      var len = arr.length;
      out = new Array(len);
      for (var i = 0; i < len; ++i) {
        out[i] = arr[i];
      }
    }
    out[at] = v;
    return out;
  };
  var arraySpliceOut = function arraySpliceOut(mutate, at, arr) {
    var newLen = arr.length - 1;
    var i = 0;
    var g = 0;
    var out = arr;
    if (mutate) {
      i = g = at;
    } else {
      out = new Array(newLen);
      while (i < at) {
        out[g++] = arr[i++];
      }
    }
    ++i;
    while (i <= newLen) {
      out[g++] = arr[i++];
    }
    if (mutate) {
      out.length = newLen;
    }
    return out;
  };
  var arraySpliceIn = function arraySpliceIn(mutate, at, v, arr) {
    var len = arr.length;
    if (mutate) {
      var _i = len;
      while (_i >= at) {
        arr[_i--] = arr[_i];
      }
      arr[at] = v;
      return arr;
    }
    var i = 0,
        g = 0;
    var out = new Array(len + 1);
    while (i < at) {
      out[g++] = arr[i++];
    }
    out[at] = v;
    while (i < len) {
      out[++g] = arr[i++];
    }
    return out;
  };
  var LEAF = 1;
  var COLLISION = 2;
  var INDEX = 3;
  var ARRAY = 4;
  var empty = {__hamt_isEmpty: true};
  var isEmptyNode = function isEmptyNode(x) {
    return x === empty || x && x.__hamt_isEmpty;
  };
  var Leaf = function Leaf(edit, hash, key, value) {
    return {
      type: LEAF,
      edit: edit,
      hash: hash,
      key: key,
      value: value,
      _modify: Leaf__modify
    };
  };
  var Collision = function Collision(edit, hash, children) {
    return {
      type: COLLISION,
      edit: edit,
      hash: hash,
      children: children,
      _modify: Collision__modify
    };
  };
  var IndexedNode = function IndexedNode(edit, mask, children) {
    return {
      type: INDEX,
      edit: edit,
      mask: mask,
      children: children,
      _modify: IndexedNode__modify
    };
  };
  var ArrayNode = function ArrayNode(edit, size, children) {
    return {
      type: ARRAY,
      edit: edit,
      size: size,
      children: children,
      _modify: ArrayNode__modify
    };
  };
  var isLeaf = function isLeaf(node) {
    return node === empty || node.type === LEAF || node.type === COLLISION;
  };
  var expand = function expand(edit, frag, child, bitmap, subNodes) {
    var arr = [];
    var bit = bitmap;
    var count = 0;
    for (var i = 0; bit; ++i) {
      if (bit & 1)
        arr[i] = subNodes[count++];
      bit >>>= 1;
    }
    arr[frag] = child;
    return ArrayNode(edit, count + 1, arr);
  };
  var pack = function pack(edit, count, removed, elements) {
    var children = new Array(count - 1);
    var g = 0;
    var bitmap = 0;
    for (var i = 0,
        len = elements.length; i < len; ++i) {
      if (i !== removed) {
        var elem = elements[i];
        if (elem && !isEmptyNode(elem)) {
          children[g++] = elem;
          bitmap |= 1 << i;
        }
      }
    }
    return IndexedNode(edit, bitmap, children);
  };
  var mergeLeaves = function mergeLeaves(edit, shift, h1, n1, h2, n2) {
    if (h1 === h2)
      return Collision(edit, h1, [n2, n1]);
    var subH1 = hashFragment(shift, h1);
    var subH2 = hashFragment(shift, h2);
    return IndexedNode(edit, toBitmap(subH1) | toBitmap(subH2), subH1 === subH2 ? [mergeLeaves(edit, shift + SIZE, h1, n1, h2, n2)] : subH1 < subH2 ? [n1, n2] : [n2, n1]);
  };
  var updateCollisionList = function updateCollisionList(mutate, edit, keyEq, h, list, f, k, size) {
    var len = list.length;
    for (var i = 0; i < len; ++i) {
      var child = list[i];
      if (keyEq(k, child.key)) {
        var value = child.value;
        var _newValue = f(value);
        if (_newValue === value)
          return list;
        if (_newValue === nothing) {
          --size.value;
          return arraySpliceOut(mutate, i, list);
        }
        return arrayUpdate(mutate, i, Leaf(edit, h, k, _newValue), list);
      }
    }
    var newValue = f();
    if (newValue === nothing)
      return list;
    ++size.value;
    return arrayUpdate(mutate, len, Leaf(edit, h, k, newValue), list);
  };
  var canEditNode = function canEditNode(edit, node) {
    return edit === node.edit;
  };
  var Leaf__modify = function Leaf__modify(edit, keyEq, shift, f, h, k, size) {
    if (keyEq(k, this.key)) {
      var _v = f(this.value);
      if (_v === this.value)
        return this;
      else if (_v === nothing) {
        --size.value;
        return empty;
      }
      if (canEditNode(edit, this)) {
        this.value = _v;
        return this;
      }
      return Leaf(edit, h, k, _v);
    }
    var v = f();
    if (v === nothing)
      return this;
    ++size.value;
    return mergeLeaves(edit, shift, this.hash, this, h, Leaf(edit, h, k, v));
  };
  var Collision__modify = function Collision__modify(edit, keyEq, shift, f, h, k, size) {
    if (h === this.hash) {
      var canEdit = canEditNode(edit, this);
      var list = updateCollisionList(canEdit, edit, keyEq, this.hash, this.children, f, k, size);
      if (list === this.children)
        return this;
      return list.length > 1 ? Collision(edit, this.hash, list) : list[0];
    }
    var v = f();
    if (v === nothing)
      return this;
    ++size.value;
    return mergeLeaves(edit, shift, this.hash, this, h, Leaf(edit, h, k, v));
  };
  var IndexedNode__modify = function IndexedNode__modify(edit, keyEq, shift, f, h, k, size) {
    var mask = this.mask;
    var children = this.children;
    var frag = hashFragment(shift, h);
    var bit = toBitmap(frag);
    var indx = fromBitmap(mask, bit);
    var exists = mask & bit;
    var current = exists ? children[indx] : empty;
    var child = current._modify(edit, keyEq, shift + SIZE, f, h, k, size);
    if (current === child)
      return this;
    var canEdit = canEditNode(edit, this);
    var bitmap = mask;
    var newChildren = void 0;
    if (exists && isEmptyNode(child)) {
      bitmap &= ~bit;
      if (!bitmap)
        return empty;
      if (children.length <= 2 && isLeaf(children[indx ^ 1]))
        return children[indx ^ 1];
      newChildren = arraySpliceOut(canEdit, indx, children);
    } else if (!exists && !isEmptyNode(child)) {
      if (children.length >= MAX_INDEX_NODE)
        return expand(edit, frag, child, mask, children);
      bitmap |= bit;
      newChildren = arraySpliceIn(canEdit, indx, child, children);
    } else {
      newChildren = arrayUpdate(canEdit, indx, child, children);
    }
    if (canEdit) {
      this.mask = bitmap;
      this.children = newChildren;
      return this;
    }
    return IndexedNode(edit, bitmap, newChildren);
  };
  var ArrayNode__modify = function ArrayNode__modify(edit, keyEq, shift, f, h, k, size) {
    var count = this.size;
    var children = this.children;
    var frag = hashFragment(shift, h);
    var child = children[frag];
    var newChild = (child || empty)._modify(edit, keyEq, shift + SIZE, f, h, k, size);
    if (child === newChild)
      return this;
    var canEdit = canEditNode(edit, this);
    var newChildren = void 0;
    if (isEmptyNode(child) && !isEmptyNode(newChild)) {
      ++count;
      newChildren = arrayUpdate(canEdit, frag, newChild, children);
    } else if (!isEmptyNode(child) && isEmptyNode(newChild)) {
      --count;
      if (count <= MIN_ARRAY_NODE)
        return pack(edit, count, frag, children);
      newChildren = arrayUpdate(canEdit, frag, empty, children);
    } else {
      newChildren = arrayUpdate(canEdit, frag, newChild, children);
    }
    if (canEdit) {
      this.size = count;
      this.children = newChildren;
      return this;
    }
    return ArrayNode(edit, count, newChildren);
  };
  empty._modify = function(edit, keyEq, shift, f, h, k, size) {
    var v = f();
    if (v === nothing)
      return empty;
    ++size.value;
    return Leaf(edit, h, k, v);
  };
  function Map(editable, edit, config, root, size) {
    this._editable = editable;
    this._edit = edit;
    this._config = config;
    this._root = root;
    this._size = size;
  }
  ;
  Map.prototype.setTree = function(newRoot, newSize) {
    if (this._editable) {
      this._root = newRoot;
      this._size = newSize;
      return this;
    }
    return newRoot === this._root ? this : new Map(this._editable, this._edit, this._config, newRoot, newSize);
  };
  var tryGetHash = hamt.tryGetHash = function(alt, hash, key, map) {
    var node = map._root;
    var shift = 0;
    var keyEq = map._config.keyEq;
    while (true) {
      switch (node.type) {
        case LEAF:
          {
            return keyEq(key, node.key) ? node.value : alt;
          }
        case COLLISION:
          {
            if (hash === node.hash) {
              var children = node.children;
              for (var i = 0,
                  len = children.length; i < len; ++i) {
                var child = children[i];
                if (keyEq(key, child.key))
                  return child.value;
              }
            }
            return alt;
          }
        case INDEX:
          {
            var frag = hashFragment(shift, hash);
            var bit = toBitmap(frag);
            if (node.mask & bit) {
              node = node.children[fromBitmap(node.mask, bit)];
              shift += SIZE;
              break;
            }
            return alt;
          }
        case ARRAY:
          {
            node = node.children[hashFragment(shift, hash)];
            if (node) {
              shift += SIZE;
              break;
            }
            return alt;
          }
        default:
          return alt;
      }
    }
  };
  Map.prototype.tryGetHash = function(alt, hash, key) {
    return tryGetHash(alt, hash, key, this);
  };
  var tryGet = hamt.tryGet = function(alt, key, map) {
    return tryGetHash(alt, map._config.hash(key), key, map);
  };
  Map.prototype.tryGet = function(alt, key) {
    return tryGet(alt, key, this);
  };
  var getHash = hamt.getHash = function(hash, key, map) {
    return tryGetHash(undefined, hash, key, map);
  };
  Map.prototype.getHash = function(hash, key) {
    return getHash(hash, key, this);
  };
  var get = hamt.get = function(key, map) {
    return tryGetHash(undefined, map._config.hash(key), key, map);
  };
  Map.prototype.get = function(key, alt) {
    return tryGet(alt, key, this);
  };
  var hasHash = hamt.has = function(hash, key, map) {
    return tryGetHash(nothing, hash, key, map) !== nothing;
  };
  Map.prototype.hasHash = function(hash, key) {
    return hasHash(hash, key, this);
  };
  var has = hamt.has = function(key, map) {
    return hasHash(map._config.hash(key), key, map);
  };
  Map.prototype.has = function(key) {
    return has(key, this);
  };
  var defKeyCompare = function defKeyCompare(x, y) {
    return x === y;
  };
  hamt.make = function(config) {
    return new Map(0, 0, {
      keyEq: config && config.keyEq || defKeyCompare,
      hash: config && config.hash || hash
    }, empty, 0);
  };
  hamt.empty = hamt.make();
  var isEmpty = hamt.isEmpty = function(map) {
    return map && !!isEmptyNode(map._root);
  };
  Map.prototype.isEmpty = function() {
    return isEmpty(this);
  };
  var modifyHash = hamt.modifyHash = function(f, hash, key, map) {
    var size = {value: map._size};
    var newRoot = map._root._modify(map._editable ? map._edit : NaN, map._config.keyEq, 0, f, hash, key, size);
    return map.setTree(newRoot, size.value);
  };
  Map.prototype.modifyHash = function(hash, key, f) {
    return modifyHash(f, hash, key, this);
  };
  var modify = hamt.modify = function(f, key, map) {
    return modifyHash(f, map._config.hash(key), key, map);
  };
  Map.prototype.modify = function(key, f) {
    return modify(f, key, this);
  };
  var setHash = hamt.setHash = function(hash, key, value, map) {
    return modifyHash(constant(value), hash, key, map);
  };
  Map.prototype.setHash = function(hash, key, value) {
    return setHash(hash, key, value, this);
  };
  var set = hamt.set = function(key, value, map) {
    return setHash(map._config.hash(key), key, value, map);
  };
  Map.prototype.set = function(key, value) {
    return set(key, value, this);
  };
  var del = constant(nothing);
  var removeHash = hamt.removeHash = function(hash, key, map) {
    return modifyHash(del, hash, key, map);
  };
  Map.prototype.removeHash = Map.prototype.deleteHash = function(hash, key) {
    return removeHash(hash, key, this);
  };
  var remove = hamt.remove = function(key, map) {
    return removeHash(map._config.hash(key), key, map);
  };
  Map.prototype.remove = Map.prototype.delete = function(key) {
    return remove(key, this);
  };
  var beginMutation = hamt.beginMutation = function(map) {
    return new Map(map._editable + 1, map._edit + 1, map._config, map._root, map._size);
  };
  Map.prototype.beginMutation = function() {
    return beginMutation(this);
  };
  var endMutation = hamt.endMutation = function(map) {
    map._editable = map._editable && map._editable - 1;
    return map;
  };
  Map.prototype.endMutation = function() {
    return endMutation(this);
  };
  var mutate = hamt.mutate = function(f, map) {
    var transient = beginMutation(map);
    f(transient);
    return endMutation(transient);
  };
  Map.prototype.mutate = function(f) {
    return mutate(f, this);
  };
  var appk = function appk(k) {
    return k && lazyVisitChildren(k[0], k[1], k[2], k[3], k[4]);
  };
  var lazyVisitChildren = function lazyVisitChildren(len, children, i, f, k) {
    while (i < len) {
      var child = children[i++];
      if (child && !isEmptyNode(child))
        return lazyVisit(child, f, [len, children, i, f, k]);
    }
    return appk(k);
  };
  var lazyVisit = function lazyVisit(node, f, k) {
    switch (node.type) {
      case LEAF:
        return {
          value: f(node),
          rest: k
        };
      case COLLISION:
      case ARRAY:
      case INDEX:
        var children = node.children;
        return lazyVisitChildren(children.length, children, 0, f, k);
      default:
        return appk(k);
    }
  };
  var DONE = {done: true};
  function MapIterator(v) {
    this.v = v;
  }
  ;
  MapIterator.prototype.next = function() {
    if (!this.v)
      return DONE;
    var v0 = this.v;
    this.v = appk(v0.rest);
    return v0;
  };
  MapIterator.prototype[Symbol.iterator] = function() {
    return this;
  };
  var visit = function visit(map, f) {
    return new MapIterator(lazyVisit(map._root, f));
  };
  var buildPairs = function buildPairs(x) {
    return [x.key, x.value];
  };
  var entries = hamt.entries = function(map) {
    return visit(map, buildPairs);
  };
  Map.prototype.entries = Map.prototype[Symbol.iterator] = function() {
    return entries(this);
  };
  var buildKeys = function buildKeys(x) {
    return x.key;
  };
  var keys = hamt.keys = function(map) {
    return visit(map, buildKeys);
  };
  Map.prototype.keys = function() {
    return keys(this);
  };
  var buildValues = function buildValues(x) {
    return x.value;
  };
  var values = hamt.values = Map.prototype.values = function(map) {
    return visit(map, buildValues);
  };
  Map.prototype.values = function() {
    return values(this);
  };
  var fold = hamt.fold = function(f, z, m) {
    var root = m._root;
    if (root.type === LEAF)
      return f(z, root.value, root.key);
    var toVisit = [root.children];
    var children = void 0;
    while (children = toVisit.pop()) {
      for (var i = 0,
          len = children.length; i < len; ) {
        var child = children[i++];
        if (child && child.type) {
          if (child.type === LEAF)
            z = f(z, child.value, child.key);
          else
            toVisit.push(child.children);
        }
      }
    }
    return z;
  };
  Map.prototype.fold = function(f, z) {
    return fold(f, z, this);
  };
  var forEach = hamt.forEach = function(f, map) {
    return fold(function(_, value, key) {
      return f(value, key, map);
    }, null, map);
  };
  Map.prototype.forEach = function(f) {
    return forEach(f, this);
  };
  var count = hamt.count = function(map) {
    return map._size;
  };
  Map.prototype.count = function() {
    return count(this);
  };
  Object.defineProperty(Map.prototype, 'size', {get: Map.prototype.count});
  ;
  return {get hamt() {
      return hamt;
    }};
})();
var $__runtime_47_core_47_lib_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/lib.js";
  ;
  function argumentsToArray(args) {
    return Array.prototype.slice.call(args, 0);
  }
  function argumentsSlice(a, i) {
    return [].slice.call(a, i);
  }
  function attachReadOnlyProperty(o, k, v) {
    return Object.defineProperty(o, k, {
      value: v,
      writable: false,
      configurable: false
    });
  }
  function internedMake(f) {
    var cache = new Map();
    return function(v) {
      v = v.toString();
      var result = cache.get(v);
      if (result === undefined) {
        result = f(v);
        cache.set(v, result);
      }
      return result;
    };
  }
  return {
    get hamt() {
      return $__runtime_47_third_45_party_47_hamt_46_js__.hamt;
    },
    get argumentsToArray() {
      return argumentsToArray;
    },
    get argumentsSlice() {
      return argumentsSlice;
    },
    get attachReadOnlyProperty() {
      return attachReadOnlyProperty;
    },
    get internedMake() {
      return internedMake;
    }
  };
})();
var $__runtime_47_core_47_unicode_95_string_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/unicode_string.js";
  var Primitive = ($__runtime_47_core_47_primitive_46_js__).Primitive;
  var Bytes = $__runtime_47_core_47_bytes_46_js__;
  var Char = $__runtime_47_core_47_char_46_js__;
  var MiniNativeOutputStringPort = ($__runtime_47_core_47_mini_95_native_95_output_95_string_95_port_46_js__).MiniNativeOutputStringPort;
  var internedMake = ($__runtime_47_core_47_lib_46_js__).internedMake;
  var hashIntArray = ($__runtime_47_core_47_raw_95_hashing_46_js__).hashIntArray;
  var TextEncoder = (typeof window === 'undefined') ? require('util').TextEncoder : window.TextEncoder;
  var UString = function($__super) {
    function UString(chars, nativeString) {
      $traceurRuntime.superConstructor(UString).call(this);
      this.chars = chars;
      this._nativeString = nativeString;
      this._cachedHashCode = null;
    }
    return ($traceurRuntime.createClass)(UString, {
      get length() {
        return this.chars.length;
      },
      toString: function() {
        if (this._nativeString === null) {
          this._nativeString = this.chars.join('');
        }
        return this._nativeString;
      },
      charAt: function(i) {
        return this.chars[i];
      },
      toLowerCase: function() {
        return makeMutable(this.toString().toLowerCase());
      },
      toUpperCase: function() {
        return makeMutable(this.toString().toUpperCase());
      },
      substring: function(start, end) {
        return new MutableUString(this.chars.slice(start, end), null);
      },
      split: function(sep) {
        return this.toString().split(sep).map(function(s) {
          return makeMutable(s);
        });
      },
      isValidIndex: function(i) {
        return i < this.length;
      },
      isEmpty: function() {
        return this.length === 0;
      },
      valueOf: function() {
        return this.toString();
      },
      equals: function(v) {
        return check(v) && this.toString() === v.toString();
      },
      hashForEqual: function() {
        if (this._cachedHashCode === null) {
          this._cachedHashCode = hashIntArray(this.chars);
        }
        return this._cachedHashCode;
      },
      displayNativeString: function(out) {
        out.consume(this.toString());
      },
      displayUString: function(out) {
        out.consume(this);
      },
      writeNativeString: function(out) {
        out.consume('"');
        var $__7 = true;
        var $__8 = false;
        var $__9 = undefined;
        try {
          for (var $__5 = void 0,
              $__4 = (this.chars)[Symbol.iterator](); !($__7 = ($__5 = $__4.next()).done); $__7 = true) {
            var char = $__5.value;
            {
              var c = char.codepoint;
              switch (c) {
                case 7:
                  out.consume('\\a');
                  break;
                case 8:
                  out.consume('\\b');
                  break;
                case 9:
                  out.consume('\\t');
                  break;
                case 11:
                  out.consume('\\v');
                  break;
                case 12:
                  out.consume('\\f');
                  break;
                case 10:
                  out.consume('\\n');
                  break;
                case 13:
                  out.consume('\\r');
                  break;
                case 27:
                  out.consume('\\e');
                  break;
                case 34:
                  out.consume('\\"');
                  break;
                case 92:
                  out.consume('\\\\');
                  break;
                default:
                  if (Char.isGraphicCodepoint(c) || Char.isBlankCodepoint(c)) {
                    out.consume(char.toString());
                  } else {
                    out.consume(c > 0xFFFF ? ("\\U" + c.toString(16).toUpperCase().padStart(8, '0')) : ("\\u" + c.toString(16).toUpperCase().padStart(4, '0')));
                  }
              }
            }
          }
        } catch ($__10) {
          $__8 = true;
          $__9 = $__10;
        } finally {
          try {
            if (!$__7 && $__4.return != null) {
              $__4.return();
            }
          } finally {
            if ($__8) {
              throw $__9;
            }
          }
        }
        out.consume('"');
      },
      writeUString: function(out) {
        var stringOut = new MiniNativeOutputStringPort();
        this.writeNativeString(stringOut);
        out.consume(makeMutable(stringOut.getOutputString()));
      },
      printNativeString: function(out) {
        this.writeNativeString(out);
      },
      printUString: function(out) {
        this.writeUString(out);
      },
      isValidInteger: function(radix) {
        var chars = this.chars;
        var startFrom = chars[0].codepoint === 45 ? 1 : 0;
        if (radix > 10) {
          var maxLowercase = 86 + radix;
          var maxUppercase = maxLowercase - 32;
          for (var i = startFrom; i < chars.length; ++i) {
            var cp = chars[i].codepoint;
            if (cp < 48 || cp > maxLowercase || cp > maxUppercase && cp < 97 || cp > 57 && cp < 65)
              return false;
          }
        } else {
          var max = 47 + radix;
          for (var i$__14 = startFrom; i$__14 < chars.length; ++i$__14) {
            var cp$__15 = chars[i$__14].codepoint;
            if (cp$__15 < 48 || cp$__15 > max)
              return false;
          }
        }
        return true;
      }
    }, {}, $__super);
  }(Primitive);
  var ImmutableUString = function($__super) {
    function ImmutableUString() {
      $traceurRuntime.superConstructor(ImmutableUString).apply(this, arguments);
    }
    return ($traceurRuntime.createClass)(ImmutableUString, {isImmutable: function() {
        return true;
      }}, {}, $__super);
  }(UString);
  var ImmutableBMPString = function($__super) {
    function ImmutableBMPString() {
      $traceurRuntime.superConstructor(ImmutableBMPString).apply(this, arguments);
    }
    return ($traceurRuntime.createClass)(ImmutableBMPString, {
      substring: function(start, end) {
        return new MutableUString(this.chars.slice(start, end), this.toString().substring(start, end));
      },
      writeNativeString: function(out) {
        out.consume(JSON.stringify(this.toString()));
      }
    }, {}, $__super);
  }(ImmutableUString);
  var MutableUString = function($__super) {
    function MutableUString() {
      $traceurRuntime.superConstructor(MutableUString).apply(this, arguments);
    }
    return ($traceurRuntime.createClass)(MutableUString, {
      isImmutable: function() {
        return false;
      },
      setCharAt: function(i, char) {
        if (!Char.eq(char, this.chars[i])) {
          this.chars[i] = char;
          this._nativeString = null;
          this._cachedHashCode = null;
        }
      }
    }, {}, $__super);
  }(UString);
  function nativeStringToChars(nativeString) {
    return Array.from(nativeString, Char.charFromNativeString);
  }
  var makeInternedImmutable = internedMake(function(nativeString) {
    return makeImmutable(nativeString);
  });
  var make = makeInternedImmutable;
  function makeImmutable(nativeString) {
    return makeImmutableFromCharsAndNativeString(nativeStringToChars(nativeString), nativeString);
  }
  function makeImmutableFromCharsAndNativeString(chars, nativeString) {
    return chars.length === nativeString.length ? new ImmutableBMPString(chars, nativeString) : new ImmutableUString(chars, nativeString);
  }
  function makeMutable(nativeString) {
    return new MutableUString(nativeStringToChars(nativeString), nativeString);
  }
  function makeMutableFromChars(chars) {
    return new MutableUString(chars, null);
  }
  function copyAsMutable(str) {
    return new MutableUString(str.chars, str._nativeString);
  }
  function makeMutableFromCharsVarArgs() {
    for (var chars = [],
        $__11 = 0; $__11 < arguments.length; $__11++)
      chars[$__11] = arguments[$__11];
    return makeMutableFromChars(chars);
  }
  function stringToImmutableString(v) {
    return v instanceof ImmutableUString ? v : makeImmutableFromCharsAndNativeString(v.chars, v.toString());
  }
  function check(v) {
    return v instanceof UString;
  }
  function eq(a, b) {
    return a.toString() === b.toString();
  }
  function lt(a, b) {
    var n = Math.min(a.length, b.length);
    for (var i = 0; i < n; i++) {
      if (!Char.eq(a.chars[i], b.chars[i])) {
        return a.chars[i] < b.chars[i];
      }
    }
    return (a.length < b.length);
  }
  function gt(a, b) {
    var n = Math.min(a.length, b.length);
    for (var i = 0; i < n; i++) {
      if (!Char.eq(a.chars[i], b.chars[i])) {
        return a.chars[i] > b.chars[i];
      }
    }
    return (a.length > b.length);
  }
  function lte(a, b) {
    return !gt(a, b);
  }
  function gte(a, b) {
    return !lt(a, b);
  }
  function repeatChar(k, c) {
    var chars = new Array(k);
    chars.fill(c.toString());
    return new MutableUString(chars, null);
  }
  var utf8Encoder = new TextEncoder();
  function toBytesUtf8(str) {
    return utf8Encoder.encode(str.toString());
  }
  function fromBytesUtf8(bytes) {
    return makeMutable(Bytes.toString(bytes));
  }
  function stringAppend() {
    var $__13;
    for (var strs = [],
        $__12 = 0; $__12 < arguments.length; $__12++)
      strs[$__12] = arguments[$__12];
    return makeMutableFromChars(($__13 = []).concat.apply($__13, $traceurRuntime.spread(strs.map(function(s) {
      return s.chars;
    }))));
  }
  Char.Char.prototype.displayUString = function(out) {
    out.consume(new MutableUString([this], this._nativeString));
  };
  Char.Char.prototype.writeUString = function(out) {
    var stringOut = new MiniNativeOutputStringPort();
    this.writeNativeString(stringOut);
    out.consume(makeMutable(stringOut.getOutputString()));
  };
  return {
    get UString() {
      return UString;
    },
    get makeInternedImmutable() {
      return makeInternedImmutable;
    },
    get make() {
      return make;
    },
    get makeImmutable() {
      return makeImmutable;
    },
    get makeMutable() {
      return makeMutable;
    },
    get makeMutableFromChars() {
      return makeMutableFromChars;
    },
    get copyAsMutable() {
      return copyAsMutable;
    },
    get makeMutableFromCharsVarArgs() {
      return makeMutableFromCharsVarArgs;
    },
    get stringToImmutableString() {
      return stringToImmutableString;
    },
    get check() {
      return check;
    },
    get eq() {
      return eq;
    },
    get lt() {
      return lt;
    },
    get gt() {
      return gt;
    },
    get lte() {
      return lte;
    },
    get gte() {
      return gte;
    },
    get repeatChar() {
      return repeatChar;
    },
    get toBytesUtf8() {
      return toBytesUtf8;
    },
    get fromBytesUtf8() {
      return fromBytesUtf8;
    },
    get stringAppend() {
      return stringAppend;
    }
  };
})();
var $__runtime_47_core_47_printable_95_primitive_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/printable_primitive.js";
  var Primitive = ($__runtime_47_core_47_primitive_46_js__).Primitive;
  var MiniNativeOutputStringPort = ($__runtime_47_core_47_mini_95_native_95_output_95_string_95_port_46_js__).MiniNativeOutputStringPort;
  var UString = $__runtime_47_core_47_unicode_95_string_46_js__;
  var PRINT_PREFIX_USTRING = UString.makeInternedImmutable("'");
  var PrintablePrimitive = function($__super) {
    function PrintablePrimitive() {
      $traceurRuntime.superConstructor(PrintablePrimitive).apply(this, arguments);
    }
    return ($traceurRuntime.createClass)(PrintablePrimitive, {
      displayUString: function(out) {
        var stringOut = new MiniNativeOutputStringPort();
        this.displayNativeString(stringOut);
        out.consume(UString.makeMutable(stringOut.getOutputString()));
      },
      writeNativeString: function(out) {
        this.displayNativeString(out);
      },
      writeUString: function(out) {
        var stringOut = new MiniNativeOutputStringPort();
        this.writeNativeString(stringOut);
        out.consume(UString.makeMutable(stringOut.getOutputString()));
      },
      printNativeString: function(out) {
        out.consume("'");
        this.writeNativeString(out);
      },
      printUString: function(out) {
        out.consume(PRINT_PREFIX_USTRING);
        this.writeUString(out);
      },
      toString: function() {
        var out = new MiniNativeOutputStringPort();
        this.displayNativeString(out);
        return out.getOutputString();
      }
    }, {}, $__super);
  }(Primitive);
  return {get PrintablePrimitive() {
      return PrintablePrimitive;
    }};
})();
var $__runtime_47_core_47_equality_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/equality.js";
  var Primitive = $__runtime_47_core_47_primitive_46_js__;
  var Char = $__runtime_47_core_47_char_46_js__;
  var Bytes = $__runtime_47_core_47_bytes_46_js__;
  function isEq(v1, v2) {
    return v1 === v2;
  }
  function isEqv(v1, v2) {
    return v1 === v2 || Char.check(v1) && Char.check(v2) && Char.eq(v1, v2);
  }
  function isEqual(v1, v2) {
    if (v1 === v2)
      return true;
    if (Primitive.check(v1))
      return v1.equals(v2);
    if (Bytes.check(v1) && Bytes.check(v2))
      return Bytes.eq(v1, v2);
    return false;
  }
  return {
    get isEq() {
      return isEq;
    },
    get isEqv() {
      return isEqv;
    },
    get isEqual() {
      return isEqual;
    }
  };
})();
var $__runtime_47_core_47_hashing_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/hashing.js";
  var hash = ($__runtime_47_core_47_raw_95_hashing_46_js__).hash;
  var Primitive = $__runtime_47_core_47_primitive_46_js__;
  var Char = $__runtime_47_core_47_char_46_js__;
  var Bytes = $__runtime_47_core_47_bytes_46_js__;
  function hashForEq(o) {
    return hash(o);
  }
  function hashForEqv(o) {
    if (Char.check(o))
      return o.codepoint;
    return hash(o);
  }
  function hashForEqual(o) {
    if (Primitive.check(o))
      return o.hashForEqual();
    if (Bytes.check(o))
      return Bytes.hashForEqual(o);
    return hash(o);
  }
  return {
    get hashForEq() {
      return hashForEq;
    },
    get hashForEqv() {
      return hashForEqv;
    },
    get hashForEqual() {
      return hashForEqual;
    }
  };
})();
var $__runtime_47_core_47_procedure_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/procedure.js";
  function attachProcedureArity(fn, arity) {
    fn.__rjs_arityValue = arity || fn.length;
    return fn;
  }
  function attachProcedureName(fn, name) {
    fn.__rjs_name = name;
    return fn;
  }
  function check(v) {
    return typeof v === 'function';
  }
  function toString(f) {
    return f.__rjs_name ? ("#<procedure:" + f.__rjs_name + ">") : (f.name ? ("#<procedure:" + f.name + ">") : '#<procedure>');
  }
  function displayNativeString(out, f) {
    out.consume(toString(f));
  }
  return {
    get attachProcedureArity() {
      return attachProcedureArity;
    },
    get attachProcedureName() {
      return attachProcedureName;
    },
    get check() {
      return check;
    },
    get toString() {
      return toString;
    },
    get displayNativeString() {
      return displayNativeString;
    }
  };
})();
var $__runtime_47_core_47_print_95_native_95_string_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/print_native_string.js";
  var Primitive = $__runtime_47_core_47_primitive_46_js__;
  var Bytes = $__runtime_47_core_47_bytes_46_js__;
  var Procedure = $__runtime_47_core_47_procedure_46_js__;
  function displayNativeString(out, v) {
    if (v === true) {
      out.consume('#t');
    } else if (v === false) {
      out.consume('#f');
    } else if (v === undefined || v === null) {
      out.consume('#<void>');
    } else if (Primitive.check(v)) {
      v.displayNativeString(out);
    } else if (Bytes.check(v)) {
      Bytes.displayNativeString(out, v);
    } else if (Procedure.check(v)) {
      if (v.__rjs_struct_object) {
        v.__rjs_struct_object.displayNativeString(out);
      } else {
        Procedure.displayNativeString(out, v);
      }
    } else {
      out.consume(v.toString());
    }
  }
  function writeNativeString(out, v) {
    if (Primitive.check(v)) {
      v.writeNativeString(out);
    } else {
      displayNativeString(out, v);
    }
  }
  function printNativeString(out, v, printAsExpression, quoteDepth) {
    if (printAsExpression && quoteDepth !== 1 && Primitive.check(v)) {
      v.printNativeString(out);
    } else {
      writeNativeString(out, v);
    }
  }
  return {
    get displayNativeString() {
      return displayNativeString;
    },
    get writeNativeString() {
      return writeNativeString;
    },
    get printNativeString() {
      return printNativeString;
    }
  };
})();
var $__runtime_47_core_47_print_95_ustring_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/print_ustring.js";
  var Primitive = $__runtime_47_core_47_primitive_46_js__;
  var Bytes = $__runtime_47_core_47_bytes_46_js__;
  var Procedure = $__runtime_47_core_47_procedure_46_js__;
  var UString = $__runtime_47_core_47_unicode_95_string_46_js__;
  var TRUE_USTRING = UString.makeInternedImmutable('#t');
  var FALSE_USTRING = UString.makeInternedImmutable('#f');
  var VOID_USTRING = UString.makeInternedImmutable('#<void>');
  function displayUString(out, v) {
    if (v === true) {
      out.consume(TRUE_USTRING);
    } else if (v === false) {
      out.consume(FALSE_USTRING);
    } else if (v === undefined || v === null) {
      out.consume(VOID_USTRING);
    } else if (typeof v === 'number' || typeof v === 'string') {
      out.consume(UString.makeMutable(v.toString()));
    } else if (Primitive.check(v)) {
      v.displayUString(out);
    } else if (Bytes.check(v)) {
      out.consume(UString.makeMutable(Bytes.toString(v)));
    } else if (Procedure.check(v)) {
      if (v.__rjs_struct_object) {
        v.__rjs_struct_object.displayUString(out);
      } else {
        out.consume(UString.makeMutable(Procedure.toString(v)));
      }
    } else {
      out.consume(UString.makeMutable(v.toString()));
    }
  }
  function writeUString(out, v) {
    if (Primitive.check(v)) {
      v.writeUString(out);
    } else {
      displayUString(out, v);
    }
  }
  function printUString(out, v, printAsExpression, quoteDepth) {
    if (printAsExpression && quoteDepth !== 1 && Primitive.check(v)) {
      v.printUString(out);
    } else {
      writeUString(out, v);
    }
  }
  return {
    get displayUString() {
      return displayUString;
    },
    get writeUString() {
      return writeUString;
    },
    get printUString() {
      return printUString;
    }
  };
})();
var $__runtime_47_core_47_box_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/box.js";
  var PrintablePrimitive = ($__runtime_47_core_47_printable_95_primitive_46_js__).PrintablePrimitive;
  var isEqual = ($__runtime_47_core_47_equality_46_js__).isEqual;
  var hashForEqual = ($__runtime_47_core_47_hashing_46_js__).hashForEqual;
  var $__4 = $__runtime_47_core_47_print_95_native_95_string_46_js__,
      displayNativeString = $__4.displayNativeString,
      writeNativeString = $__4.writeNativeString;
  var $__5 = $__runtime_47_core_47_print_95_ustring_46_js__,
      displayUString = $__5.displayUString,
      writeUString = $__5.writeUString;
  var UString = $__runtime_47_core_47_unicode_95_string_46_js__;
  var BOX_PREFIX_USTRING = UString.makeInternedImmutable('#&');
  var Box = function($__super) {
    function Box(v) {
      $traceurRuntime.superConstructor(Box).call(this);
      this.value = v;
    }
    return ($traceurRuntime.createClass)(Box, {
      set: function(v) {
        this.value = v;
      },
      get: function() {
        return this.value;
      },
      equals: function(v) {
        return isEqual(v.value, this.value);
      },
      hashForEqual: function() {
        return hashForEqual(this.value);
      },
      displayNativeString: function(out) {
        out.consume('#&');
        displayNativeString(out, this.value);
      },
      displayUString: function(out) {
        out.consume(BOX_PREFIX_USTRING);
        displayUString(out, this.value);
      },
      writeNativeString: function(out) {
        out.consume('#&');
        writeNativeString(out, this.value);
      },
      writeUString: function(out) {
        out.consume(BOX_PREFIX_USTRING);
        writeUString(out, this.value);
      }
    }, {}, $__super);
  }(PrintablePrimitive);
  function make(v) {
    return new Box(v);
  }
  function check(v) {
    return (v instanceof Box);
  }
  return {
    get make() {
      return make;
    },
    get check() {
      return check;
    }
  };
})();
var $__runtime_47_core_47_pair_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/pair.js";
  var PrintablePrimitive = ($__runtime_47_core_47_printable_95_primitive_46_js__).PrintablePrimitive;
  var $__4 = $__runtime_47_core_47_print_95_native_95_string_46_js__,
      displayNativeString = $__4.displayNativeString,
      writeNativeString = $__4.writeNativeString;
  var isEqual = ($__runtime_47_core_47_equality_46_js__).isEqual;
  var Empty = function($__super) {
    function Empty() {
      $traceurRuntime.superConstructor(Empty).apply(this, arguments);
    }
    return ($traceurRuntime.createClass)(Empty, {
      equals: function(v) {
        return this === v;
      },
      get length() {
        return 0;
      },
      displayNativeString: function(out) {
        out.consume('()');
      },
      isImmutable: function() {
        return false;
      }
    }, {}, $__super);
  }(PrintablePrimitive);
  var EMPTY = new Empty();
  function isEmpty(v) {
    return v === EMPTY;
  }
  var Pair = function($__super) {
    function Pair(hd, tl) {
      $traceurRuntime.superConstructor(Pair).call(this);
      this.hd = hd;
      this.tl = tl;
      this._listLength = isList(tl) ? tl.length + 1 : -1;
      this._cachedHashCode = null;
    }
    return ($traceurRuntime.createClass)(Pair, {
      writeToPort: function(out, itemFn) {
        out.consume('(');
        var rest = this;
        while (true) {
          if (check(rest)) {
            itemFn(out, rest.hd);
          } else {
            out.consume('. ');
            itemFn(out, rest);
            break;
          }
          rest = rest.tl;
          if (isEmpty(rest)) {
            break;
          } else {
            out.consume(' ');
          }
        }
        out.consume(')');
      },
      displayNativeString: function(out) {
        this.writeToPort(out, displayNativeString);
      },
      writeNativeString: function(out) {
        this.writeToPort(out, writeNativeString);
      },
      equals: function(v) {
        if (!check(v) || this.length !== v.length) {
          return false;
        }
        var hd1 = this.hd;
        var tl1 = this.tl;
        var hd2 = v.hd;
        var tl2 = v.tl;
        while (true) {
          if (!isEqual(hd1, hd2)) {
            return false;
          }
          if (!check(tl1) || isEmpty(tl1)) {
            return isEqual(tl1, tl2);
          }
          hd1 = tl1.hd;
          tl1 = tl1.tl;
          hd2 = tl2.hd;
          tl2 = tl2.tl;
        }
      },
      hashForEqual: function() {
        if (this._cachedHashCode === null) {
          this._cachedHashCode = $traceurRuntime.superGet(this, Pair.prototype, "hashForEqual").call(this);
        }
        return this._cachedHashCode;
      },
      car: function() {
        return this.hd;
      },
      cdr: function() {
        return this.tl;
      },
      get length() {
        return this._listLength;
      },
      isImmutable: function() {
        return false;
      }
    }, {}, $__super);
  }(PrintablePrimitive);
  function check(v) {
    return (typeof v === 'undefined' ? 'undefined' : $traceurRuntime.typeof(v)) === 'object' && v !== null && v.constructor === Pair;
  }
  function make(hd, tl) {
    return new Pair(hd, tl);
  }
  function makeList() {
    for (var items = [],
        $__2 = 0; $__2 < arguments.length; $__2++)
      items[$__2] = arguments[$__2];
    return items.reduceRight(function(result, item) {
      return make(item, result);
    }, EMPTY);
  }
  function listToArray(lst) {
    var r = [];
    listForEach(lst, function(x) {
      return r.push(x);
    });
    return r;
  }
  function listFromArray(lst) {
    return makeList.apply((void 0), $traceurRuntime.spread(lst));
  }
  function listForEach(lst, fn) {
    while (!isEmpty(lst)) {
      fn(lst.hd);
      lst = lst.tl;
    }
  }
  function listFind(lst, fn) {
    while (!isEmpty(lst)) {
      var result = fn(lst.hd);
      if (result !== false) {
        return result;
      }
      lst = lst.tl;
    }
    return false;
  }
  function listMap(lst, fn) {
    var result = [];
    var mapper = function(x) {
      return result.push(result, fn(x));
    };
    listForEach(lst, mapper);
    return listFromArray(result);
  }
  function isList(v) {
    return v === EMPTY || (check(v) && v._listLength !== -1);
  }
  return {
    get EMPTY() {
      return EMPTY;
    },
    get isEmpty() {
      return isEmpty;
    },
    get Pair() {
      return Pair;
    },
    get check() {
      return check;
    },
    get make() {
      return make;
    },
    get makeList() {
      return makeList;
    },
    get listToArray() {
      return listToArray;
    },
    get listFromArray() {
      return listFromArray;
    },
    get listForEach() {
      return listForEach;
    },
    get listFind() {
      return listFind;
    },
    get listMap() {
      return listMap;
    },
    get isList() {
      return isList;
    }
  };
})();
var $__runtime_47_core_47_errors_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/errors.js";
  var MiniNativeOutputStringPort = ($__runtime_47_core_47_mini_95_native_95_output_95_string_95_port_46_js__).MiniNativeOutputStringPort;
  var printNativeString = ($__runtime_47_core_47_print_95_native_95_string_46_js__).printNativeString;
  var UString = $__runtime_47_core_47_unicode_95_string_46_js__;
  function printError(out, msg, args) {
    out.consume(msg);
    var $__4 = true;
    var $__5 = false;
    var $__6 = undefined;
    try {
      for (var $__2 = void 0,
          $__1 = (args)[Symbol.iterator](); !($__4 = ($__2 = $__1.next()).done); $__4 = true) {
        var arg = $__2.value;
        {
          out.consume(' ');
          if (typeof arg === 'string') {
            out.consume(arg);
          } else {
            printNativeString(out, arg, true, 0);
          }
        }
      }
    } catch ($__7) {
      $__5 = true;
      $__6 = $__7;
    } finally {
      try {
        if (!$__4 && $__1.return != null) {
          $__1.return();
        }
      } finally {
        if ($__5) {
          throw $__6;
        }
      }
    }
  }
  function makeError(name) {
    var $__0 = this;
    var e = function(msg) {
      for (var args = [],
          $__8 = 1; $__8 < arguments.length; $__8++)
        args[$__8 - 1] = arguments[$__8];
      this.name = name;
      var stringOut = new MiniNativeOutputStringPort();
      printError(stringOut, msg, args);
      this.message = stringOut.getOutputString();
      this.stack = (new Error()).stack;
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
      } else {
        this.stack = (new Error()).stack;
      }
    };
    e.prototype = Object.create(Error.prototype);
    e.prototype.constructor = e;
    return function() {
      for (var args = [],
          $__9 = 0; $__9 < arguments.length; $__9++)
        args[$__9] = arguments[$__9];
      return new (Function.prototype.bind.apply(e, [$__0].concat(args)))();
    };
  }
  var racketCoreError = makeError('RacketCoreError');
  var racketContractError = makeError('RacketContractError');
  function isContractErr(e) {
    return e.name !== undefined && e.name === "RacketContractError";
  }
  function isErr(e) {
    return e.name !== undefined && e.name === "RacketCoreError";
  }
  function errName(e) {
    return e.name;
  }
  function errMsg(e) {
    return e.message;
  }
  function toOrdinal(i) {
    var j = i % 10,
        k = i % 100;
    if (j == 1 && k != 11) {
      return i + "st";
    }
    if (j == 2 && k != 12) {
      return i + "nd";
    }
    if (j == 3 && k != 13) {
      return i + "rd";
    }
    return i + "th";
  }
  function makeArgumentError(name, expected) {
    for (var rest = [],
        $__8 = 2; $__8 < arguments.length; $__8++)
      rest[$__8 - 2] = arguments[$__8];
    var stringOut = new MiniNativeOutputStringPort();
    stringOut.consume((name.toString() + ": contract violation\n"));
    stringOut.consume('  expected: ');
    stringOut.consume(expected.toString());
    stringOut.consume('\n');
    stringOut.consume('  given: ');
    if (rest.length === 1) {
      printNativeString(stringOut, rest[0], true, 0);
    } else {
      printNativeString(stringOut, rest[rest[0] + 1], true, 0);
      if (rest.length > 2) {
        stringOut.consume('\n');
        stringOut.consume('  argument position: ');
        printNativeString(stringOut, toOrdinal(rest[0] + 1), true, 0);
        stringOut.consume('\n');
        stringOut.consume('  other arguments...:');
        for (var i = 1; i < rest.length; i++) {
          if (i === rest[0] + 1) {
            continue;
          }
          stringOut.consume('\n   ');
          printNativeString(stringOut, rest[i], true, 0);
        }
      }
    }
    return racketContractError(stringOut.getOutputString());
  }
  function makeArgumentsError(name, msg, field) {
    for (var rest = [],
        $__9 = 3; $__9 < arguments.length; $__9++)
      rest[$__9 - 3] = arguments[$__9];
    var stringOut = new MiniNativeOutputStringPort();
    stringOut.consume((name.toString() + ": "));
    stringOut.consume(msg);
    stringOut.consume('\n  ');
    stringOut.consume(field);
    stringOut.consume(': ');
    printNativeString(stringOut, rest[0], true, 0);
    for (var i = 1; i < rest.length; i = i + 2) {
      stringOut.consume('\n  ');
      stringOut.consume(rest[i]);
      stringOut.consume(': ');
      printNativeString(stringOut, rest[i + 1], true, 0);
    }
    return racketContractError(stringOut.getOutputString());
  }
  function makeMismatchError(name, msg) {
    for (var rest = [],
        $__10 = 2; $__10 < arguments.length; $__10++)
      rest[$__10 - 2] = arguments[$__10];
    if (rest.length === 0) {
      return racketContractError(name.toString(), msg);
    } else {
      var stringOut = new MiniNativeOutputStringPort();
      stringOut.consume((name.toString() + ": "));
      stringOut.consume(msg);
      for (var i = 0; i < rest.length; i++) {
        if (UString.check(rest[i])) {
          stringOut.consume(rest[i]);
        } else {
          printNativeString(stringOut, rest[i], true, 0);
        }
      }
      return racketContractError(stringOut.getOutputString());
    }
  }
  function makeOutOfRangeError(name, type, v, len, i) {
    if (i >= len) {
      if (len > 0) {
        return racketContractError((name + ": index is out of range\n  index: " + i + "\n  valid range: [0, " + (len - 1) + "]\n  " + type + ": "), v);
      } else {
        return racketContractError((name + ": index is out of range for empty " + type + "\n  index: " + i));
      }
    }
  }
  return {
    get racketCoreError() {
      return racketCoreError;
    },
    get racketContractError() {
      return racketContractError;
    },
    get isContractErr() {
      return isContractErr;
    },
    get isErr() {
      return isErr;
    },
    get errName() {
      return errName;
    },
    get errMsg() {
      return errMsg;
    },
    get makeArgumentError() {
      return makeArgumentError;
    },
    get makeArgumentsError() {
      return makeArgumentsError;
    },
    get makeMismatchError() {
      return makeMismatchError;
    },
    get makeOutOfRangeError() {
      return makeOutOfRangeError;
    }
  };
})();
var $__runtime_47_core_47_regexp_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/regexp.js";
  var Bytes = $__runtime_47_core_47_bytes_46_js__;
  var UString = $__runtime_47_core_47_unicode_95_string_46_js__;
  var Pair = $__runtime_47_core_47_pair_46_js__;
  var racketContractError = ($__runtime_47_core_47_errors_46_js__).racketContractError;
  function check(v) {
    return v instanceof RegExp;
  }
  function fromString(str) {
    return new RegExp(str.toString());
  }
  function match(pattern, input) {
    var isRegexpPattern = check(pattern);
    var isBytesPattern = !isRegexpPattern && Bytes.check(pattern);
    var isStringPattern = !isRegexpPattern && !isBytesPattern && UString.check(pattern);
    var isBytesInput = Bytes.check(input);
    var isStringInput = !isBytesInput && UString.check(input);
    if (!(isRegexpPattern || isBytesPattern || isStringPattern) || !(isBytesInput || isStringInput)) {
      throw racketContractError('expected regexp, string or byte pat, ' + 'and string or byte input, got pattern:', pattern, ', input:', input);
    }
    var stringInput = isBytesInput ? UString.fromBytesUtf8((input)) : input;
    var stringOrRegExpPattern = isBytesPattern ? UString.fromBytesUtf8((pattern)) : pattern;
    var result = stringInput.toString().match(stringOrRegExpPattern);
    if (result === null) {
      return false;
    }
    if ((isStringPattern || isRegexpPattern) && isStringInput) {
      return Pair.listFromArray(result.map(function(x) {
        return (x !== undefined ? UString.makeMutable(x) : false);
      }));
    }
    return Pair.listFromArray(result.map(function(x) {
      return (x !== undefined ? UString.toBytesUtf8(x) : false);
    }));
  }
  return {
    get check() {
      return check;
    },
    get fromString() {
      return fromString;
    },
    get match() {
      return match;
    }
  };
})();
var $__runtime_47_core_47_values_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/values.js";
  var Primitive = ($__runtime_47_core_47_primitive_46_js__).Primitive;
  var Values = function($__super) {
    function Values(vals) {
      $traceurRuntime.superConstructor(Values).call(this);
      this.v = vals;
    }
    return ($traceurRuntime.createClass)(Values, {
      getAt: function(i) {
        return this.v[i];
      },
      getAll: function() {
        return this.v;
      }
    }, {}, $__super);
  }(Primitive);
  function make(vals) {
    return new Values(vals);
  }
  function check(v) {
    return (v instanceof Values);
  }
  return {
    get make() {
      return make;
    },
    get check() {
      return check;
    }
  };
})();
var $__runtime_47_core_47_hash_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/hash.js";
  var $ = $__runtime_47_core_47_lib_46_js__;
  var Pair = $__runtime_47_core_47_pair_46_js__;
  var Values = $__runtime_47_core_47_values_46_js__;
  var PrintablePrimitive = ($__runtime_47_core_47_printable_95_primitive_46_js__).PrintablePrimitive;
  var $__13 = $__runtime_47_core_47_print_95_native_95_string_46_js__,
      displayNativeString = $__13.displayNativeString,
      writeNativeString = $__13.writeNativeString;
  var $__14 = $__runtime_47_core_47_equality_46_js__,
      isEqual = $__14.isEqual,
      isEqv = $__14.isEqv,
      isEq = $__14.isEq;
  var $__15 = $__runtime_47_core_47_hashing_46_js__,
      hashForEqual = $__15.hashForEqual,
      hashForEqv = $__15.hashForEqv,
      hashForEq = $__15.hashForEq;
  var hashConfigs = {
    eq: {
      hash: hashForEq,
      keyEq: isEq
    },
    eqv: {
      hash: hashForEqv,
      keyEq: isEqv
    },
    equal: {
      hash: hashForEqual,
      keyEq: isEqual
    }
  };
  var Hash = function($__super) {
    function Hash(hash, type, mutable) {
      $traceurRuntime.superConstructor(Hash).call(this);
      this._h = hash;
      this._mutable = mutable;
      this._type = type;
      this._iterator = undefined;
    }
    return ($traceurRuntime.createClass)(Hash, {
      writeToPort: function(out, itemFn) {
        var $__10,
            $__11;
        out.consume('#hash');
        if (this._type === 'eq' || this._type === 'eqv') {
          out.consume(this._type);
        }
        out.consume('(');
        var n = this._h.size;
        var i = 0;
        var $__5 = true;
        var $__6 = false;
        var $__7 = undefined;
        try {
          for (var $__3 = void 0,
              $__2 = (this._h)[Symbol.iterator](); !($__5 = ($__3 = $__2.next()).done); $__5 = true) {
            var $__9 = $__3.value,
                k = ($__10 = $__9[Symbol.iterator](), ($__11 = $__10.next()).done ? void 0 : $__11.value),
                v = ($__11 = $__10.next()).done ? void 0 : $__11.value;
            {
              out.consume('(');
              itemFn(out, k);
              out.consume(' . ');
              itemFn(out, v);
              out.consume(')');
              if (++i !== n)
                out.consume(' ');
            }
          }
        } catch ($__8) {
          $__6 = true;
          $__7 = $__8;
        } finally {
          try {
            if (!$__5 && $__2.return != null) {
              $__2.return();
            }
          } finally {
            if ($__6) {
              throw $__7;
            }
          }
        }
        out.consume(')');
      },
      displayNativeString: function(out) {
        this.writeToPort(out, displayNativeString);
      },
      writeNativeString: function(out) {
        this.writeToPort(out, writeNativeString);
      },
      toRawString: function() {
        return ("'" + this.toString());
      },
      isImmutable: function() {
        return !this._mutable;
      },
      ref: function(k, fail) {
        var result = this._h.get(k);
        if (result !== undefined) {
          return result;
        } else {
          return typeof fail === 'function' ? fail() : fail;
        }
      },
      hasKey: function(k) {
        return this._h.has(k);
      },
      refKey: function(k, fail) {
        var $__5 = true;
        var $__6 = false;
        var $__7 = undefined;
        try {
          for (var $__3 = void 0,
              $__2 = (this._h.keys())[Symbol.iterator](); !($__5 = ($__3 = $__2.next()).done); $__5 = true) {
            var key = $__3.value;
            {
              if (hashConfigs[this._type].keyEq(key, k)) {
                return key;
              }
            }
          }
        } catch ($__8) {
          $__6 = true;
          $__7 = $__8;
        } finally {
          try {
            if (!$__5 && $__2.return != null) {
              $__2.return();
            }
          } finally {
            if ($__6) {
              throw $__7;
            }
          }
        }
        return typeof fail === 'function' ? fail() : fail;
      },
      set: function(k, v) {
        return new Hash(this._h.set(k, v), this._type, false);
      },
      remove: function(k) {
        return new Hash(this._h.delete(k), this._type, false);
      },
      doset: function(k, v) {
        this._h = this._h.set(k, v);
        this._iterator = undefined;
      },
      doremove: function(k) {
        this._h = this._h.delete(k);
        this._iterator = undefined;
      },
      size: function() {
        return this._h.size;
      },
      iterateFirst: function() {
        if (this._h.size == 0)
          return false;
        this._iterator = this._h.entries();
        return this._iterator.next();
      },
      iterateNext: function(i) {
        if (this._iterator == undefined) {
          return false;
        }
        var j = this._iterator.next();
        if (j.done) {
          this._iterator = undefined;
          return false;
        }
        return j;
      },
      iterateKey: function(i) {
        return i.value[0];
      },
      iterateValue: function(i) {
        return i.value[1];
      },
      iteratePair: function(i) {
        return Pair.make(i.value[0], i.value[1]);
      },
      iterateKeyValue: function(i) {
        return Values.make(i.value);
      },
      union: function(h) {
        var $__10,
            $__11;
        var newH = this._h;
        var $__5 = true;
        var $__6 = false;
        var $__7 = undefined;
        try {
          for (var $__3 = void 0,
              $__2 = (h)[Symbol.iterator](); !($__5 = ($__3 = $__2.next()).done); $__5 = true) {
            var $__9 = $__3.value,
                key = ($__10 = $__9[Symbol.iterator](), ($__11 = $__10.next()).done ? void 0 : $__11.value),
                val = ($__11 = $__10.next()).done ? void 0 : $__11.value;
            {
              newH = newH.set(key, val);
            }
          }
        } catch ($__8) {
          $__6 = true;
          $__7 = $__8;
        } finally {
          try {
            if (!$__5 && $__2.return != null) {
              $__2.return();
            }
          } finally {
            if ($__6) {
              throw $__7;
            }
          }
        }
        if (this._mutable) {
          this._h = newH;
        } else {
          return new Hash(newH, this._type, false);
        }
      },
      isSameType: function(h) {
        return this._type === h._type;
      },
      isKeysSubset: function(v) {
        if (this._h.size > v._h.size) {
          return false;
        }
        var $__5 = true;
        var $__6 = false;
        var $__7 = undefined;
        try {
          for (var $__3 = void 0,
              $__2 = (this._h.keys())[Symbol.iterator](); !($__5 = ($__3 = $__2.next()).done); $__5 = true) {
            var key = $__3.value;
            {
              var vv = v._h.get(key);
              if (vv === undefined) {
                return false;
              }
            }
          }
        } catch ($__8) {
          $__6 = true;
          $__7 = $__8;
        } finally {
          try {
            if (!$__5 && $__2.return != null) {
              $__2.return();
            }
          } finally {
            if ($__6) {
              throw $__7;
            }
          }
        }
        return true;
      },
      equals: function(v) {
        var $__10,
            $__11;
        if (!check(v)) {
          return false;
        }
        if (this._h.size !== v._h.size || this._type !== v._type || this._mutable !== v._mutable) {
          return false;
        }
        var $__5 = true;
        var $__6 = false;
        var $__7 = undefined;
        try {
          for (var $__3 = void 0,
              $__2 = (this._h)[Symbol.iterator](); !($__5 = ($__3 = $__2.next()).done); $__5 = true) {
            var $__9 = $__3.value,
                key = ($__10 = $__9[Symbol.iterator](), ($__11 = $__10.next()).done ? void 0 : $__11.value),
                val = ($__11 = $__10.next()).done ? void 0 : $__11.value;
            {
              var vv = v._h.get(key);
              if (vv === undefined || !isEqual(val, vv)) {
                return false;
              }
            }
          }
        } catch ($__8) {
          $__6 = true;
          $__7 = $__8;
        } finally {
          try {
            if (!$__5 && $__2.return != null) {
              $__2.return();
            }
          } finally {
            if ($__6) {
              throw $__7;
            }
          }
        }
        return true;
      }
    }, {}, $__super);
  }(PrintablePrimitive);
  function make(items, type, mutable) {
    var h = items.reduce(function(acc, item) {
      var $__10,
          $__11;
      var $__9 = item,
          k = ($__10 = $__9[Symbol.iterator](), ($__11 = $__10.next()).done ? void 0 : $__11.value),
          v = ($__11 = $__10.next()).done ? void 0 : $__11.value;
      return acc.set(k, v);
    }, $.hamt.make(hashConfigs[type]));
    return new Hash(h, type, mutable);
  }
  function makeEq(items, mutable) {
    return make(items, 'eq', mutable);
  }
  function makeEqv(items, mutable) {
    return make(items, 'eqv', mutable);
  }
  function makeEqual(items, mutable) {
    return make(items, 'equal', mutable);
  }
  function makeFromAssocs(assocs, type, mutable) {
    var items = [];
    Pair.listForEach(assocs, function(item) {
      items.push([item.hd, item.tl]);
    });
    return make(items, type, mutable);
  }
  function makeEqFromAssocs(assocs, mutable) {
    return makeFromAssocs(assocs, 'eq', mutable);
  }
  function makeEqvFromAssocs(assocs, mutable) {
    return makeFromAssocs(assocs, 'eqv', mutable);
  }
  function makeEqualFromAssocs(assocs, mutable) {
    return makeFromAssocs(assocs, 'equal', mutable);
  }
  function map(hash, proc) {
    var result = Pair.EMPTY;
    hash._h.forEach(function(value, key) {
      result = Pair.make(proc(key, value), result);
    });
    return result;
  }
  function check(v1) {
    return (v1 instanceof Hash);
  }
  function isEqualHash(h) {
    return check(h) && h._type === 'equal';
  }
  function isEqvHash(h) {
    return check(h) && h._type === 'eqv';
  }
  function isEqHash(h) {
    return check(h) && h._type === 'eq';
  }
  function isWeakHash(h) {
    return false;
  }
  return {
    get makeEq() {
      return makeEq;
    },
    get makeEqv() {
      return makeEqv;
    },
    get makeEqual() {
      return makeEqual;
    },
    get makeEqFromAssocs() {
      return makeEqFromAssocs;
    },
    get makeEqvFromAssocs() {
      return makeEqvFromAssocs;
    },
    get makeEqualFromAssocs() {
      return makeEqualFromAssocs;
    },
    get map() {
      return map;
    },
    get check() {
      return check;
    },
    get isEqualHash() {
      return isEqualHash;
    },
    get isEqvHash() {
      return isEqvHash;
    },
    get isEqHash() {
      return isEqHash;
    },
    get isWeakHash() {
      return isWeakHash;
    }
  };
})();
var $__runtime_47_core_47_keyword_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/keyword.js";
  var PrintablePrimitive = ($__runtime_47_core_47_printable_95_primitive_46_js__).PrintablePrimitive;
  var internedMake = ($__runtime_47_core_47_lib_46_js__).internedMake;
  var Keyword = function($__super) {
    function Keyword(v) {
      $traceurRuntime.superConstructor(Keyword).call(this);
      this.v = v;
    }
    return ($traceurRuntime.createClass)(Keyword, {
      displayNativeString: function(out) {
        out.consume('#:');
        out.consume(this.v);
      },
      equals: function(v) {
        return check(v) && this.v === v.v;
      },
      lt: function(v) {
        if (v === this) {
          return false;
        } else {
          return this.v < v.v;
        }
        return false;
      }
    }, {}, $__super);
  }(PrintablePrimitive);
  var make = internedMake(function(v) {
    return new Keyword(v);
  });
  function check(v) {
    return (v instanceof Keyword);
  }
  return {
    get make() {
      return make;
    },
    get check() {
      return check;
    }
  };
})();
var $__runtime_47_core_47_numbers_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/numbers.js";
  var racketCoreError = ($__runtime_47_core_47_errors_46_js__).racketCoreError;
  function add() {
    for (var operands = [],
        $__0 = 0; $__0 < arguments.length; $__0++)
      operands[$__0] = arguments[$__0];
    return [].reduce.call(operands, function(a, b) {
      return a + b;
    }, 0);
  }
  function sub() {
    for (var operands = [],
        $__1 = 0; $__1 < arguments.length; $__1++)
      operands[$__1] = arguments[$__1];
    if (operands.length === 1) {
      return -operands[0];
    }
    var result = operands[0];
    for (var i = 1; i < operands.length; ++i) {
      result -= operands[i];
    }
    return result;
  }
  function mul() {
    for (var operands = [],
        $__2 = 0; $__2 < arguments.length; $__2++)
      operands[$__2] = arguments[$__2];
    return [].reduce.call(operands, function(a, b) {
      return a * b;
    }, 1);
  }
  function div() {
    for (var operands = [],
        $__3 = 0; $__3 < arguments.length; $__3++)
      operands[$__3] = arguments[$__3];
    if (operands.length === 1) {
      return 1 / operands[0];
    }
    var result = operands[0];
    for (var i = 1; i < operands.length; ++i) {
      result /= operands[i];
    }
    return result;
  }
  function compare(cmp, operands) {
    if (operands.length < 1) {
      throw racketCoreError.apply((void 0), $traceurRuntime.spread(['compare: at least 1 argument required, given'], operands));
    }
    if (operands.length === 1) {
      return true;
    }
    for (var i = 1; i < operands.length; i++) {
      if (!cmp(operands[i - 1], operands[i])) {
        return false;
      }
    }
    return true;
  }
  function lt() {
    for (var operands = [],
        $__4 = 0; $__4 < arguments.length; $__4++)
      operands[$__4] = arguments[$__4];
    return compare(function(a, b) {
      return a < b;
    }, operands);
  }
  function lte() {
    for (var operands = [],
        $__5 = 0; $__5 < arguments.length; $__5++)
      operands[$__5] = arguments[$__5];
    return compare(function(a, b) {
      return a <= b;
    }, operands);
  }
  function gt() {
    for (var operands = [],
        $__6 = 0; $__6 < arguments.length; $__6++)
      operands[$__6] = arguments[$__6];
    return compare(function(a, b) {
      return a > b;
    }, operands);
  }
  function gte() {
    for (var operands = [],
        $__7 = 0; $__7 < arguments.length; $__7++)
      operands[$__7] = arguments[$__7];
    return compare(function(a, b) {
      return a >= b;
    }, operands);
  }
  function equals() {
    for (var operands = [],
        $__8 = 0; $__8 < arguments.length; $__8++)
      operands[$__8] = arguments[$__8];
    return compare(function(a, b) {
      return a === b;
    }, operands);
  }
  function check(v) {
    return typeof v === 'number';
  }
  return {
    get add() {
      return add;
    },
    get sub() {
      return sub;
    },
    get mul() {
      return mul;
    },
    get div() {
      return div;
    },
    get compare() {
      return compare;
    },
    get lt() {
      return lt;
    },
    get lte() {
      return lte;
    },
    get gt() {
      return gt;
    },
    get gte() {
      return gte;
    },
    get equals() {
      return equals;
    },
    get check() {
      return check;
    }
  };
})();
var $__runtime_47_core_47_ports_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/ports.js";
  var PrintablePrimitive = ($__runtime_47_core_47_printable_95_primitive_46_js__).PrintablePrimitive;
  var UString = $__runtime_47_core_47_unicode_95_string_46_js__;
  var Port = function($__super) {
    function Port() {
      $traceurRuntime.superConstructor(Port).apply(this, arguments);
    }
    return ($traceurRuntime.createClass)(Port, {
      isOutputPort: function() {
        return false;
      },
      isInputPort: function() {
        return false;
      }
    }, {}, $__super);
  }(PrintablePrimitive);
  var OutputPort = function($__super) {
    function OutputPort() {
      $traceurRuntime.superConstructor(OutputPort).apply(this, arguments);
    }
    return ($traceurRuntime.createClass)(OutputPort, {
      isOutputPort: function() {
        return true;
      },
      displayNativeString: function(out) {
        out.consume(("#<output-port:" + this.name + ">"));
      }
    }, {}, $__super);
  }(Port);
  function check(v) {
    return v instanceof Port;
  }
  function isInputPort(v) {
    return check(v) && v.isInputPort();
  }
  function isOutputPort(v) {
    return check(v) && v.isOutputPort();
  }
  var NewlineFlushingOutputPort = function($__super) {
    function NewlineFlushingOutputPort(consumeFn, name) {
      $traceurRuntime.superConstructor(NewlineFlushingOutputPort).call(this);
      this._buffer = [];
      this._consumeFn = consumeFn;
      this.name = name;
    }
    return ($traceurRuntime.createClass)(NewlineFlushingOutputPort, {
      consume: function(nativeString) {
        var lastNewlineIndex = nativeString.lastIndexOf('\n');
        if (lastNewlineIndex >= 0) {
          this._buffer.push(nativeString.slice(0, lastNewlineIndex));
          this._consumeFn(this._buffer.join(''));
          var restChars = nativeString.slice(lastNewlineIndex + 1);
          this._buffer = [];
          if (restChars !== '') {
            this._buffer.push(restChars);
          }
        } else {
          this._buffer.push(nativeString);
        }
      },
      isUStringPort: function() {
        return false;
      }
    }, {}, $__super);
  }(OutputPort);
  var standardOutputPort = new NewlineFlushingOutputPort(function(str) {
    return console.log(str);
  }, 'stdout');
  var standardErrorPort = new NewlineFlushingOutputPort(function(str) {
    return console.log(str);
  }, 'stderr');
  var NativeOutputStringPort = function($__super) {
    function NativeOutputStringPort() {
      $traceurRuntime.superConstructor(NativeOutputStringPort).call(this);
      this._buffer = [];
    }
    return ($traceurRuntime.createClass)(NativeOutputStringPort, {
      consume: function(s) {
        this._buffer.push(s);
      },
      getOutputString: function() {
        var $__5;
        if (this._buffer.length === 0) {
          return '';
        }
        if (this._buffer.length > 1) {
          this._buffer = [($__5 = '').concat.apply($__5, $traceurRuntime.spread(this._buffer))];
        }
        return this._buffer[0];
      },
      get name() {
        return 'js-string';
      },
      isUStringPort: function() {
        return false;
      }
    }, {}, $__super);
  }(OutputPort);
  var OutputStringPort = function($__super) {
    function OutputStringPort() {
      $traceurRuntime.superConstructor(OutputStringPort).call(this);
      this._buffer = [];
    }
    return ($traceurRuntime.createClass)(OutputStringPort, {
      consume: function(s) {
        this._buffer.push(s);
      },
      getOutputString: function() {
        var $__5;
        if (this._buffer.length === 0) {
          return UString.makeMutable('');
        }
        if (this._buffer.length > 1) {
          this._buffer = [($__5 = UString).stringAppend.apply($__5, $traceurRuntime.spread(this._buffer))];
        }
        return UString.copyAsMutable(this._buffer[0]);
      },
      get name() {
        return 'string';
      },
      isUStringPort: function() {
        return true;
      }
    }, {}, $__super);
  }(OutputPort);
  function openOutputString() {
    return new OutputStringPort();
  }
  function getOutputString(outputStringPort) {
    return outputStringPort.getOutputString();
  }
  return {
    get check() {
      return check;
    },
    get isInputPort() {
      return isInputPort;
    },
    get isOutputPort() {
      return isOutputPort;
    },
    get standardOutputPort() {
      return standardOutputPort;
    },
    get standardErrorPort() {
      return standardErrorPort;
    },
    get NativeOutputStringPort() {
      return NativeOutputStringPort;
    },
    get openOutputString() {
      return openOutputString;
    },
    get getOutputString() {
      return getOutputString;
    }
  };
})();
var $__runtime_47_core_47_check_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/check.js";
  function raise(exp) {
    for (var args = [],
        $__0 = 1; $__0 < arguments.length; $__0++)
      args[$__0 - 1] = arguments[$__0];
    throw exp.apply(this, args);
  }
  function truthy(val, exp) {
    var msg = arguments[2] !== (void 0) ? arguments[2] : '';
    if (val !== true) {
      raise(exp, msg);
    }
    return true;
  }
  function falsy(val, exp) {
    var msg = arguments[2] !== (void 0) ? arguments[2] : '';
    return truthy(val === false, exp, msg);
  }
  function type(val, type) {
    var msg = arguments[2] !== (void 0) ? arguments[2] : '';
    if (val instanceof type) {
      return true;
    }
    raise(TypeError, (msg + "(" + val + " : " + $traceurRuntime.typeof((val)) + " != " + type.name + ")"));
  }
  function eq(val1, val2, exp, msg) {
    if (val1 !== val2) {
      raise(exp, msg);
    }
    return true;
  }
  return {
    get raise() {
      return raise;
    },
    get truthy() {
      return truthy;
    },
    get falsy() {
      return falsy;
    },
    get type() {
      return type;
    },
    get eq() {
      return eq;
    }
  };
})();
var $__runtime_47_core_47_struct_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/struct.js";
  var C = $__runtime_47_core_47_check_46_js__;
  var $ = $__runtime_47_core_47_lib_46_js__;
  var racketCoreError = ($__runtime_47_core_47_errors_46_js__).racketCoreError;
  var Pair = $__runtime_47_core_47_pair_46_js__;
  var PrintablePrimitive = ($__runtime_47_core_47_printable_95_primitive_46_js__).PrintablePrimitive;
  var $__15 = $__runtime_47_core_47_print_95_native_95_string_46_js__,
      displayNativeString = $__15.displayNativeString,
      writeNativeString = $__15.writeNativeString,
      printNativeString = $__15.printNativeString;
  var isEqual = ($__runtime_47_core_47_equality_46_js__).isEqual;
  var hashArray = ($__runtime_47_core_47_raw_95_hashing_46_js__).hashArray;
  var hashForEqual = ($__runtime_47_core_47_hashing_46_js__).hashForEqual;
  var Values = $__runtime_47_core_47_values_46_js__;
  var Struct = function($__super) {
    function Struct(desc, fields) {
      var callerName = arguments[2] !== (void 0) ? arguments[2] : false;
      $traceurRuntime.superConstructor(Struct).call(this);
      this._desc = desc;
      C.eq(fields.length, this._desc._totalInitFields, racketCoreError, 'arity mismatch');
      var guardLambda = this._desc._options.guard;
      var finalCallerName = callerName || this._desc._options.constructorName || this._desc._options.name;
      if (guardLambda) {
        var guardFields = fields.concat(finalCallerName);
        var new_fields = guardLambda.apply((void 0), $traceurRuntime.spread(guardFields));
        if (Values.check(new_fields)) {
          fields = new_fields.getAll();
        } else {
          fields = [new_fields];
        }
      }
      this._superStructInstance = false;
      var superType = this._desc.getSuperType();
      if (superType !== false) {
        var superInitFields = fields.slice(0, superType._totalInitFields);
        this._fields = fields.slice(superType._totalInitFields);
        this._superStructInstance = superType.getStructConstructor(finalCallerName).apply((void 0), $traceurRuntime.spread(superInitFields));
      } else {
        this._fields = fields;
      }
      var autoV = this._desc._options.autoV;
      for (var i = 0; i < this._desc._options.autoFieldCount; i++) {
        this._fields.push(autoV);
      }
    }
    return ($traceurRuntime.createClass)(Struct, {
      writeToPort: function(out, itemFn) {
        if (this._desc._options.inspector) {
          out.consume('#<');
          out.consume(this._desc.getName());
          out.consume('>');
        } else {
          out.consume('#(struct:');
          out.consume(this._desc.getName());
          var $__8 = true;
          var $__9 = false;
          var $__10 = undefined;
          try {
            for (var $__6 = void 0,
                $__5 = (this._fields)[Symbol.iterator](); !($__8 = ($__6 = $__5.next()).done); $__8 = true) {
              var field = $__6.value;
              {
                out.consume(' ');
                itemFn(out, field);
              }
            }
          } catch ($__11) {
            $__9 = true;
            $__10 = $__11;
          } finally {
            try {
              if (!$__8 && $__5.return != null) {
                $__5.return();
              }
            } finally {
              if ($__9) {
                throw $__10;
              }
            }
          }
          out.consume(')');
        }
      },
      displayNativeString: function(out) {
        this.writeToPort(out, displayNativeString);
      },
      writeNativeString: function(out) {
        this.writeToPort(out, writeNativeString);
      },
      printNativeString: function(out) {
        if (this._desc._options.inspector) {
          this.writeNativeString(out);
        } else {
          out.consume('(');
          out.consume(this._desc.getName());
          var $__8 = true;
          var $__9 = false;
          var $__10 = undefined;
          try {
            for (var $__6 = void 0,
                $__5 = (this._fields)[Symbol.iterator](); !($__8 = ($__6 = $__5.next()).done); $__8 = true) {
              var field = $__6.value;
              {
                out.consume(' ');
                printNativeString(out, field, true, 0);
              }
            }
          } catch ($__11) {
            $__9 = true;
            $__10 = $__11;
          } finally {
            try {
              if (!$__8 && $__5.return != null) {
                $__5.return();
              }
            } finally {
              if ($__9) {
                throw $__10;
              }
            }
          }
          out.consume(')');
        }
      },
      equals: function(v) {
        if (!check(v, this._desc)) {
          return false;
        }
        var p = this._desc._options.props.get(propEqualHash);
        if (p !== undefined) {
          var eqhashfn = p.car();
          return eqhashfn(this, v, null);
        }
        if (this._desc._options.inspector) {
          return this === v;
        }
        for (var i = 0; i < this._fields.length; i++) {
          if (!isEqual(this._fields[i], v._fields[i])) {
            return false;
          }
        }
        return true;
      },
      getField: function(n) {
        if (n >= this._fields.length) {
          throw new Error(("TypeError: invalid field at position " + n));
        }
        return this._fields[n];
      },
      setField: function(n, v) {
        C.truthy(n < this._fields.length, racketCoreError, 'invalid field at position');
        C.falsy(this._desc.isFieldImmutable(n), racketCoreError, 'field is immutable');
        this._fields[n] = v;
      },
      _maybeFindSuperInstance: function(targetDesc) {
        for (var s = this; s !== false; s = s._superStructInstance) {
          if (s._desc === targetDesc) {
            return s;
          }
        }
        return false;
      }
    }, {}, $__super);
  }(PrintablePrimitive);
  var StructTypeDescriptor = function($__super) {
    function StructTypeDescriptor(options) {
      $traceurRuntime.superConstructor(StructTypeDescriptor).call(this);
      this._options = options;
      var props = options.props && Pair.listToArray(options.props);
      this._options.props = new Map();
      if (props) {
        var $__8 = true;
        var $__9 = false;
        var $__10 = undefined;
        try {
          for (var $__6 = void 0,
              $__5 = (props)[Symbol.iterator](); !($__8 = ($__6 = $__5.next()).done); $__8 = true) {
            var prop = $__6.value;
            {
              prop.hd.attachToStructTypeDescriptor(this, prop.tl);
            }
          }
        } catch ($__11) {
          $__9 = true;
          $__10 = $__11;
        } finally {
          try {
            if (!$__8 && $__5.return != null) {
              $__5.return();
            }
          } finally {
            if ($__9) {
              throw $__10;
            }
          }
        }
      }
      this._propProcedure = this._findProperty(propProcedure);
      this._options.autoV = this._options.autoV || false;
      this._totalInitFields = options.initFieldCount;
      if (options.superType) {
        this._totalInitFields += options.superType._totalInitFields;
      }
      var immutables = options.immutables || Pair.EMPTY;
      this._options.immutables = new Set(Pair.listToArray(immutables));
      this._options.immutables.forEach(function(e) {
        if (e < 0 || e >= options.initFieldCount) {
          C.raise('invalid index in immutables provided');
        }
      });
    }
    return ($traceurRuntime.createClass)(StructTypeDescriptor, {
      displayNativeString: function(out) {
        out.consume('#<struct-type:');
        out.consume(this._options.name);
        out.consume('>');
      },
      printNativeString: function(out) {
        this.writeNativeString(out);
      },
      getName: function() {
        return this._options.name;
      },
      getSuperType: function() {
        return this._options.superType;
      },
      getApplicableStructObject: function(structObject, procSpec) {
        var structfn = function() {
          for (var args = [],
              $__12 = 0; $__12 < arguments.length; $__12++)
            args[$__12] = arguments[$__12];
          var proc;
          if (typeof(procSpec) === 'function') {
            proc = procSpec;
            args.unshift(structObject);
          } else if (Number.isInteger(procSpec)) {
            proc = structObject.getField(procSpec);
          } else {
            throw new Error(("ValueError: invalid field at position " + procSpec));
          }
          return proc.apply((void 0), $traceurRuntime.spread(args));
        };
        structfn.__rjs_struct_object = structObject;
        return structfn;
      },
      maybeStructObject: function(s) {
        var structObject;
        if (s instanceof Struct) {
          return s;
        } else if (s instanceof Function && (s.__rjs_struct_object instanceof Struct)) {
          return s.__rjs_struct_object;
        }
        return false;
      },
      getStructConstructor: function() {
        var subtype = arguments[0] !== (void 0) ? arguments[0] : false;
        var $__4 = this;
        return $.attachReadOnlyProperty(function() {
          for (var args = [],
              $__12 = 0; $__12 < arguments.length; $__12++)
            args[$__12] = arguments[$__12];
          var structObject = new Struct($__4, args, subtype);
          var hasPropProc = $__4._propProcedure !== undefined && $__4._propProcedure !== false;
          var hasProcSpec = $__4._options.procSpec !== undefined && $__4._options.procSpec !== false;
          if (!hasPropProc && !hasProcSpec) {
            return structObject;
          } else if (hasPropProc) {
            return $__4.getApplicableStructObject(structObject, $__4._propProcedure);
          }
          return $__4.getApplicableStructObject(structObject, $__4._options.procSpec);
        }, 'racketProcedureType', 'struct-constructor');
      },
      getStructPredicate: function() {
        var $__4 = this;
        return $.attachReadOnlyProperty(function(s) {
          var structObject = $__4.maybeStructObject(s);
          return structObject && structObject._maybeFindSuperInstance($__4) && true;
        }, 'racketProcedureType', 'struct-predicate');
      },
      getStructAccessor: function() {
        var $__4 = this;
        return $.attachReadOnlyProperty(function(s, pos) {
          var structObject = $__4.maybeStructObject(s);
          if (!structObject) {
            C.raise(TypeError, ("(" + s + " : " + $traceurRuntime.typeof((s)) + " != " + $__4._options.name + " object)"));
          }
          var sobj = structObject._maybeFindSuperInstance($__4);
          if (sobj === false) {
            C.raise(racketCoreError, 'accessor applied to invalid type');
          }
          return sobj.getField(pos);
        }, 'racketProcedureType', 'struct-accessor');
      },
      getStructMutator: function() {
        var $__4 = this;
        return $.attachReadOnlyProperty(function(s, pos, v) {
          var structObject = $__4.maybeStructObject(s);
          if (!structObject) {
            C.raise(TypeError, ("(" + s + " : " + $traceurRuntime.typeof((s)) + " != " + $__4._options.name + " object)"));
          }
          var sobj = structObject._maybeFindSuperInstance($__4);
          if (sobj === false) {
            C.raise(racketCoreError, 'mutator applied to invalid type');
          }
          return sobj.setField(pos, v);
        }, 'racketProcedureType', 'struct-mutator');
      },
      _findProperty: function(prop) {
        for (var desc = this; desc; desc = desc.getSuperType()) {
          var val = desc._options.props.get(prop);
          if (val !== undefined) {
            return val;
          }
        }
        return undefined;
      },
      isFieldImmutable: function(n) {
        return this._options.immutables.has(n);
      }
    }, {make: function(options) {
        return Object.freeze(new StructTypeDescriptor(options));
      }}, $__super);
  }(PrintablePrimitive);
  var StructTypeProperty = function($__super) {
    function StructTypeProperty(args) {
      $traceurRuntime.superConstructor(StructTypeProperty).call(this);
      this._name = args.name.toString();
      this._guard = args.guard || false;
      this._canImpersonate = args.canImpersonate || false;
      this._supers = (args.supers && Pair.listToArray(args.supers)) || [];
    }
    return ($traceurRuntime.createClass)(StructTypeProperty, {
      displayNativeString: function(out) {
        out.consume('#<struct-type-property:');
        out.consume(this._name);
        out.consume('>');
      },
      printNativeString: function(out) {
        this.writeNativeString(out);
      },
      getPropertyPredicate: function() {
        var $__4 = this;
        return function(v) {
          if (v instanceof StructTypeDescriptor) {
            var desc = v;
          } else if (v instanceof Struct) {
            var desc = v._desc;
          } else {
            return false;
          }
          return desc._findProperty($__4) !== undefined;
        };
      },
      getPropertyAccessor: function() {
        var $__4 = this;
        return function(v) {
          if (v instanceof StructTypeDescriptor) {
            var desc = v;
          } else if (v instanceof Struct) {
            var desc = v._desc;
          } else {
            C.raise(racketCoreError, 'invalid argument to accessor');
          }
          return desc._findProperty($__4) || C.raise(racketCoreError, 'property not in struct');
        };
      },
      attachToStructTypeDescriptor: function(desc, v) {
        var newV = v;
        if (this._guard) {
          newV = this._guard(v, Pair.listFromArray(structTypeInfo(desc)));
        }
        desc._options.props.set(this, newV);
        this._supers.forEach(function(superEntry) {
          var prop = superEntry.hd;
          var proc = superEntry.tl;
          prop.attachToStructTypeDescriptor(desc, proc(newV));
        });
      }
    }, {make: function(args) {
        return Object.freeze(new StructTypeProperty(args));
      }}, $__super);
  }(PrintablePrimitive);
  function makeStructTypeProperty(options) {
    var stProp = StructTypeProperty.make(options);
    return Values.make([stProp, stProp.getPropertyPredicate(), stProp.getPropertyAccessor()]);
  }
  function makeStructType(options) {
    var descriptor = new StructTypeDescriptor(options);
    return Values.make([descriptor, descriptor.getStructConstructor(), descriptor.getStructPredicate(), descriptor.getStructAccessor(), descriptor.getStructMutator()]);
  }
  function isStructType(v) {
    return v instanceof StructTypeDescriptor;
  }
  function structTypeInfo(desc) {
    return [desc._options.name, desc._options.initFieldCount, desc._options.autoFieldCount, desc.getStructAccessor(), desc.getStructMutator(), desc._options.immutables, desc._options.superType || false, false];
  }
  function isStructInstance(v) {
    return (v instanceof Struct) || (v instanceof Function) && (v.__rjs_struct_object instanceof Struct);
  }
  function check(v, desc) {
    return isStructInstance(v) && v._desc == desc;
  }
  var propProcedure = makeStructTypeProperty({name: 'prop:procedure'}).getAt(0);
  var propEqualHash = makeStructTypeProperty({name: 'prop:equal+hash'}).getAt(0);
  return {
    get makeStructTypeProperty() {
      return makeStructTypeProperty;
    },
    get makeStructType() {
      return makeStructType;
    },
    get isStructType() {
      return isStructType;
    },
    get structTypeInfo() {
      return structTypeInfo;
    },
    get isStructInstance() {
      return isStructInstance;
    },
    get check() {
      return check;
    },
    get propProcedure() {
      return propProcedure;
    },
    get propEqualHash() {
      return propEqualHash;
    }
  };
})();
var $__runtime_47_core_47_symbol_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/symbol.js";
  var PrintablePrimitive = ($__runtime_47_core_47_printable_95_primitive_46_js__).PrintablePrimitive;
  var internedMake = ($__runtime_47_core_47_lib_46_js__).internedMake;
  var Symbol = function($__super) {
    function Symbol(v) {
      $traceurRuntime.superConstructor(Symbol).call(this);
      this.v = v;
      this._cachedHashCode = null;
    }
    return ($traceurRuntime.createClass)(Symbol, {
      displayNativeString: function(out) {
        out.consume(this.v);
      },
      equals: function(v) {
        return v === this;
      },
      lt: function(v) {
        if (v === this) {
          return false;
        } else {
          return this.v < v.v;
        }
        return false;
      },
      hashForEqual: function() {
        if (this._cachedHashCode === null) {
          this._cachedHashCode = $traceurRuntime.superGet(this, Symbol.prototype, "hashForEqual").call(this);
        }
        return this._cachedHashCode;
      }
    }, {}, $__super);
  }(PrintablePrimitive);
  var make = internedMake(function(v) {
    return new Symbol(v.toString());
  });
  var makeUninterned = function(v) {
    return new Symbol(v.toString());
  };
  function check(v) {
    return (v instanceof Symbol);
  }
  return {
    get make() {
      return make;
    },
    get makeUninterned() {
      return makeUninterned;
    },
    get check() {
      return check;
    }
  };
})();
var $__runtime_47_core_47_vector_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/vector.js";
  var PrintablePrimitive = ($__runtime_47_core_47_printable_95_primitive_46_js__).PrintablePrimitive;
  var $__2 = $__runtime_47_core_47_print_95_native_95_string_46_js__,
      displayNativeString = $__2.displayNativeString,
      writeNativeString = $__2.writeNativeString;
  var isEqual = ($__runtime_47_core_47_equality_46_js__).isEqual;
  var hashArray = ($__runtime_47_core_47_raw_95_hashing_46_js__).hashArray;
  var hashForEqual = ($__runtime_47_core_47_hashing_46_js__).hashForEqual;
  var racketCoreError = ($__runtime_47_core_47_errors_46_js__).racketCoreError;
  var Vector = function($__super) {
    function Vector(items, mutable) {
      $traceurRuntime.superConstructor(Vector).call(this);
      this.mutable = mutable;
      this.items = items;
    }
    return ($traceurRuntime.createClass)(Vector, {
      writeToPort: function(out, itemFn) {
        var n = this.items.length;
        out.consume('#(');
        for (var i = 0; i < n; i++) {
          itemFn(out, this.items[i]);
          if (i !== n - 1)
            out.consume(' ');
        }
        out.consume(')');
      },
      displayNativeString: function(out) {
        this.writeToPort(out, displayNativeString);
      },
      writeNativeString: function(out) {
        this.writeToPort(out, writeNativeString);
      },
      isImmutable: function() {
        return !this.mutable;
      },
      ref: function(n) {
        if (n < 0 || n > this.items.length) {
          throw racketCoreError(("vector-ref: index out of range\n  index: " + n));
        }
        return this.items[n];
      },
      set: function(n, v) {
        if (n < 0 || n > this.items.length) {
          throw racketCoreError(("vector-set: index out of range\n  index: " + n));
        } else if (!this.mutable) {
          throw racketCoreError('vector-set: immutable vector\n ', this);
        }
        this.items[n] = v;
      },
      length: function() {
        return this.items.length;
      },
      equals: function(v) {
        if (!check(v)) {
          return false;
        }
        var items1 = this.items;
        var items2 = v.items;
        if (items1.length != items2.length) {
          return false;
        }
        for (var i = 0; i < items1.length; i++) {
          if (!isEqual(items1[i], items2[i])) {
            return false;
          }
        }
        return true;
      },
      hashForEqual: function() {
        return hashArray(this.items, hashForEqual);
      }
    }, {}, $__super);
  }(PrintablePrimitive);
  function make(items, mutable) {
    return new Vector(items, mutable);
  }
  function copy(vec, mutable) {
    return new Vector(vec.items, mutable);
  }
  function makeInit(size, init) {
    var r = new Array(size);
    r.fill(init);
    return new Vector(r, true);
  }
  function check(v1) {
    return (v1 instanceof Vector);
  }
  return {
    get make() {
      return make;
    },
    get copy() {
      return copy;
    },
    get makeInit() {
      return makeInit;
    },
    get check() {
      return check;
    }
  };
})();
var $__runtime_47_core_47_marks_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/marks.js";
  var Pair = $__runtime_47_core_47_pair_46_js__;
  var Symbol = $__runtime_47_core_47_symbol_46_js__;
  var racketCoreError = ($__runtime_47_core_47_errors_46_js__).racketCoreError;
  var HASH = ($__runtime_47_core_47_hashing_46_js__).hashForEq;
  var __frames;
  var __prompts = new Map();
  var __async_callback_wrappers = [];
  var __defaultContinuationPromptTag = makeContinuationPromptTag(Symbol.make('default'));
  function init() {
    __frames = Pair.EMPTY;
    savePrompt(__defaultContinuationPromptTag);
    enterFrame();
  }
  function registerAsynCallbackWrapper(w) {
    __async_callback_wrappers.push(w);
  }
  function defaultContinuationPromptTag() {
    return __defaultContinuationPromptTag;
  }
  init();
  function ContinuationPromptTag(tag) {
    this.tag = tag;
    return this;
  }
  function AbortCurrentContinuation(promptTag, handlerArgs) {
    this.name = 'abort-current-continuation';
    this.promptTag = promptTag;
    this.handlerArgs = handlerArgs;
    this.stack = (new Error()).stack;
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    } else {
      this.stack = (new Error()).stack;
    }
  }
  AbortCurrentContinuation.prototype = Object.create(Error.prototype);
  AbortCurrentContinuation.prototype.constructor = AbortCurrentContinuation;
  function savePrompt(promptTag) {
    var promptVal = __prompts.get(promptTag);
    if (promptVal === undefined) {
      promptVal = [];
      __prompts.set(promptTag, promptVal);
    }
    promptVal.push(__frames.hd);
  }
  function deleteCurrentPrompt(promptTag) {
    var promptVal = __prompts.get(promptTag);
    if (promptVal === undefined) {
      throw racketCoreError('No corresponding tag in continuation!');
    }
    promptVal.pop();
    if (promptVal.length === 0) {
      __prompts.delete(promptTag);
    }
  }
  function getPromptFrame(promptTag) {
    if (promptTag === undefined) {
      return promptTag;
    }
    var result = __prompts.get(promptTag);
    return (result && result[result.length - 1]) || undefined;
  }
  function makeContinuationPromptTag(sym) {
    return new ContinuationPromptTag(sym);
  }
  function isContinuationPromptTag(tag) {
    return tag instanceof ContinuationPromptTag;
  }
  function callWithContinuationPrompt(proc, promptTag, handler) {
    for (var args = [],
        $__1 = 3; $__1 < arguments.length; $__1++)
      args[$__1 - 3] = arguments[$__1];
    promptTag = promptTag || __defaultContinuationPromptTag;
    try {
      savePrompt(promptTag);
      return proc.apply((void 0), $traceurRuntime.spread(args));
    } catch (e) {
      if (e instanceof AbortCurrentContinuation && e.promptTag === promptTag) {
        return handler.apply((void 0), $traceurRuntime.spread(e.handlerArgs));
      }
      throw e;
    } finally {
      deleteCurrentPrompt(promptTag);
    }
  }
  function getFrames() {
    return __frames;
  }
  function updateFrame(newFrames, oldFrames) {
    if (__frames !== oldFrames) {
      throw new Error("current frame doesn't match with old frame");
    }
    return __frames = newFrames;
  }
  function enterFrame() {
    __frames = Pair.make({}, __frames);
    return __frames;
  }
  function setMark(key, value) {
    var frame = __frames.hd;
    frame[HASH(key)] = value;
  }
  function getContinuationMarks(promptTag) {
    promptTag = promptTag || __defaultContinuationPromptTag;
    var frames = __frames;
    var promptFrame = getPromptFrame(promptTag);
    if (promptFrame === undefined && promptTag !== __defaultContinuationPromptTag) {
      throw racketCoreError('No corresponding tag in continuation!');
    }
    var result = [];
    while (!Pair.isEmpty(frames)) {
      if (frames.hd === promptFrame) {
        break;
      }
      result.push(frames.hd);
      frames = frames.tl;
    }
    return result;
  }
  function getMarks(framesArr, key, promptTag) {
    promptTag = promptTag || __defaultContinuationPromptTag;
    var keyHash = HASH(key);
    var promptFrame = getPromptFrame(promptTag);
    var result = [];
    for (var ii = 0; ii < framesArr.length; ++ii) {
      var fr = framesArr[ii];
      if (keyHash in fr) {
        if (fr === promptFrame) {
          break;
        }
        result.push(fr[keyHash]);
      }
    }
    return Pair.listFromArray(result);
  }
  function getFirstMark(frames, key, noneV) {
    var keyHash = HASH(key);
    return Pair.listFind(frames, function(fr) {
      if (keyHash in fr) {
        return fr[keyHash];
      }
    }) || noneV;
  }
  function wrapWithContext(fn) {
    return (function(currentFrames) {
      var state = {};
      __async_callback_wrappers.forEach(function(w) {
        return w.onCreate(state);
      });
      return function() {
        for (var args = [],
            $__2 = 0; $__2 < arguments.length; $__2++)
          args[$__2] = arguments[$__2];
        init();
        __async_callback_wrappers.forEach(function(w) {
          return w.onInvoke(state);
        });
        try {
          return fn.apply((void 0), $traceurRuntime.spread(args));
        } finally {
          __frames = undefined;
        }
      };
    }(__frames));
  }
  return {
    get init() {
      return init;
    },
    get registerAsynCallbackWrapper() {
      return registerAsynCallbackWrapper;
    },
    get defaultContinuationPromptTag() {
      return defaultContinuationPromptTag;
    },
    get AbortCurrentContinuation() {
      return AbortCurrentContinuation;
    },
    get makeContinuationPromptTag() {
      return makeContinuationPromptTag;
    },
    get isContinuationPromptTag() {
      return isContinuationPromptTag;
    },
    get callWithContinuationPrompt() {
      return callWithContinuationPrompt;
    },
    get getFrames() {
      return getFrames;
    },
    get updateFrame() {
      return updateFrame;
    },
    get enterFrame() {
      return enterFrame;
    },
    get setMark() {
      return setMark;
    },
    get getContinuationMarks() {
      return getContinuationMarks;
    },
    get getMarks() {
      return getMarks;
    },
    get getFirstMark() {
      return getFirstMark;
    },
    get wrapWithContext() {
      return wrapWithContext;
    }
  };
})();
var $__runtime_47_core_47_mpair_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/mpair.js";
  var PrintablePrimitive = ($__runtime_47_core_47_printable_95_primitive_46_js__).PrintablePrimitive;
  var $__2 = $__runtime_47_core_47_print_95_native_95_string_46_js__,
      displayNativeString = $__2.displayNativeString,
      writeNativeString = $__2.writeNativeString;
  var isEqual = ($__runtime_47_core_47_equality_46_js__).isEqual;
  var $__4 = $__runtime_47_core_47_pair_46_js__,
      EMPTY = $__4.EMPTY,
      isEmpty = $__4.isEmpty,
      isList = $__4.isList;
  var MPair = function($__super) {
    function MPair(hd, tl) {
      $traceurRuntime.superConstructor(MPair).call(this);
      this.hd = hd;
      this.tl = tl;
      this._listLength = isList(tl) ? tl.length + 1 : -1;
      this._cachedHashCode = null;
    }
    return ($traceurRuntime.createClass)(MPair, {
      writeToPort: function(out, itemFn) {
        out.consume('(');
        var rest = this;
        while (true) {
          if (check(rest)) {
            itemFn(out, rest.hd);
          } else {
            out.consume('. ');
            itemFn(out, rest);
            break;
          }
          rest = rest.tl;
          if (isEmpty(rest)) {
            break;
          } else {
            out.consume(' ');
          }
        }
        out.consume(')');
      },
      displayNativeString: function(out) {
        this.writeToPort(out, displayNativeString);
      },
      writeNativeString: function(out) {
        this.writeToPort(out, writeNativeString);
      },
      equals: function(v) {
        if (!check(v) || this.length !== v.length) {
          return false;
        }
        var hd1 = this.hd;
        var tl1 = this.tl;
        var hd2 = v.hd;
        var tl2 = v.tl;
        while (true) {
          if (!isEqual(hd1, hd2)) {
            return false;
          }
          if (!check(tl1) || isEmpty(tl1)) {
            return isEqual(tl1, tl2);
          }
          hd1 = tl1.hd;
          tl1 = tl1.tl;
          hd2 = tl2.hd;
          tl2 = tl2.tl;
        }
      },
      hashForEqual: function() {
        if (this._cachedHashCode === null) {
          this._cachedHashCode = $traceurRuntime.superGet(this, MPair.prototype, "hashForEqual").call(this);
        }
        return this._cachedHashCode;
      },
      car: function() {
        return this.hd;
      },
      cdr: function() {
        return this.tl;
      },
      setCar: function(v) {
        if (this.hd !== v) {
          this.hd = v;
          this._cachedHashCode = null;
        }
      },
      setCdr: function(v) {
        if (this.tl !== v) {
          this.tl = v;
          this._listLength = isList(tl) ? tl.length + 1 : -1;
          this._cachedHashCode = null;
        }
      },
      get length() {
        return this._listLength;
      },
      isImmutable: function() {
        return false;
      }
    }, {}, $__super);
  }(PrintablePrimitive);
  function check(v) {
    return (typeof v === 'undefined' ? 'undefined' : $traceurRuntime.typeof(v)) === 'object' && v !== null && v.constructor === MPair;
  }
  function make(hd, tl) {
    return new MPair(hd, tl);
  }
  return {
    get check() {
      return check;
    },
    get make() {
      return make;
    }
  };
})();
var $__runtime_47_core_47_printing_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core/printing.js";
  var Primitive = $__runtime_47_core_47_primitive_46_js__;
  var $__0 = $__runtime_47_core_47_print_95_native_95_string_46_js__,
      displayNativeString = $__0.displayNativeString,
      writeNativeString = $__0.writeNativeString,
      printNativeString = $__0.printNativeString;
  var $__1 = $__runtime_47_core_47_print_95_ustring_46_js__,
      displayUString = $__1.displayUString,
      writeUString = $__1.writeUString,
      printUString = $__1.printUString;
  var Ports = $__runtime_47_core_47_ports_46_js__;
  function display(out, v) {
    if (out.isUStringPort()) {
      displayUString(out, v);
    } else {
      displayNativeString(out, v);
    }
  }
  function write(out, v) {
    if (out.isUStringPort()) {
      writeUString(out, v);
    } else {
      writeNativeString(out, v);
    }
  }
  function print(out, v, printAsExpression, quoteDepth) {
    if (out.isUStringPort()) {
      printUString(out, v, printAsExpression, quoteDepth);
    } else {
      printNativeString(out, v, printAsExpression, quoteDepth);
    }
  }
  return {
    get display() {
      return display;
    },
    get write() {
      return write;
    },
    get print() {
      return print;
    }
  };
})();
var $__runtime_47_core_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core.js";
  var Box = $__runtime_47_core_47_box_46_js__;
  var Bytes = $__runtime_47_core_47_bytes_46_js__;
  var Char = $__runtime_47_core_47_char_46_js__;
  var UString = $__runtime_47_core_47_unicode_95_string_46_js__;
  var Regexp = $__runtime_47_core_47_regexp_46_js__;
  var Hash = $__runtime_47_core_47_hash_46_js__;
  var Keyword = $__runtime_47_core_47_keyword_46_js__;
  var Number = $__runtime_47_core_47_numbers_46_js__;
  var Pair = $__runtime_47_core_47_pair_46_js__;
  var Ports = $__runtime_47_core_47_ports_46_js__;
  var Primitive = $__runtime_47_core_47_primitive_46_js__;
  var Struct = $__runtime_47_core_47_struct_46_js__;
  var Symbol = $__runtime_47_core_47_symbol_46_js__;
  var Values = $__runtime_47_core_47_values_46_js__;
  var Vector = $__runtime_47_core_47_vector_46_js__;
  var Marks = $__runtime_47_core_47_marks_46_js__;
  var MPair = $__runtime_47_core_47_mpair_46_js__;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  function bitwiseNot(a) {
    return ~a;
  }
  return {
    get Bytes() {
      return Bytes;
    },
    get Number() {
      return Number;
    },
    get Char() {
      return Char;
    },
    get Pair() {
      return Pair;
    },
    get Primitive() {
      return Primitive;
    },
    get Struct() {
      return Struct;
    },
    get Symbol() {
      return Symbol;
    },
    get Keyword() {
      return Keyword;
    },
    get Values() {
      return Values;
    },
    get Vector() {
      return Vector;
    },
    get Hash() {
      return Hash;
    },
    get Box() {
      return Box;
    },
    get Marks() {
      return Marks;
    },
    get Ports() {
      return Ports;
    },
    get UString() {
      return UString;
    },
    get Regexp() {
      return Regexp;
    },
    get MPair() {
      return MPair;
    },
    get argumentsToArray() {
      return $__runtime_47_core_47_lib_46_js__.argumentsToArray;
    },
    get argumentsSlice() {
      return $__runtime_47_core_47_lib_46_js__.argumentsSlice;
    },
    get racketCoreError() {
      return $__runtime_47_core_47_errors_46_js__.racketCoreError;
    },
    get racketContractError() {
      return $__runtime_47_core_47_errors_46_js__.racketContractError;
    },
    get makeArgumentError() {
      return $__runtime_47_core_47_errors_46_js__.makeArgumentError;
    },
    get makeArgumentsError() {
      return $__runtime_47_core_47_errors_46_js__.makeArgumentsError;
    },
    get makeMismatchError() {
      return $__runtime_47_core_47_errors_46_js__.makeMismatchError;
    },
    get makeOutOfRangeError() {
      return $__runtime_47_core_47_errors_46_js__.makeOutOfRangeError;
    },
    get isContractErr() {
      return $__runtime_47_core_47_errors_46_js__.isContractErr;
    },
    get errMsg() {
      return $__runtime_47_core_47_errors_46_js__.errMsg;
    },
    get attachProcedureArity() {
      return $__runtime_47_core_47_procedure_46_js__.attachProcedureArity;
    },
    get attachProcedureName() {
      return $__runtime_47_core_47_procedure_46_js__.attachProcedureName;
    },
    get isEq() {
      return $__runtime_47_core_47_equality_46_js__.isEq;
    },
    get isEqv() {
      return $__runtime_47_core_47_equality_46_js__.isEqv;
    },
    get isEqual() {
      return $__runtime_47_core_47_equality_46_js__.isEqual;
    },
    get hashForEq() {
      return $__runtime_47_core_47_hashing_46_js__.hashForEq;
    },
    get hashForEqv() {
      return $__runtime_47_core_47_hashing_46_js__.hashForEqv;
    },
    get hashForEqual() {
      return $__runtime_47_core_47_hashing_46_js__.hashForEqual;
    },
    get display() {
      return $__runtime_47_core_47_printing_46_js__.display;
    },
    get write() {
      return $__runtime_47_core_47_printing_46_js__.write;
    },
    get print() {
      return $__runtime_47_core_47_printing_46_js__.print;
    },
    get bitwiseNot() {
      return bitwiseNot;
    }
  };
})();
var $__runtime_47_paramz_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/paramz.js";
  var Core = $__runtime_47_core_46_js__;
  var hamt = ($__runtime_47_core_47_lib_46_js__).hamt;
  var Marks = Core.Marks;
  var Box = Core.Box;
  var ParameterizationKey = {};
  var ExceptionHandlerKey = {};
  var __top;
  function getCurrentParameterization() {
    return Marks.getFirstMark(Marks.getFrames(), ParameterizationKey, false);
  }
  function makeParameter(initValue) {
    var param = function(maybeSetVal) {
      var current = getCurrentParameterization();
      var pv = (current && current.get(param, false)) || __top.get(param, false);
      if (!pv && maybeSetVal !== undefined) {
        pv = Box.make(initValue);
        __top.set(param, pv);
      }
      if (maybeSetVal === undefined) {
        return pv ? pv.get() : initValue;
      }
      pv.set(maybeSetVal);
    };
    return param;
  }
  function extendParameterization(parameterization) {
    for (var args = [],
        $__9 = 1; $__9 < arguments.length; $__9++)
      args[$__9 - 1] = arguments[$__9];
    var result = parameterization;
    for (var i = 0; i < args.length; i += 2) {
      result = result.set(args[i], Box.make(args[i + 1]));
    }
    return result;
  }
  function copyParameterization(parameterization) {
    var $__11,
        $__12;
    var result = hamt.make();
    var $__5 = true;
    var $__6 = false;
    var $__7 = undefined;
    try {
      for (var $__3 = void 0,
          $__2 = (parameterization)[Symbol.iterator](); !($__5 = ($__3 = $__2.next()).done); $__5 = true) {
        var $__10 = $__3.value,
            key = ($__11 = $__10[Symbol.iterator](), ($__12 = $__11.next()).done ? void 0 : $__12.value),
            val = ($__12 = $__11.next()).done ? void 0 : $__12.value;
        {
          result = result.set(key, Box.make(val.get()));
        }
      }
    } catch ($__8) {
      $__6 = true;
      $__7 = $__8;
    } finally {
      try {
        if (!$__5 && $__2.return != null) {
          $__2.return();
        }
      } finally {
        if ($__6) {
          throw $__7;
        }
      }
    }
    return result;
  }
  (function() {
    var p = getCurrentParameterization();
    if (p !== false) {
      return;
    }
    Marks.setMark(ParameterizationKey, hamt.make());
    __top = new Map();
    Marks.registerAsynCallbackWrapper({
      onCreate: function(state) {
        var $__11,
            $__12;
        var paramz = {};
        paramz.top = new Map();
        var $__5 = true;
        var $__6 = false;
        var $__7 = undefined;
        try {
          for (var $__3 = void 0,
              $__2 = (__top)[Symbol.iterator](); !($__5 = ($__3 = $__2.next()).done); $__5 = true) {
            var $__10 = $__3.value,
                key = ($__11 = $__10[Symbol.iterator](), ($__12 = $__11.next()).done ? void 0 : $__12.value),
                val = ($__12 = $__11.next()).done ? void 0 : $__12.value;
            {
              paramz.top.set(key, Box.make(val.get()));
            }
          }
        } catch ($__8) {
          $__6 = true;
          $__7 = $__8;
        } finally {
          try {
            if (!$__5 && $__2.return != null) {
              $__2.return();
            }
          } finally {
            if ($__6) {
              throw $__7;
            }
          }
        }
        paramz.bottom = copyParameterization(Marks.getFirstMark(Marks.getFrames(), ParameterizationKey, false));
        state.paramz = paramz;
      },
      onInvoke: function(state) {
        __top = state.paramz.top;
        Marks.setMark(ParameterizationKey, state.paramz.bottom);
      }
    });
  }());
  return {
    get ParameterizationKey() {
      return ParameterizationKey;
    },
    get ExceptionHandlerKey() {
      return ExceptionHandlerKey;
    },
    get getCurrentParameterization() {
      return getCurrentParameterization;
    },
    get makeParameter() {
      return makeParameter;
    },
    get extendParameterization() {
      return extendParameterization;
    },
    get copyParameterization() {
      return copyParameterization;
    }
  };
})();
var $__runtime_47_kernel_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/kernel.js";
  var Core = $__runtime_47_core_46_js__;
  var Paramz = $__runtime_47_paramz_46_js__;
  function isImmutable(v) {
    if (Core.Primitive.check(v)) {
      return v.isImmutable();
    } else if (Core.Bytes.check(v) || typeof v === 'string') {
      return true;
    } else if (typeof v === 'number' || typeof v === 'boolean' || typeof v === 'undefined' || v === null) {
      return false;
    }
    throw Core.racketCoreError('isImmutable not implemented for', v);
  }
  var NO_ARG_FORM_RE = /^~[\s~n%]/;
  function fprintf(isPrintAsExpression, out, form) {
    var $__7;
    for (var args = [],
        $__0 = 3; $__0 < arguments.length; $__0++)
      args[$__0 - 3] = arguments[$__0];
    var regex = /~(?:[aAeEsSvVbBoOxX~n%]|\s+)/g;
    var formStr = form.toString();
    var reExecResult;
    var currentMatchIndex = 0;
    var prevIndex = 0;
    var lastMatch = '';
    var matches = formStr.match(regex);
    var numExpected = matches ? matches.filter(function(m) {
      return !NO_ARG_FORM_RE.test(m);
    }).length : 0;
    if (numExpected !== args.length) {
      throw ($__7 = Core).racketContractError.apply($__7, $traceurRuntime.spread([("fprintf: format string requires " + numExpected + " arguments, ") + ("given " + args.length + "; arguments were:"), out, form], args));
    }
    while ((reExecResult = regex.exec(formStr)) !== null) {
      Core.display(out, formStr.slice(prevIndex + lastMatch.length, reExecResult.index));
      prevIndex = reExecResult.index;
      lastMatch = reExecResult[0];
      if (/^~\s/.test(lastMatch))
        continue;
      switch (lastMatch.charAt(1)) {
        case '~':
          Core.display(out, '~');
          continue;
        case 'n':
        case '%':
          Core.display(out, '\n');
          continue;
      }
      var v = args[currentMatchIndex];
      currentMatchIndex += 1;
      switch (lastMatch.charAt(1)) {
        case 'a':
        case 'A':
          Core.display(out, v);
          break;
        case 'e':
        case 'E':
          Core.display(out, v);
          break;
        case 's':
        case 'S':
          Core.write(out, v);
          break;
        case 'v':
        case 'V':
          Core.print(out, v, isPrintAsExpression, 0);
          break;
        case 'b':
        case 'B':
          Core.display(out, v.toString(2));
          break;
        case 'o':
        case 'O':
          Core.display(out, v.toString(8));
          break;
        case 'x':
        case 'X':
          Core.display(out, v.toString(16));
          break;
        default:
          throw Core.racketContractError('Unsupported format:', lastMatch);
      }
    }
    if (lastMatch.length + prevIndex < form.length) {
      Core.display(out, formStr.slice(lastMatch.length + prevIndex));
    }
  }
  function format(form) {
    for (var args = [],
        $__1 = 1; $__1 < arguments.length; $__1++)
      args[$__1 - 1] = arguments[$__1];
    var strOut = Core.Ports.openOutputString();
    fprintf.apply((void 0), $traceurRuntime.spread([strOut, form], args));
    return Core.Ports.getOutputString(strOut);
  }
  function listToString(charsList) {
    return Core.UString.makeMutableFromChars(Core.Pair.listToArray(charsList));
  }
  function error(firstArg) {
    var $__7,
        $__8;
    for (var rest = [],
        $__2 = 1; $__2 < arguments.length; $__2++)
      rest[$__2 - 1] = arguments[$__2];
    if (Core.Symbol.check(firstArg)) {
      if (rest.length === 0) {
        throw Core.racketCoreError(firstArg.toString());
      } else {
        throw ($__7 = Core).racketCoreError.apply($__7, $traceurRuntime.spread([(firstArg.toString() + ":")], rest));
      }
    } else if (Core.UString.check(firstArg) || typeof firstArg === 'string') {
      throw ($__8 = Core).racketCoreError.apply($__8, $traceurRuntime.spread([firstArg.toString()], rest));
    } else {
      throw Core.racketContractError('error: invalid arguments');
    }
  }
  function doraise(e) {
    var markset = Core.Marks.getContinuationMarks();
    var marks = Core.Marks.getMarks(markset, Paramz.ExceptionHandlerKey);
    if (marks.length === 0) {
      throw e;
    } else {
      marks.hd(e);
    }
  }
  function argerror(name, expected) {
    var $__7;
    for (var rest = [],
        $__3 = 2; $__3 < arguments.length; $__3++)
      rest[$__3 - 2] = arguments[$__3];
    var theerr;
    if (Core.Symbol.check(name) && (Core.UString.check(expected) || typeof expected === 'string') && rest.length >= 1) {
      theerr = ($__7 = Core).makeArgumentError.apply($__7, $traceurRuntime.spread([name, expected], rest));
    } else {
      theerr = Core.racketContractError('raise-argument-error: invalid arguments');
    }
    doraise(theerr);
  }
  function argserror(name, msg, field) {
    var $__7;
    for (var rest = [],
        $__4 = 3; $__4 < arguments.length; $__4++)
      rest[$__4 - 3] = arguments[$__4];
    var theerr;
    if (Core.Symbol.check(name) && (Core.UString.check(msg) || typeof msg === 'string') && (Core.UString.check(field) || typeof field === 'string') && rest.length >= 1 && rest.length % 2 === 1) {
      theerr = ($__7 = Core).makeArgumentsError.apply($__7, $traceurRuntime.spread([name, msg, field], rest));
    } else {
      theerr = Core.racketContractError('raise-arguments-error: invalid arguments');
    }
    doraise(theerr);
  }
  function mismatcherror(name, msg) {
    var $__7;
    for (var rest = [],
        $__5 = 2; $__5 < arguments.length; $__5++)
      rest[$__5 - 2] = arguments[$__5];
    var theerr;
    if (Core.Symbol.check(name) && (Core.UString.check(msg) || typeof msg === 'string')) {
      theerr = ($__7 = Core).makeMismatchError.apply($__7, $traceurRuntime.spread([name, msg], rest));
    } else {
      theerr = Core.racketContractError('error: invalid arguments');
    }
    doraise(theerr);
  }
  function random() {
    for (var args = [],
        $__6 = 0; $__6 < arguments.length; $__6++)
      args[$__6] = arguments[$__6];
    switch (args.length) {
      case 0:
        return Math.random();
      case 1:
        if (args[0] > 0) {
          return Math.floor(Math.random() * args[0]);
        }
        error('random: argument should be positive');
      case 2:
        if (args[0] > 0 && args[1] > args[0]) {
          return Math.floor(args[0] + Math.random() * (args[1] - args[0]));
        }
        error('random: invalid arguments');
      default:
        error('random: invalid number of arguments');
    }
  }
  function memv(v, lst) {
    while (Core.Pair.isEmpty(lst) == false) {
      if (Core.isEqv(v, lst.hd)) {
        return lst;
      }
      lst = lst.tl;
      continue;
    }
    return false;
  }
  function memq(v, lst) {
    while (Core.Pair.isEmpty(lst) == false) {
      if (Core.isEq(v, lst.hd)) {
        return lst;
      }
      lst = lst.tl;
      continue;
    }
    return false;
  }
  function memf(f, lst) {
    while (Core.Pair.isEmpty(lst) == false) {
      if (f(lst.hd)) {
        return lst;
      }
      lst = lst.tl;
      continue;
    }
    return false;
  }
  function findf(f, lst) {
    while (Core.Pair.isEmpty(lst) == false) {
      if (f(lst.hd)) {
        return list.hd;
      }
      lst = lst.tl;
      continue;
    }
    return false;
  }
  function sort9(lst, cmp) {
    var arr = Core.Pair.listToArray(lst);
    var x2i = new Map();
    arr.forEach(function(x, i) {
      x2i.set(x, i);
    });
    var srted = arr.sort(function(x, y) {
      if (cmp(x, y)) {
        return -1;
      } else if (cmp(y, x)) {
        return 1;
      }
      return x2i.get(x) - x2i.get(y);
    });
    return Core.Pair.listFromArray(srted);
  }
  function assv(k, lst) {
    while (Core.Pair.isEmpty(lst) === false) {
      if (Core.isEqv(k, lst.hd.hd)) {
        return lst.hd;
      }
      lst = lst.tl;
    }
    return false;
  }
  function assq(k, lst) {
    while (Core.Pair.isEmpty(lst) === false) {
      if (Core.isEq(k, lst.hd.hd)) {
        return lst.hd;
      }
      lst = lst.tl;
    }
    return false;
  }
  function assf(f, lst) {
    while (Core.Pair.isEmpty(lst) === false) {
      if (f(lst.hd.hd)) {
        return lst.hd;
      }
      lst = lst.tl;
    }
    return false;
  }
  return {
    get isImmutable() {
      return isImmutable;
    },
    get fprintf() {
      return fprintf;
    },
    get format() {
      return format;
    },
    get listToString() {
      return listToString;
    },
    get error() {
      return error;
    },
    get doraise() {
      return doraise;
    },
    get argerror() {
      return argerror;
    },
    get argserror() {
      return argserror;
    },
    get mismatcherror() {
      return mismatcherror;
    },
    get random() {
      return random;
    },
    get memv() {
      return memv;
    },
    get memq() {
      return memq;
    },
    get memf() {
      return memf;
    },
    get findf() {
      return findf;
    },
    get sort9() {
      return sort9;
    },
    get assv() {
      return assv;
    },
    get assq() {
      return assq;
    },
    get assf() {
      return assf;
    }
  };
})();
var $__runtime_47_lib_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/lib.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var Paramz = $__runtime_47_paramz_46_js__;
  var Core = $__runtime_47_core_46_js__;
  var Kernel = $__runtime_47_kernel_46_js__;
  var Values = Core.Values;
  var Pair = Core.Pair;
  var __rjs_quoted__ = {};
  __rjs_quoted__.Core = Core;
  __rjs_quoted__.Pair = Pair;
  __rjs_quoted__.Kernel = Kernel;
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get Kernel() {
      return Kernel;
    },
    get Core() {
      return Core;
    },
    get Paramz() {
      return Paramz;
    },
    get Values() {
      return Values;
    },
    get Pair() {
      return Pair;
    }
  };
})();
var $__runtime_47_unsafe_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/unsafe.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var Core = $__runtime_47_core_46_js__;
  var unsafe_fx_plus_ = function(a16, b17) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return (a16 + b17) | 0;
  };
  var unsafe_fx_ = function(a18, b19) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return (a18 - b19) | 0;
  };
  var unsafe_fx_times_ = function(a20, b21) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return (a20 * b21) | 0;
  };
  var unsafe_fxquotient = function(a22, b23) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return (a22 / b23) | 0;
  };
  var unsafe_fxremainder = function(a24, b25) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return (a24 % b25) | 0;
  };
  var unsafe_fxmodulo = function(a26, b27) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var remainder28 = a26 % b27;
    if ((remainder28 >= 0) !== false) {
      var if_res7 = remainder28;
    } else {
      var if_res7 = remainder28 + b27;
    }
    return Math.floor(if_res7);
  };
  var unsafe_fxabs = function(a29) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return Math.abs(a29);
  };
  var unsafe_fx_eq_ = function(a30, b31) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return a30 === b31;
  };
  var unsafe_fx_lt_ = function(a32, b33) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return a32 < b33;
  };
  var unsafe_fx_lt__eq_ = function(a34, b35) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return a34 <= b35;
  };
  var unsafe_fx_gt_ = function(a36, b37) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return a36 > b37;
  };
  var unsafe_fx_gt__eq_ = function(a38, b39) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return a38 >= b39;
  };
  var unsafe_fxmin = function(a40, b41) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((a40 < b41) !== false) {
      var if_res8 = a40;
    } else {
      var if_res8 = b41;
    }
    return if_res8;
  };
  var unsafe_fxmax = function(a42, b43) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((a42 > b43) !== false) {
      var if_res9 = b43;
    } else {
      var if_res9 = a42;
    }
    return if_res9;
  };
  var unsafe_fxrshift = function(a44, b45) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return (a44 >> b45) | 0;
  };
  var unsafe_fxlshift = function(a46, b47) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return (a46 << b47) | 0;
  };
  var unsafe_fxand = function(a48, b49) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return (a48 && b49) | 0;
  };
  var unsafe_fxior = function(a50, b51) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return (a50 || b51) | 0;
  };
  var unsafe_fxxor = function(a52, b53) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return (a52 ^ b53) | 0;
  };
  var unsafe_fxnot = Core.bitwiseNot;
  var unsafe_car = function(v54) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return v54.hd;
  };
  var unsafe_cdr = function(v55) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return v55.tl;
  };
  var unsafe_mcar = function(v56) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return v56.hd;
  };
  var unsafe_mcdr = function(v57) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return v57.tl;
  };
  var unsafe_set_mcar_bang_ = function(p58, v59) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return p58.setCar(v59);
  };
  var unsafe_set_mcdr_bang_ = function(p60, v61) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return p60.setCdr(v61);
  };
  var unsafe_cons_list = function(v62, rest63) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return Core.Pair.make(v62, rest63);
  };
  var unsafe_struct_ref = function(v64, k65) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return v64._fields[k65];
  };
  var unsafe_vector_ref = function(v66, k67) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return v66.ref(k67);
  };
  var unsafe_vector_set_bang_ = function(v68, k69, val70) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return v68.set(k69, val70);
  };
  var unsafe_vector_length = function(v71) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return v71.length();
  };
  var unsafe_immutable_hash_iterate_first = function(h72) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h72.iterateFirst();
  };
  var unsafe_immutable_hash_iterate_next = function(h73, i74) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h73.iterateNext(i74);
  };
  var unsafe_immutable_hash_iterate_key = function(h75, i76) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h75.iterateKey(i76);
  };
  var unsafe_immutable_hash_iterate_value = function(h77, i78) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h77.iterateValue(i78);
  };
  var unsafe_immutable_hash_iterate_key_plus_value = function(h79, i80) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h79.iterateKeyValue(i80);
  };
  var unsafe_immutable_hash_iterate_pair = function(h81, i82) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h81.iteratePair(i82);
  };
  var unsafe_mutable_hash_iterate_first = function(h83) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h83.iterateFirst();
  };
  var unsafe_mutable_hash_iterate_next = function(h84, i85) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h84.iterateNext(i85);
  };
  var unsafe_mutable_hash_iterate_key = function(h86, i87) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h86.iterateKey(i87);
  };
  var unsafe_mutable_hash_iterate_value = function(h88, i89) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h88.iterateValue(i89);
  };
  var unsafe_mutable_hash_iterate_key_plus_value = function(h90, i91) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h90.iterateKeyValue(i91);
  };
  var unsafe_mutable_hash_iterate_pair = function(h92, i93) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h92.iteratePair(i93);
  };
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get unsafe_fx_plus_() {
      return unsafe_fx_plus_;
    },
    get unsafe_fx_() {
      return unsafe_fx_;
    },
    get unsafe_fx_times_() {
      return unsafe_fx_times_;
    },
    get unsafe_fxquotient() {
      return unsafe_fxquotient;
    },
    get unsafe_fxremainder() {
      return unsafe_fxremainder;
    },
    get unsafe_fxmodulo() {
      return unsafe_fxmodulo;
    },
    get unsafe_fxabs() {
      return unsafe_fxabs;
    },
    get unsafe_fx_eq_() {
      return unsafe_fx_eq_;
    },
    get unsafe_fx_lt_() {
      return unsafe_fx_lt_;
    },
    get unsafe_fx_lt__eq_() {
      return unsafe_fx_lt__eq_;
    },
    get unsafe_fx_gt_() {
      return unsafe_fx_gt_;
    },
    get unsafe_fx_gt__eq_() {
      return unsafe_fx_gt__eq_;
    },
    get unsafe_fxmin() {
      return unsafe_fxmin;
    },
    get unsafe_fxmax() {
      return unsafe_fxmax;
    },
    get unsafe_fxrshift() {
      return unsafe_fxrshift;
    },
    get unsafe_fxlshift() {
      return unsafe_fxlshift;
    },
    get unsafe_fxand() {
      return unsafe_fxand;
    },
    get unsafe_fxior() {
      return unsafe_fxior;
    },
    get unsafe_fxxor() {
      return unsafe_fxxor;
    },
    get unsafe_fxnot() {
      return unsafe_fxnot;
    },
    get unsafe_car() {
      return unsafe_car;
    },
    get unsafe_cdr() {
      return unsafe_cdr;
    },
    get unsafe_mcar() {
      return unsafe_mcar;
    },
    get unsafe_mcdr() {
      return unsafe_mcdr;
    },
    get unsafe_set_mcar_bang_() {
      return unsafe_set_mcar_bang_;
    },
    get unsafe_set_mcdr_bang_() {
      return unsafe_set_mcdr_bang_;
    },
    get unsafe_cons_list() {
      return unsafe_cons_list;
    },
    get unsafe_struct_ref() {
      return unsafe_struct_ref;
    },
    get unsafe_vector_ref() {
      return unsafe_vector_ref;
    },
    get unsafe_vector_set_bang_() {
      return unsafe_vector_set_bang_;
    },
    get unsafe_vector_length() {
      return unsafe_vector_length;
    },
    get unsafe_immutable_hash_iterate_first() {
      return unsafe_immutable_hash_iterate_first;
    },
    get unsafe_immutable_hash_iterate_next() {
      return unsafe_immutable_hash_iterate_next;
    },
    get unsafe_immutable_hash_iterate_key() {
      return unsafe_immutable_hash_iterate_key;
    },
    get unsafe_immutable_hash_iterate_value() {
      return unsafe_immutable_hash_iterate_value;
    },
    get unsafe_immutable_hash_iterate_key_plus_value() {
      return unsafe_immutable_hash_iterate_key_plus_value;
    },
    get unsafe_immutable_hash_iterate_pair() {
      return unsafe_immutable_hash_iterate_pair;
    },
    get unsafe_mutable_hash_iterate_first() {
      return unsafe_mutable_hash_iterate_first;
    },
    get unsafe_mutable_hash_iterate_next() {
      return unsafe_mutable_hash_iterate_next;
    },
    get unsafe_mutable_hash_iterate_key() {
      return unsafe_mutable_hash_iterate_key;
    },
    get unsafe_mutable_hash_iterate_value() {
      return unsafe_mutable_hash_iterate_value;
    },
    get unsafe_mutable_hash_iterate_key_plus_value() {
      return unsafe_mutable_hash_iterate_key_plus_value;
    },
    get unsafe_mutable_hash_iterate_pair() {
      return unsafe_mutable_hash_iterate_pair;
    }
  };
})();
var $__runtime_47_kernel_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/kernel.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__runtime_47_lib_46_rkt_46_js__;
  var M3 = $__runtime_47_unsafe_46_rkt_46_js__;
  var equal_p = M0.Core.isEqual;
  var eqv_p = M0.Core.isEqv;
  var eq_p = M0.Core.isEq;
  var values = M0.Core.attachProcedureName(M0.Core.attachProcedureArity(function() {
    var vals94 = M0.Core.argumentsToArray(arguments);
    if ((vals94.length === 1) !== false) {
      var if_res10 = vals94[0];
    } else {
      var if_res10 = M0.Values.make(vals94);
    }
    return if_res10;
  }, 0), $rjs_core.UString.make("values"));
  var call_with_values = function(generator95, receiver96) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var vals97 = generator95();
    if (M0.Values.check(vals97) !== false) {
      var if_res12 = receiver96.apply(this, vals97.getAll());
    } else {
      if (not(eq_p(vals97, undefined) || eq_p(vals97, null)) !== false) {
        var if_res11 = receiver96.apply(this, [vals97]);
      } else {
        var if_res11 = rvoid();
      }
      var if_res12 = if_res11;
    }
    return if_res12;
  };
  var immutable_p = function(v98) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Kernel.isImmutable(v98);
  };
  var rvoid = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return null;
  };
  var void_p = function(v99) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return (v99 === null) || (v99 === undefined);
  };
  var number_p = M0.Core.Number.check;
  var real_p = M0.Core.Number.check;
  var integer_p = Number.isInteger;
  var zero_p = function(v100) {
    if (number_p(v100) !== false) {
      var if_res13 = rvoid();
    } else {
      var if_res13 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("zero?"), $rjs_core.UString.make("number?"), v100));
    }
    if_res13;
    return v100 === 0;
  };
  var positive_p = function(v101) {
    if (real_p(v101) !== false) {
      var if_res14 = rvoid();
    } else {
      var if_res14 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("positive?"), $rjs_core.UString.make("real?"), v101));
    }
    if_res14;
    return v101 > 0;
  };
  var negative_p = function(v102) {
    if (real_p(v102) !== false) {
      var if_res15 = rvoid();
    } else {
      var if_res15 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("negative?"), $rjs_core.UString.make("real?"), v102));
    }
    if_res15;
    return v102 < 0;
  };
  var add1 = function(v103) {
    if (number_p(v103) !== false) {
      var if_res16 = rvoid();
    } else {
      var if_res16 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("add1"), $rjs_core.UString.make("number?"), v103));
    }
    if_res16;
    return v103 + 1;
  };
  var sub1 = function(v104) {
    if (number_p(v104) !== false) {
      var if_res17 = rvoid();
    } else {
      var if_res17 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("sub1"), $rjs_core.UString.make("number?"), v104));
    }
    if_res17;
    return v104 - 1;
  };
  var quotient = function(dividend105, divisor106) {
    if (integer_p(dividend105) !== false) {
      var if_res18 = rvoid();
    } else {
      var if_res18 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("quotient"), $rjs_core.UString.make("integer?"), dividend105));
    }
    if_res18;
    if (integer_p(divisor106) !== false) {
      var if_res19 = rvoid();
    } else {
      var if_res19 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("quotient"), $rjs_core.UString.make("integer?"), divisor106));
    }
    if_res19;
    return (dividend105 / divisor106) | 0;
  };
  var even_p = function(v107) {
    if (integer_p(v107) !== false) {
      var if_res20 = rvoid();
    } else {
      var if_res20 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("even?"), $rjs_core.UString.make("integer?"), v107));
    }
    if_res20;
    return (v107 % 2) === 0;
  };
  var odd_p = function(v108) {
    if (integer_p(v108) !== false) {
      var if_res21 = rvoid();
    } else {
      var if_res21 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("odd?"), $rjs_core.UString.make("integer?"), v108));
    }
    if_res21;
    return not((v108 % 2) === 0);
  };
  var exact_nonnegative_integer_p = function(v109) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return Number.isInteger(v109) && (v109 >= 0);
  };
  var exact_integer_p = function(v110) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return Number.isInteger(v110);
  };
  var exact_p = function(v111) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return Number.isInteger(v111);
  };
  var single_flonum_available_p = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return false;
  };
  var __times_ = M0.Core.attachProcedureArity(M0.Core.Number.mul, 0);
  var __by_ = M0.Core.attachProcedureArity(M0.Core.Number.div, 1);
  var __plus_ = M0.Core.attachProcedureArity(M0.Core.Number.add, 0);
  var __ = M0.Core.attachProcedureArity(M0.Core.Number.sub, 1);
  var __lt_ = M0.Core.attachProcedureArity(M0.Core.Number.lt, 1);
  var __gt_ = M0.Core.attachProcedureArity(M0.Core.Number.gt, 1);
  var __lt__eq_ = M0.Core.attachProcedureArity(M0.Core.Number.lte, 1);
  var __gt__eq_ = M0.Core.attachProcedureArity(M0.Core.Number.gte, 1);
  var __eq_ = M0.Core.attachProcedureArity(M0.Core.Number.equals, 1);
  var floor = function(v112) {
    if (real_p(v112) !== false) {
      var if_res22 = rvoid();
    } else {
      var if_res22 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("floor"), $rjs_core.UString.make("real?"), v112));
    }
    if_res22;
    return Math.floor(v112);
  };
  var abs = function(v113) {
    if (real_p(v113) !== false) {
      var if_res23 = rvoid();
    } else {
      var if_res23 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("abs"), $rjs_core.UString.make("real?"), v113));
    }
    if_res23;
    return Math.abs(v113);
  };
  var sin = function(v114) {
    if (real_p(v114) !== false) {
      var if_res24 = rvoid();
    } else {
      var if_res24 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("sin"), $rjs_core.UString.make("real?"), v114));
    }
    if_res24;
    return Math.sin(v114);
  };
  var cos = function(v115) {
    if (real_p(v115) !== false) {
      var if_res25 = rvoid();
    } else {
      var if_res25 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("cos"), $rjs_core.UString.make("real?"), v115));
    }
    if_res25;
    return Math.cos(v115);
  };
  var tan = function(v116) {
    if (real_p(v116) !== false) {
      var if_res26 = rvoid();
    } else {
      var if_res26 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("tan"), $rjs_core.UString.make("real?"), v116));
    }
    if_res26;
    return Math.tan(v116);
  };
  var atan = function(v117) {
    if (real_p(v117) !== false) {
      var if_res27 = rvoid();
    } else {
      var if_res27 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("atan"), $rjs_core.UString.make("real?"), v117));
    }
    if_res27;
    return Math.atan(v117);
  };
  var ceiling = function(v118) {
    if (real_p(v118) !== false) {
      var if_res28 = rvoid();
    } else {
      var if_res28 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("ceiling"), $rjs_core.UString.make("real?"), v118));
    }
    if_res28;
    return Math.ceil(v118);
  };
  var round = function(v119) {
    if (real_p(v119) !== false) {
      var if_res29 = rvoid();
    } else {
      var if_res29 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("round"), $rjs_core.UString.make("real?"), v119));
    }
    if_res29;
    return Math.round(v119);
  };
  var min = function(a120, b121) {
    if (real_p(a120) !== false) {
      var if_res30 = rvoid();
    } else {
      var if_res30 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("min"), $rjs_core.UString.make("real?"), a120));
    }
    if_res30;
    if (real_p(b121) !== false) {
      var if_res31 = rvoid();
    } else {
      var if_res31 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("min"), $rjs_core.UString.make("real?"), b121));
    }
    if_res31;
    return Math.min(a120, b121);
  };
  var max = function(a122, b123) {
    if (real_p(a122) !== false) {
      var if_res32 = rvoid();
    } else {
      var if_res32 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("max"), $rjs_core.UString.make("real?"), a122));
    }
    if_res32;
    if (real_p(b123) !== false) {
      var if_res33 = rvoid();
    } else {
      var if_res33 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("max"), $rjs_core.UString.make("real?"), b123));
    }
    if_res33;
    return Math.max(a122, b123);
  };
  var log = function(v124) {
    if (real_p(v124) !== false) {
      var if_res34 = rvoid();
    } else {
      var if_res34 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("log"), $rjs_core.UString.make("real?"), v124));
    }
    if_res34;
    return Math.log(v124);
  };
  var expt = function(w125, z126) {
    if (number_p(w125) !== false) {
      var if_res35 = rvoid();
    } else {
      var if_res35 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("expt"), $rjs_core.UString.make("number?"), w125));
    }
    if_res35;
    if (number_p(z126) !== false) {
      var if_res36 = rvoid();
    } else {
      var if_res36 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("expt"), $rjs_core.UString.make("number?"), z126));
    }
    if_res36;
    return Math.pow(w125, z126);
  };
  var sqrt = function(v127) {
    if (number_p(v127) !== false) {
      var if_res37 = rvoid();
    } else {
      var if_res37 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("sqrt"), $rjs_core.UString.make("number?"), v127));
    }
    if_res37;
    return Math.sqrt(v127);
  };
  var sqr = function(v128) {
    if (number_p(v128) !== false) {
      var if_res38 = rvoid();
    } else {
      var if_res38 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("sqr"), $rjs_core.UString.make("number?"), v128));
    }
    if_res38;
    return __times_(v128, v128);
  };
  var remainder = function(a129, b130) {
    if (integer_p(a129) !== false) {
      var if_res39 = rvoid();
    } else {
      var if_res39 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("remainder"), $rjs_core.UString.make("integer?"), a129));
    }
    if_res39;
    if (integer_p(b130) !== false) {
      var if_res40 = rvoid();
    } else {
      var if_res40 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("remainder"), $rjs_core.UString.make("integer?"), b130));
    }
    if_res40;
    return a129 % b130;
  };
  var number__gt_string = function(n131) {
    if (number_p(n131) !== false) {
      var if_res41 = rvoid();
    } else {
      var if_res41 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("number->string"), $rjs_core.UString.make("number?"), n131));
    }
    if_res41;
    return M0.Core.UString.makeMutable(n131.toString());
  };
  var arithmetic_shift = function(n132, m133) {
    if (integer_p(n132) !== false) {
      var if_res42 = rvoid();
    } else {
      var if_res42 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("arithmetic-shift"), $rjs_core.UString.make("integer?"), n132));
    }
    if_res42;
    if (integer_p(m133) !== false) {
      var if_res43 = rvoid();
    } else {
      var if_res43 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("arithmetic-shift"), $rjs_core.UString.make("integer?"), m133));
    }
    if_res43;
    if (negative_p(n132) !== false) {
      var if_res44 = n132 >> m133;
    } else {
      var if_res44 = n132 << m133;
    }
    return if_res44;
  };
  var inexact__gt_exact = function(x134) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return x134;
  };
  var exact__gt_inexact = function(x135) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return x135;
  };
  var not = function(v136) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return equal_p(v136, false) || false;
  };
  var rfalse = false;
  var rtrue = true;
  var false_p = function(v137) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return v137 === false;
  };
  var boolean_p = function(v138) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return (v138 === true) || (v138 === false);
  };
  var car = function(pair139) {
    if (pair_p(pair139) !== false) {
      var if_res45 = rvoid();
    } else {
      var if_res45 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("car"), $rjs_core.UString.make("pair?"), pair139));
    }
    if_res45;
    return pair139.hd;
  };
  var cdr = function(pair140) {
    if (pair_p(pair140) !== false) {
      var if_res46 = rvoid();
    } else {
      var if_res46 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("cdr"), $rjs_core.UString.make("pair?"), pair140));
    }
    if_res46;
    return pair140.tl;
  };
  var cons = M0.Core.attachProcedureName(M0.Core.Pair.make, $rjs_core.UString.make("cons"));
  var pair_p = M0.Core.attachProcedureName(M0.Core.Pair.check, $rjs_core.UString.make("pair?"));
  var caar = function(v141) {
    if ((function(v142) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M0.Core.Pair.check(v142) && pair_p(v142.hd);
    })(v141) !== false) {
      var if_res47 = rvoid();
    } else {
      var if_res47 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("caar"), $rjs_core.UString.make("(check/pair-of? pair? #t)"), v141));
    }
    if_res47;
    return v141.hd.hd;
  };
  var cadr = function(v143) {
    if ((function(v144) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M0.Core.Pair.check(v144) && pair_p(v144.tl);
    })(v143) !== false) {
      var if_res48 = rvoid();
    } else {
      var if_res48 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("cadr"), $rjs_core.UString.make("(check/pair-of? #t pair?)"), v143));
    }
    if_res48;
    return v143.tl.hd;
  };
  var cdar = function(v145) {
    if ((function(v146) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M0.Core.Pair.check(v146) && pair_p(v146.hd);
    })(v145) !== false) {
      var if_res49 = rvoid();
    } else {
      var if_res49 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("cdar"), $rjs_core.UString.make("(check/pair-of? pair? #t)"), v145));
    }
    if_res49;
    return v145.hd.tl;
  };
  var cddr = function(v147) {
    if ((function(v148) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M0.Core.Pair.check(v148) && pair_p(v148.tl);
    })(v147) !== false) {
      var if_res50 = rvoid();
    } else {
      var if_res50 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("cddr"), $rjs_core.UString.make("(check/pair-of? #t pair?)"), v147));
    }
    if_res50;
    return v147.tl.tl;
  };
  var caddr = function(v149) {
    if ((function(v150) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M0.Core.Pair.check(v150) && (function(v151) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M0.Core.Pair.check(v151) && pair_p(v151.tl);
      })(v150.tl);
    })(v149) !== false) {
      var if_res51 = rvoid();
    } else {
      var if_res51 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("caddr"), $rjs_core.UString.make("(check/pair-of? #t (check/pair-of? #t pair?))"), v149));
    }
    if_res51;
    return v149.tl.tl.hd;
  };
  var rnull = M0.Core.Pair.EMPTY;
  var list = M0.Core.attachProcedureName(M0.Core.attachProcedureArity(M0.Core.Pair.makeList, 0), $rjs_core.UString.make("list"));
  var null_p = M0.Core.Pair.isEmpty;
  var list_p = M0.Core.Pair.isList;
  var length = function(v152) {
    if (list_p(v152) !== false) {
      var if_res52 = rvoid();
    } else {
      var if_res52 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("length"), $rjs_core.UString.make("list?"), v152));
    }
    if_res52;
    return v152.length;
  };
  var reverse = function(lst153) {
    if (list_p(lst153) !== false) {
      var if_res53 = rvoid();
    } else {
      var if_res53 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("reverse"), $rjs_core.UString.make("list?"), lst153));
    }
    if_res53;
    var loop154 = function(lst155, result156) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (null_p(lst155) !== false) {
        var if_res54 = result156;
      } else {
        var if_res54 = loop154(lst155.tl, M0.Core.Pair.make(lst155.hd, result156));
      }
      return if_res54;
    };
    return loop154(lst153, $rjs_core.Pair.makeList());
  };
  var list_times_ = function() {
    var let_result55 = values();
    var n_args157 = arguments.length;
    var top_arguments158 = arguments;
    var loop159 = function(ii160, result161) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if ((ii160 === 0) !== false) {
        var if_res56 = result161;
      } else {
        var next_ii162 = ii160 - 1;
        var if_res56 = loop159(next_ii162, M0.Core.Pair.make(top_arguments158[next_ii162], result161));
      }
      return if_res56;
    };
    return loop159(n_args157 - 1, arguments[n_args157 - 1]);
  };
  var append = function() {
    var let_result57 = values();
    var result163 = $rjs_core.Pair.makeList();
    var lsts164 = arguments;
    var loop165 = function(i166) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if ((i166 < lsts164.length) !== false) {
        var lst167 = lsts164[i166];
        result163 = foldr(M0.Core.Pair.make, lst167, result163);
        var if_res58 = loop165(i166 + 1);
      } else {
        var if_res58 = rvoid();
      }
      return if_res58;
    };
    loop165(0);
    return result163;
  };
  var for_each = function(lam168) {
    if ((arguments.length < 1) !== false) {
      throw M0.Core.racketContractError($rjs_core.UString.make("arity mismatch"));
      var if_res59 = null;
    } else {
      var if_res59 = rvoid();
    }
    if_res59;
    var let_result60 = values();
    var lsts169 = Array.prototype.slice.call(arguments, 1);
    if (procedure_p(lam168) !== false) {
      var if_res61 = rvoid();
    } else {
      throw M0.Core.racketContractError($rjs_core.UString.make("Expected:"), $rjs_core.UString.make("procedure?"), $rjs_core.UString.make(", given:"), lam168, $rjs_core.UString.make(", at:"), 0);
      var if_res61 = null;
    }
    if_res61;
    map.apply(null, [lam168].concat(lsts169));
    return null;
  };
  var mcons = function(hd170, tl171) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.MPair.make(hd170, tl171);
  };
  var mpair_p = function(v172) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.MPair.check(v172);
  };
  var mcar = function(p173) {
    if (mpair_p(p173) !== false) {
      var if_res62 = rvoid();
    } else {
      var if_res62 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("mcar"), $rjs_core.UString.make("mpair?"), p173));
    }
    if_res62;
    return p173.car();
  };
  var mcdr = function(p174) {
    if (mpair_p(p174) !== false) {
      var if_res63 = rvoid();
    } else {
      var if_res63 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("mcdr"), $rjs_core.UString.make("mpair?"), p174));
    }
    if_res63;
    return p174.cdr();
  };
  var set_mcar_bang_ = function(p175, v176) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (mpair_p(p175) !== false) {
      var if_res64 = rvoid();
    } else {
      throw M0.Core.racketContractError($rjs_core.UString.make("Expected:"), $rjs_core.UString.make("mpair?"), $rjs_core.UString.make(", given:"), p175, $rjs_core.UString.make(", at:"), 0);
      var if_res64 = null;
    }
    if_res64;
    return p175.setCar(v176);
  };
  var set_mcdr_bang_ = function(p177, v178) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (mpair_p(p177) !== false) {
      var if_res65 = rvoid();
    } else {
      throw M0.Core.racketContractError($rjs_core.UString.make("Expected:"), $rjs_core.UString.make("mpair?"), $rjs_core.UString.make(", given:"), p177, $rjs_core.UString.make(", at:"), 0);
      var if_res65 = null;
    }
    if_res65;
    return p177.setCdr(v178);
  };
  var make_struct_type = function(name179, super_type180, init_field_count181, auto_field_count182, auto_v183, props184, inspector185, proc_spec186, immutables187, guard188, constructor_name189) {
    return M0.Core.Struct.makeStructType({
      'name': name179.toString(),
      'superType': super_type180,
      'initFieldCount': init_field_count181,
      'autoFieldCount': auto_field_count182,
      'autoV': auto_v183,
      'props': props184,
      'inspector': inspector185,
      'procSpec': proc_spec186,
      'immutables': immutables187,
      'guard': guard188,
      'constructorName': constructor_name189
    });
  };
  var make_struct_field_accessor = function(ref190, index191, field_name192) {
    return function(s193) {
      if ((arguments.length !== 1) !== false) {
        throw M0.Core.racketContractError($rjs_core.UString.make("arity mismatch"));
        var if_res66 = null;
      } else {
        var if_res66 = rvoid();
      }
      if_res66;
      return ref190(s193, index191);
    };
  };
  var make_struct_field_mutator = function(set194, index195, fieldName196) {
    return function(s197, v198) {
      if ((arguments.length !== 2) !== false) {
        throw M0.Core.racketContractError($rjs_core.UString.make("arity mismatch"));
        var if_res67 = null;
      } else {
        var if_res67 = rvoid();
      }
      if_res67;
      return set194(s197, index195, v198);
    };
  };
  var make_struct_type_property = function(name199, guard200, supers201, can_impersonate_p202) {
    return M0.Core.Struct.makeStructTypeProperty({
      'name': name199,
      'guard': guard200,
      'supers': supers201,
      'canImpersonate': can_impersonate_p202
    });
  };
  var check_struct_type = function(name203, what204) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (what204 !== false) {
      if (M0.Core.Struct.isStructType(what204) !== false) {
        var if_res68 = rvoid();
      } else {
        throw M0.Core.racketCoreError($rjs_core.UString.make("not a struct type"));
        var if_res68 = null;
      }
      if_res68;
      var if_res69 = what204;
    } else {
      var if_res69 = rvoid();
    }
    return if_res69;
  };
  var struct_type_p = function(v205) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.Struct.isStructType(v205);
  };
  var struct_type_info = function(desc206) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.Values.make(M0.Core.Struct.structTypeInfo(desc206));
  };
  var vector = function() {
    return M0.Core.Vector.make(M0.Core.argumentsToArray(arguments), true);
  };
  var make_vector = function(size207, v208) {
    if (integer_p(size207) !== false) {
      var if_res70 = rvoid();
    } else {
      var if_res70 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("make-vector"), $rjs_core.UString.make("integer?"), size207));
    }
    if_res70;
    return M0.Core.Vector.makeInit(size207, v208 || 0);
  };
  var vector_p = M0.Core.Vector.check;
  var vector_length = function(v209) {
    if (vector_p(v209) !== false) {
      var if_res71 = rvoid();
    } else {
      var if_res71 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("vector-length"), $rjs_core.UString.make("vector?"), v209));
    }
    if_res71;
    return v209.length();
  };
  var vector_ref = function(vec210, i211) {
    if (vector_p(vec210) !== false) {
      var if_res72 = rvoid();
    } else {
      var if_res72 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("vector-ref"), $rjs_core.UString.make("vector?"), vec210));
    }
    if_res72;
    if (integer_p(i211) !== false) {
      var if_res73 = rvoid();
    } else {
      var if_res73 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("vector-ref"), $rjs_core.UString.make("integer?"), i211));
    }
    if_res73;
    return vec210.ref(i211);
  };
  var vector_set_bang_ = function(vec212, i213, v214) {
    if (vector(vec212) !== false) {
      var if_res74 = rvoid();
    } else {
      var if_res74 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("vector-set!"), $rjs_core.UString.make("vector"), vec212));
    }
    if_res74;
    if (integer_p(i213) !== false) {
      var if_res75 = rvoid();
    } else {
      var if_res75 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("vector-set!"), $rjs_core.UString.make("integer?"), i213));
    }
    if_res75;
    return vec212.set(i213, v214);
  };
  var vector__gt_list = function(vec215) {
    if (vector_p(vec215) !== false) {
      var if_res76 = rvoid();
    } else {
      var if_res76 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("vector->list"), $rjs_core.UString.make("vector?"), vec215));
    }
    if_res76;
    return M0.Core.Pair.listFromArray(vec215.items);
  };
  var vector__gt_immutable_vector = function(vec216) {
    if (vector_p(vec216) !== false) {
      var if_res77 = rvoid();
    } else {
      var if_res77 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("vector->immutable-vector"), $rjs_core.UString.make("vector?"), vec216));
    }
    if_res77;
    return M0.Core.Vector.copy(vec216, false);
  };
  var hash = function() {
    var let_result78 = values();
    var kv_times_217 = arguments;
    if (((kv_times_217.length % 2) !== 0) !== false) {
      throw M0.Core.racketContractError($rjs_core.UString.make("invalid number of arguments"));
      var if_res79 = null;
    } else {
      var if_res79 = rvoid();
    }
    if_res79;
    var items218 = [];
    var loop219 = function(i220) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if ((i220 < kv_times_217.length) !== false) {
        items218.push([kv_times_217[i220], kv_times_217[__plus_(i220, 1)]]);
        var if_res80 = loop219(i220 + 2);
      } else {
        var if_res80 = rvoid();
      }
      return if_res80;
    };
    loop219(0);
    return M0.Core.Hash.makeEqual(items218, false);
  };
  var hasheqv = function() {
    var let_result81 = values();
    var kv_times_221 = arguments;
    if (((kv_times_221.length % 2) !== 0) !== false) {
      throw M0.Core.racketContractError($rjs_core.UString.make("invalid number of arguments"));
      var if_res82 = null;
    } else {
      var if_res82 = rvoid();
    }
    if_res82;
    var items222 = [];
    var loop223 = function(i224) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if ((i224 < kv_times_221.length) !== false) {
        items222.push([kv_times_221[i224], kv_times_221[__plus_(i224, 1)]]);
        var if_res83 = loop223(i224 + 2);
      } else {
        var if_res83 = rvoid();
      }
      return if_res83;
    };
    loop223(0);
    return M0.Core.Hash.makeEqv(items222, false);
  };
  var hasheq = function() {
    var let_result84 = values();
    var kv_times_225 = arguments;
    if (((kv_times_225.length % 2) !== 0) !== false) {
      throw M0.Core.racketContractError($rjs_core.UString.make("invalid number of arguments"));
      var if_res85 = null;
    } else {
      var if_res85 = rvoid();
    }
    if_res85;
    var items226 = [];
    var loop227 = function(i228) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if ((i228 < kv_times_225.length) !== false) {
        items226.push([kv_times_225[i228], kv_times_225[__plus_(i228, 1)]]);
        var if_res86 = loop227(i228 + 2);
      } else {
        var if_res86 = rvoid();
      }
      return if_res86;
    };
    loop227(0);
    return M0.Core.Hash.makeEq(items226, false);
  };
  var make_hash = function(assocs229) {
    var let_result87 = values();
    var assocs_times_230 = assocs229 || $rjs_core.Pair.makeList();
    return M0.Core.Hash.makeEqualFromAssocs(assocs_times_230, true);
  };
  var make_hasheqv = function(assocs231) {
    var let_result88 = values();
    var assocs_times_232 = assocs231 || $rjs_core.Pair.makeList();
    return M0.Core.Hash.makeEqvFromAssocs(assocs_times_232, true);
  };
  var make_hasheq = function(assocs233) {
    var let_result89 = values();
    var assocs_times_234 = assocs233 || $rjs_core.Pair.makeList();
    return M0.Core.Hash.makeEqFromAssocs(assocs_times_234, true);
  };
  var make_immutable_hash = function(assocs235) {
    var let_result90 = values();
    var assocs_times_236 = assocs235 || $rjs_core.Pair.makeList();
    return M0.Core.Hash.makeEqualFromAssocs(assocs_times_236, false);
  };
  var make_immutable_hasheqv = function(assocs237) {
    var let_result91 = values();
    var assocs_times_238 = assocs237 || $rjs_core.Pair.makeList();
    return M0.Core.Hash.makeEqvFromAssocs(assocs_times_238, false);
  };
  var make_immutable_hasheq = function(assocs239) {
    var let_result92 = values();
    var assocs_times_240 = assocs239 || $rjs_core.Pair.makeList();
    return M0.Core.Hash.makeEqFromAssocs(assocs_times_240, false);
  };
  var hash_p = M0.Core.Hash.check;
  var hash_equal_p = M0.Core.Hash.isEqualHash;
  var hash_eqv_p = M0.Core.Hash.isEqvHash;
  var hash_eq_p = M0.Core.Hash.isEqHash;
  var hash_weak_p = M0.Core.Hash.isWeakHash;
  var cl93 = function(h241, k242) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (h241.hasKey(k242) !== false) {
      var if_res96 = h241._h.get(k242);
    } else {
      var if_res96 = raise(M0.Core.makeArgumentsError($rjs_core.UString.make("hash-ref"), $rjs_core.UString.make("no value found for key"), $rjs_core.UString.make("key"), k242));
    }
    return if_res96;
  };
  var cl94 = function(h243, k244, fail245) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h243.ref(k244, fail245);
  };
  var hash_ref = $rjs_core.attachProcedureArity(function() {
    var fixed_lam95 = {
      '2': cl93,
      '3': cl94
    }[arguments.length];
    if (fixed_lam95 !== undefined) {
      return fixed_lam95.apply(null, arguments);
    } else {
      return error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var hash_has_key_p = function(h246, k247) {
    return h246.hasKey(k247);
  };
  var cl97 = function(h248, k249) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (h248.hasKey(k249) !== false) {
      var if_res100 = h248.refKey(k249);
    } else {
      var if_res100 = raise(M0.Core.makeArgumentsError($rjs_core.UString.make("hash-ref-key"), $rjs_core.UString.make("hash does not contain key"), $rjs_core.UString.make("key"), k249));
    }
    return if_res100;
  };
  var cl98 = function(h250, k251, fail252) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h250.refKey(k251, fail252);
  };
  var hash_ref_key = $rjs_core.attachProcedureArity(function() {
    var fixed_lam99 = {
      '2': cl97,
      '3': cl98
    }[arguments.length];
    if (fixed_lam99 !== undefined) {
      return fixed_lam99.apply(null, arguments);
    } else {
      return error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var hash_set = function(h253, k254, v255) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (h253.isImmutable() !== false) {
      var if_res101 = h253.set(k254, v255);
    } else {
      var if_res101 = raise(M0.Core.makeArgumentError($rjs_core.UString.make("hash-set"), $rjs_core.UString.make("(and hash? immutable?)"), 0, h253, k254, v255));
    }
    return if_res101;
  };
  var hash_remove = function(h256, k257) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (h256.isImmutable() !== false) {
      var if_res102 = h256.remove(k257);
    } else {
      var if_res102 = raise(M0.Core.makeArgumentError($rjs_core.UString.make("hash-remove"), $rjs_core.UString.make("(and/c hash? immutable?)"), 0, h256, k257));
    }
    return if_res102;
  };
  var cl103 = function(h258, proc259) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.Hash.map(h258, proc259);
  };
  var cl104 = function(h260, proc261, try_order_p262) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.Hash.map(h260, proc261);
  };
  var hash_map = $rjs_core.attachProcedureArity(function() {
    var fixed_lam105 = {
      '2': cl103,
      '3': cl104
    }[arguments.length];
    if (fixed_lam105 !== undefined) {
      return fixed_lam105.apply(null, arguments);
    } else {
      return error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var hash_count = function(h263) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h263.size();
  };
  var hash_remove_bang_ = function(h264, k265) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (h264.isImmutable(h264) !== false) {
      var if_res106 = raise(M0.Core.makeArgumentError($rjs_core.UString.make("hash-remove!"), $rjs_core.UString.make("(and/c hash? (not/c immutable?))"), 0, h264, k265));
    } else {
      var if_res106 = h264.doremove(k265);
    }
    return if_res106;
  };
  var hash_set_bang_ = function(h266, k267, v268) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (h266.isImmutable(h266) !== false) {
      var if_res107 = raise(M0.Core.makeArgumentError($rjs_core.UString.make("hash-set!"), $rjs_core.UString.make("(and/c hash? (not/c immutable?))"), 0, h266, k267, v268));
    } else {
      var if_res107 = h266.doset(k267, v268);
    }
    return if_res107;
  };
  var hash_iterate_first = function(h269) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h269.iterateFirst();
  };
  var hash_iterate_next = function(h270, i271) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h270.iterateNext(i271);
  };
  var hash_iterate_key = function(h272, i273) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h272.iterateKey(i273);
  };
  var hash_iterate_value = function(h274, i275) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h274.iterateValue(i275);
  };
  var hash_iterate_key_plus_value = function(h276, i277) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h276.iterateKeyValue(i277);
  };
  var hash_iterate_pair = function(h278, i279) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h278.iteratePair(i279);
  };
  var hash_keys_subset_p = function(h1280, h2281) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((M0.Core.Hash.check(h1280) && M0.Core.Hash.check(h2281)) !== false) {
      if (h1280.isSameType(h2281) !== false) {
        var if_res108 = h1280.isKeysSubset(h2281);
      } else {
        var if_res108 = raise(M0.Core.makeArgumentsError($rjs_core.UString.make("hash-keys-subset?"), $rjs_core.UString.make("given hash tables do not use the same key comparison"), $rjs_core.UString.make("first table"), h1280, $rjs_core.UString.make("second table"), h2281));
      }
      var if_res109 = if_res108;
    } else {
      var if_res109 = false;
    }
    return if_res109;
  };
  var hash_union = function(h1282, h2283) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return h1282.union(h2283);
  };
  var apply = function(lam284) {
    var let_result110 = values();
    var args285 = Array.prototype.slice.call(arguments, 1);
    if (procedure_p(lam284) !== false) {
      var if_res111 = rvoid();
    } else {
      throw M0.Core.racketContractError($rjs_core.UString.make("Expected:"), $rjs_core.UString.make("procedure?"), $rjs_core.UString.make(", given:"), lam284, $rjs_core.UString.make(", at:"), 0);
      var if_res111 = null;
    }
    if_res111;
    var let_result112 = values();
    if (zero_p(args285.length) !== false) {
      throw M0.Core.racketContractError($rjs_core.UString.make("arity mismatch"));
      var if_res116 = null;
    } else {
      if (equal_p(args285.length, 1) !== false) {
        if (null_p(args285[0]) !== false) {
          var if_res114 = rvoid();
        } else {
          if (M0.Core.Pair.check(args285[0]) !== false) {
            var if_res113 = rvoid();
          } else {
            throw M0.Core.racketContractError($rjs_core.UString.make("expected a"), M0.Core.Pair, $rjs_core.UString.make(", but given"), args285[0]);
            var if_res113 = null;
          }
          var if_res114 = if_res113;
        }
        if_res114;
        var if_res115 = M0.Core.Pair.listToArray(args285[0]);
      } else {
        var if_res115 = args285.concat(M0.Core.Pair.listToArray(args285.pop()));
      }
      var if_res116 = if_res115;
    }
    var final_args286 = if_res116;
    return lam284.apply(null, final_args286);
  };
  var map = function(fn287) {
    if ((arguments.length < 1) !== false) {
      throw M0.Core.racketContractError($rjs_core.UString.make("arity mismatch"));
      var if_res117 = null;
    } else {
      var if_res117 = rvoid();
    }
    if_res117;
    var let_result118 = values();
    var lists288 = Array.prototype.slice.call(arguments, 1);
    if (procedure_p(fn287) !== false) {
      var if_res119 = rvoid();
    } else {
      throw M0.Core.racketContractError($rjs_core.UString.make("Expected:"), $rjs_core.UString.make("procedure?"), $rjs_core.UString.make(", given:"), fn287, $rjs_core.UString.make(", at:"), 0);
      var if_res119 = null;
    }
    if_res119;
    var let_result120 = values();
    if (__lt__eq_(lists288.length, 0) !== false) {
      var if_res121 = error($rjs_core.Symbol.make("map"), $rjs_core.UString.make("need at-least two arguments"));
    } else {
      var if_res121 = rvoid();
    }
    if_res121;
    var let_result122 = values();
    var lst_len289 = length(lists288[0]);
    var loop290 = function(i291) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if ((i291 < lists288.length) !== false) {
        var v292 = lists288[i291];
        if (eq_p(length(v292), lst_len289) !== false) {
          var if_res123 = rvoid();
        } else {
          var if_res123 = error($rjs_core.Symbol.make("map"), $rjs_core.UString.make("all input lists must have equal length"));
        }
        if_res123;
        var if_res124 = loop290(i291 + 1);
      } else {
        var if_res124 = rvoid();
      }
      return if_res124;
    };
    loop290(1);
    var let_result125 = values();
    var result293 = Array(lst_len289);
    var args294 = Array(lists288.length);
    var loop295 = function(result_i296) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if ((result_i296 < lst_len289) !== false) {
        var loop297 = function(lst_j298) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if ((lst_j298 < lists288.length) !== false) {
            var lst299 = lists288[lst_j298];
            args294[lst_j298] = lst299.hd;
            lists288[lst_j298] = lst299.tl;
            var if_res126 = loop297(lst_j298 + 1);
          } else {
            var if_res126 = rvoid();
          }
          return if_res126;
        };
        loop297(0);
        result293[result_i296] = fn287.apply(null, args294);
        var if_res127 = loop295(result_i296 + 1);
      } else {
        var if_res127 = rvoid();
      }
      return if_res127;
    };
    loop295(0);
    return M0.Core.Pair.listFromArray(result293);
  };
  var foldl = function(fn300, init301) {
    if ((arguments.length < 2) !== false) {
      throw M0.Core.racketContractError($rjs_core.UString.make("arity mismatch"));
      var if_res128 = null;
    } else {
      var if_res128 = rvoid();
    }
    if_res128;
    var let_result129 = values();
    var lists302 = Array.prototype.slice.call(arguments, 2);
    if (procedure_p(fn300) !== false) {
      var if_res130 = rvoid();
    } else {
      throw M0.Core.racketContractError($rjs_core.UString.make("Expected:"), $rjs_core.UString.make("procedure?"), $rjs_core.UString.make(", given:"), fn300, $rjs_core.UString.make(", at:"), 0);
      var if_res130 = null;
    }
    if_res130;
    var let_result131 = values();
    if (__lt__eq_(lists302.length, 0) !== false) {
      var if_res132 = error($rjs_core.Symbol.make("foldl"), $rjs_core.UString.make("need at-least two arguments"));
    } else {
      var if_res132 = rvoid();
    }
    if_res132;
    var let_result133 = values();
    var lst_len303 = length(lists302[0]);
    var loop304 = function(i305) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if ((i305 < lists302.length) !== false) {
        var v306 = lists302[i305];
        if (eq_p(length(v306), lst_len303) !== false) {
          var if_res134 = rvoid();
        } else {
          var if_res134 = error($rjs_core.Symbol.make("foldl"), $rjs_core.UString.make("all input lists must have equal length"));
        }
        if_res134;
        var if_res135 = loop304(i305 + 1);
      } else {
        var if_res135 = rvoid();
      }
      return if_res135;
    };
    loop304(1);
    var let_result136 = values();
    var result307 = init301;
    var args308 = Array(lists302.length + 1);
    var loop309 = function(result_i310) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if ((result_i310 < lst_len303) !== false) {
        var loop311 = function(lst_j312) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if ((lst_j312 < lists302.length) !== false) {
            var lst313 = lists302[lst_j312];
            args308[lst_j312] = lst313.hd;
            lists302[lst_j312] = lst313.tl;
            var if_res137 = loop311(lst_j312 + 1);
          } else {
            var if_res137 = rvoid();
          }
          return if_res137;
        };
        loop311(0);
        args308[lists302.length] = result307;
        result307 = fn300.apply(null, args308);
        var if_res138 = loop309(result_i310 + 1);
      } else {
        var if_res138 = rvoid();
      }
      return if_res138;
    };
    loop309(0);
    return result307;
  };
  var _foldr = function(fn314, init315, lists316) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (null_p(lists316[0]) !== false) {
      var if_res140 = init315;
    } else {
      var args317 = Array(add1(lists316.length));
      var loop318 = function(ii319) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if ((ii319 < lists316.length) !== false) {
          var lst320 = lists316[ii319];
          args317[ii319] = lst320.hd;
          lists316[ii319] = lst320.tl;
          var if_res139 = loop318(ii319 + 1);
        } else {
          var if_res139 = rvoid();
        }
        return if_res139;
      };
      loop318(0);
      args317[lists316.length] = _foldr(fn314, init315, lists316);
      var if_res140 = fn314.apply(null, args317);
    }
    return if_res140;
  };
  var foldr = function(fn321, init322) {
    if ((arguments.length < 2) !== false) {
      throw M0.Core.racketContractError($rjs_core.UString.make("arity mismatch"));
      var if_res141 = null;
    } else {
      var if_res141 = rvoid();
    }
    if_res141;
    var let_result142 = values();
    var lists323 = Array.prototype.slice.call(arguments, 2);
    if (procedure_p(fn321) !== false) {
      var if_res143 = rvoid();
    } else {
      throw M0.Core.racketContractError($rjs_core.UString.make("Expected:"), $rjs_core.UString.make("procedure?"), $rjs_core.UString.make(", given:"), fn321, $rjs_core.UString.make(", at:"), 0);
      var if_res143 = null;
    }
    if_res143;
    var let_result144 = values();
    if (__lt__eq_(lists323.length, 0) !== false) {
      var if_res145 = error($rjs_core.Symbol.make("foldr"), $rjs_core.UString.make("need at-least two arguments"));
    } else {
      var if_res145 = rvoid();
    }
    if_res145;
    var let_result146 = values();
    var lst_len324 = length(lists323[0]);
    var loop325 = function(i326) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if ((i326 < lists323.length) !== false) {
        var v327 = lists323[i326];
        if (eq_p(length(v327), lst_len324) !== false) {
          var if_res147 = rvoid();
        } else {
          var if_res147 = error($rjs_core.Symbol.make("foldr"), $rjs_core.UString.make("all input lists must have equal length"));
        }
        if_res147;
        var if_res148 = loop325(i326 + 1);
      } else {
        var if_res148 = rvoid();
      }
      return if_res148;
    };
    loop325(1);
    return _foldr(fn321, init322, lists323);
  };
  var cl149 = function(end328) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return range(0, end328, 1);
  };
  var cl150 = function(start329, end330) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (__lt_(start329, end330) !== false) {
      var if_res153 = 1;
    } else {
      var if_res153 = -1;
    }
    return range(start329, end330, if_res153);
  };
  var cl151 = function(start331, end332, step333) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var result334 = [];
    if ((__gt__eq_(step333, 0) && __lt_(step333, end332)) !== false) {
      var loop335 = function(i336) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if ((i336 < end332) !== false) {
          result334.push(i336);
          var if_res154 = loop335(i336 + step333);
        } else {
          var if_res154 = rvoid();
        }
        return if_res154;
      };
      var if_res157 = loop335(start331);
    } else {
      if ((__lt__eq_(step333, 0) && __lt_(end332, start331)) !== false) {
        var loop337 = function(i338) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if ((i338 < __(end332)) !== false) {
            result334.push(__(i338));
            var if_res155 = loop337(i338 + __(step333));
          } else {
            var if_res155 = rvoid();
          }
          return if_res155;
        };
        var if_res156 = loop337(__(start331));
      } else {
        var if_res156 = rvoid();
      }
      var if_res157 = if_res156;
    }
    if_res157;
    return M0.Core.Pair.listFromArray(result334);
  };
  var range = $rjs_core.attachProcedureArity(function() {
    var fixed_lam152 = {
      '1': cl149,
      '2': cl150,
      '3': cl151
    }[arguments.length];
    if (fixed_lam152 !== undefined) {
      return fixed_lam152.apply(null, arguments);
    } else {
      return error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2, 3]);
  var remove = function(v339, lst340, proc341) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (eq_p(proc341, undefined) !== false) {
      proc341 = M0.Core.isEqual;
      var if_res158 = null;
    } else {
      var if_res158 = rvoid();
    }
    if_res158;
    var loop342 = function(result343, lst344) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (null_p(lst344) !== false) {
        var if_res160 = reverse(result343);
      } else {
        if (proc341(v339, car(lst344)) !== false) {
          var if_res159 = append(reverse(result343), cdr(lst344));
        } else {
          var if_res159 = rvoid();
        }
        if_res159;
        var if_res160 = loop342(cons(car(lst344), result343), cdr(lst344));
      }
      return if_res160;
    };
    return loop342($rjs_core.Pair.makeList(), lst340);
  };
  var filter = function(fn345, lst346) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop347 = function(result348, lst349) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (null_p(lst349) !== false) {
        var if_res162 = reverse(result348);
      } else {
        if (fn345(lst349.hd) !== false) {
          var if_res161 = loop347(M0.Core.Pair.make(lst349.hd, result348), lst349.tl);
        } else {
          var if_res161 = loop347(result348, lst349.tl);
        }
        var if_res162 = if_res161;
      }
      return if_res162;
    };
    return loop347($rjs_core.Pair.makeList(), lst346);
  };
  var ormap = function(fn350) {
    if ((arguments.length < 1) !== false) {
      throw M0.Core.racketContractError($rjs_core.UString.make("arity mismatch"));
      var if_res163 = null;
    } else {
      var if_res163 = rvoid();
    }
    if_res163;
    var let_result164 = values();
    var lists351 = Array.prototype.slice.call(arguments, 1);
    return foldl.apply(this, [function() {
      var args352 = M0.Core.argumentsToArray(arguments);
      var final_arg353 = args352.pop();
      return (final_arg353 || fn350.apply(null, args352)) && true;
    }, false].concat(lists351));
  };
  var andmap = function(fn354) {
    if ((arguments.length < 1) !== false) {
      throw M0.Core.racketContractError($rjs_core.UString.make("arity mismatch"));
      var if_res165 = null;
    } else {
      var if_res165 = rvoid();
    }
    if_res165;
    var let_result166 = values();
    var lists355 = Array.prototype.slice.call(arguments, 1);
    return foldl.apply(this, [function() {
      var args356 = M0.Core.argumentsToArray(arguments);
      var final_arg357 = args356.pop();
      return (final_arg357 && fn354.apply(null, args356)) && true;
    }, true].concat(lists355));
  };
  var member = function(v358, lst359) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop360 = function(lst361) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (null_p(lst361) !== false) {
        var if_res168 = false;
      } else {
        if (M0.Core.isEqual(v358, lst361.hd) !== false) {
          var if_res167 = lst361;
        } else {
          var if_res167 = loop360(lst361.tl);
        }
        var if_res168 = if_res167;
      }
      return if_res168;
    };
    return loop360(lst359);
  };
  var compose = function() {
    var procs362 = M0.Core.argumentsToArray(arguments);
    return function() {
      var let_result169 = values();
      var result363 = M0.Core.argumentsToArray(arguments);
      var procs_times_364 = procs362.reverse();
      var loop365 = function(i366) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if ((i366 < procs_times_364.length) !== false) {
          var p367 = procs_times_364[i366];
          result363 = p367.apply(null, result363);
          if (M0.Core.Values.check(result363) !== false) {
            result363 = result363.getAll();
            var if_res170 = null;
          } else {
            result363 = [result363];
            var if_res170 = null;
          }
          if_res170;
          var if_res171 = loop365(i366 + 1);
        } else {
          var if_res171 = rvoid();
        }
        return if_res171;
      };
      loop365(0);
      if ((result363.length === 1) !== false) {
        var if_res172 = result363[0];
      } else {
        var if_res172 = M0.Core.Values.make(result363);
      }
      return if_res172;
    };
  };
  var compose1 = function() {
    var procs368 = M0.Core.argumentsToArray(arguments);
    return function(v369) {
      var let_result173 = values();
      var result370 = v369;
      var procs_times_371 = procs368.reverse();
      var loop372 = function(i373) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if ((i373 < procs_times_371.length) !== false) {
          var p374 = procs_times_371[i373];
          result370 = p374(result370);
          var if_res174 = loop372(i373 + 1);
        } else {
          var if_res174 = rvoid();
        }
        return if_res174;
      };
      loop372(0);
      return result370;
    };
  };
  var list_ref = function(lst375, pos376) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop377 = function(i378, lst379) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (null_p(lst379) !== false) {
        var if_res176 = error($rjs_core.Symbol.make("list-ref?"), $rjs_core.UString.make("insufficient elements"));
      } else {
        if ((i378 === pos376) !== false) {
          var if_res175 = lst379.hd;
        } else {
          var if_res175 = loop377(i378 + 1, lst379.tl);
        }
        var if_res176 = if_res175;
      }
      return if_res176;
    };
    return loop377(0, lst375);
  };
  var build_list = function(n380, proc381) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var arr382 = Array(n380);
    var loop383 = function(i384) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if ((i384 < n380) !== false) {
        arr382[i384] = proc381(i384);
        var if_res177 = loop383(i384 + 1);
      } else {
        var if_res177 = rvoid();
      }
      return if_res177;
    };
    loop383(0);
    return M0.Core.Pair.listFromArray(arr382);
  };
  var make_list = function(n385, v386) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop387 = function(result388, i389) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if ((i389 === n385) !== false) {
        var if_res178 = result388;
      } else {
        var if_res178 = loop387(M0.Core.Pair.make(v386, result388), i389 + 1);
      }
      return if_res178;
    };
    return loop387($rjs_core.Pair.makeList(), 0);
  };
  var flatten = function(lst390) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (null_p(lst390) !== false) {
      var if_res180 = lst390;
    } else {
      if (pair_p(lst390) !== false) {
        var if_res179 = append(flatten(lst390.hd), flatten(lst390.tl));
      } else {
        var if_res179 = list(lst390);
      }
      var if_res180 = if_res179;
    }
    return if_res180;
  };
  var assoc = function(k391, lst392) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop393 = function(lst394) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (null_p(lst394) !== false) {
        var if_res182 = false;
      } else {
        if (M0.Core.isEqual(k391, lst394.hd.hd) !== false) {
          var if_res181 = lst394.hd;
        } else {
          var if_res181 = loop393(lst394.tl);
        }
        var if_res182 = if_res181;
      }
      return if_res182;
    };
    return loop393(lst392);
  };
  var memv = M0.Kernel.memv;
  var memq = M0.Kernel.memq;
  var memf = M0.Kernel.memf;
  var findf = M0.Kernel.findf;
  var sort9 = M0.Kernel.sort9;
  var assv = M0.Kernel.assv;
  var assq = M0.Kernel.assq;
  var assf = M0.Kernel.assf;
  var alt_reverse = reverse;
  var string = M0.Core.attachProcedureName(M0.Core.UString.makeMutableFromCharsVarArgs, $rjs_core.UString.make("string"));
  var string_append = M0.Core.attachProcedureName(M0.Core.UString.stringAppend, $rjs_core.UString.make("string-append"));
  var string_ref = function(s395, i396) {
    if (string_p(s395) !== false) {
      var if_res183 = rvoid();
    } else {
      var if_res183 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string-ref"), $rjs_core.UString.make("string?"), s395));
    }
    if_res183;
    if (exact_nonnegative_integer_p(i396) !== false) {
      var if_res184 = rvoid();
    } else {
      var if_res184 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string-ref"), $rjs_core.UString.make("exact-nonnegative-integer?"), i396));
    }
    if_res184;
    if (s395.isValidIndex(i396) !== false) {
      var if_res185 = s395.charAt(i396);
    } else {
      var if_res185 = raise(M0.Core.makeOutOfRangeError($rjs_core.UString.make("string-ref"), $rjs_core.UString.make("string"), s395, s395.length, i396));
    }
    return if_res185;
  };
  var string_eq__p = function(sa397, sb398) {
    if (string_p(sa397) !== false) {
      var if_res186 = rvoid();
    } else {
      var if_res186 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string=?"), $rjs_core.UString.make("string?"), sa397));
    }
    if_res186;
    if (string_p(sb398) !== false) {
      var if_res187 = rvoid();
    } else {
      var if_res187 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string=?"), $rjs_core.UString.make("string?"), sb398));
    }
    if_res187;
    return M0.Core.UString.eq(sa397, sb398);
  };
  var string_lt__p = function(sa399, sb400) {
    if (string_p(sa399) !== false) {
      var if_res188 = rvoid();
    } else {
      var if_res188 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string<?"), $rjs_core.UString.make("string?"), sa399));
    }
    if_res188;
    if (string_p(sb400) !== false) {
      var if_res189 = rvoid();
    } else {
      var if_res189 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string<?"), $rjs_core.UString.make("string?"), sb400));
    }
    if_res189;
    return M0.Core.UString.lt(sa399, sb400);
  };
  var string_lt__eq__p = function(sa401, sb402) {
    if (string_p(sa401) !== false) {
      var if_res190 = rvoid();
    } else {
      var if_res190 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string<=?"), $rjs_core.UString.make("string?"), sa401));
    }
    if_res190;
    if (string_p(sb402) !== false) {
      var if_res191 = rvoid();
    } else {
      var if_res191 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string<=?"), $rjs_core.UString.make("string?"), sb402));
    }
    if_res191;
    return M0.Core.UString.lte(sa401, sb402);
  };
  var string_gt__p = function(sa403, sb404) {
    if (string_p(sa403) !== false) {
      var if_res192 = rvoid();
    } else {
      var if_res192 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string>?"), $rjs_core.UString.make("string?"), sa403));
    }
    if_res192;
    if (string_p(sb404) !== false) {
      var if_res193 = rvoid();
    } else {
      var if_res193 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string>?"), $rjs_core.UString.make("string?"), sb404));
    }
    if_res193;
    return M0.Core.UString.gt(sa403, sb404);
  };
  var string_gt__eq__p = function(sa405, sb406) {
    if (string_p(sa405) !== false) {
      var if_res194 = rvoid();
    } else {
      var if_res194 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string>=?"), $rjs_core.UString.make("string?"), sa405));
    }
    if_res194;
    if (string_p(sb406) !== false) {
      var if_res195 = rvoid();
    } else {
      var if_res195 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string>=?"), $rjs_core.UString.make("string?"), sb406));
    }
    if_res195;
    return M0.Core.UString.gte(sa405, sb406);
  };
  var string_p = M0.Core.attachProcedureName(M0.Core.UString.check, $rjs_core.UString.make("string?"));
  var fprintf = $rjs_core.attachProcedureArity(function(out407, form408) {
    for (var args409196 = [],
        $__1 = 2; $__1 < arguments.length; $__1++)
      args409196[$__1 - 2] = arguments[$__1];
    if (arguments.length < 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var args409 = $rjs_core.Pair.listFromArray(args409196);
    return apply(M0.Kernel.fprintf, print_as_expression(), out407, form408, args409);
  });
  var eprintf = $rjs_core.attachProcedureArity(function(form410) {
    for (var args411197 = [],
        $__2 = 1; $__2 < arguments.length; $__2++)
      args411197[$__2 - 1] = arguments[$__2];
    if (arguments.length < 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var args411 = $rjs_core.Pair.listFromArray(args411197);
    return apply(M0.Kernel.fprintf, print_as_expression(), current_error_port(), form410, args411);
  });
  var printf = $rjs_core.attachProcedureArity(function(form412) {
    for (var args413198 = [],
        $__3 = 1; $__3 < arguments.length; $__3++)
      args413198[$__3 - 1] = arguments[$__3];
    if (arguments.length < 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var args413 = $rjs_core.Pair.listFromArray(args413198);
    return apply(M0.Kernel.fprintf, print_as_expression(), current_output_port(), form412, args413);
  });
  var format = $rjs_core.attachProcedureArity(function(form414) {
    for (var args415199 = [],
        $__4 = 1; $__4 < arguments.length; $__4++)
      args415199[$__4 - 1] = arguments[$__4];
    if (arguments.length < 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var args415 = $rjs_core.Pair.listFromArray(args415199);
    var out416 = open_output_string();
    apply(fprintf, out416, form414, args415);
    return get_output_string(out416);
  });
  var symbol_p = M0.Core.Symbol.check;
  var keyword_p = M0.Core.Keyword.check;
  var make_string3417 = function(k2418, c1419) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var k420 = k2418;
    if (false !== false) {
      var if_res200 = $rjs_core.Char.charFromCodepoint(0);
    } else {
      var if_res200 = c1419;
    }
    var c421 = if_res200;
    return M0.Core.UString.repeatChar(k420, c421);
  };
  var cl201 = function(k422) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return make_string3417(k422, $rjs_core.Char.charFromCodepoint(0));
  };
  var cl202 = function(k423, c1424) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return make_string3417(k423, c1424);
  };
  var make_string = $rjs_core.attachProcedureArity(function() {
    var fixed_lam203 = {
      '1': cl201,
      '2': cl202
    }[arguments.length];
    if (fixed_lam203 !== undefined) {
      return fixed_lam203.apply(null, arguments);
    } else {
      return error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var list__gt_string = function(lst425) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Kernel.listToString(lst425);
  };
  var string__gt_immutable_string6426 = function(s5427) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (eq_p(s5427, M3.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res204 = string_p;
    } else {
      var if_res204 = s5427;
    }
    var s428 = if_res204;
    return M0.Core.UString.stringToImmutableString(s428);
  };
  var cl205 = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return string__gt_immutable_string6426(M3.__rjs_quoted__.unsafe_undefined);
  };
  var cl206 = function(s5429) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return string__gt_immutable_string6426(s5429);
  };
  var string__gt_immutable_string = $rjs_core.attachProcedureArity(function() {
    var fixed_lam207 = {
      '0': cl205,
      '1': cl206
    }[arguments.length];
    if (fixed_lam207 !== undefined) {
      return fixed_lam207.apply(null, arguments);
    } else {
      return error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [0, 1]);
  var symbol__gt_string = function(v430) {
    if (symbol_p(v430) !== false) {
      var if_res208 = rvoid();
    } else {
      var if_res208 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("symbol->string"), $rjs_core.UString.make("symbol?"), v430));
    }
    if_res208;
    return M0.Core.UString.makeMutable(v430.toString());
  };
  var string__gt_symbol = function(s431) {
    if (string_p(s431) !== false) {
      var if_res209 = rvoid();
    } else {
      var if_res209 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string->symbol"), $rjs_core.UString.make("string?"), s431));
    }
    if_res209;
    return M0.Core.Symbol.make(s431);
  };
  var string__gt_uninterned_symbol = function(s432) {
    if (string_p(s432) !== false) {
      var if_res210 = rvoid();
    } else {
      var if_res210 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string->uninterned-symbol"), $rjs_core.UString.make("string?"), s432));
    }
    if_res210;
    return M0.Core.Symbol.makeUninterned(s432);
  };
  var string__gt_unreadable_symbol = function(s433) {
    if (string_p(s433) !== false) {
      var if_res211 = rvoid();
    } else {
      var if_res211 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string->unreadable-symbol"), $rjs_core.UString.make("string?"), s433));
    }
    if_res211;
    return M0.Core.Symbol.make(s433);
  };
  var string__gt_number10434 = function(s9435, radix8436) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var s437 = s9435;
    if (false !== false) {
      var if_res212 = 10;
    } else {
      var if_res212 = radix8436;
    }
    var radix438 = if_res212;
    var integer_in439 = function(lo440, hi441) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return function(v442) {
        return (exact_integer_p(v442) && __gt__eq_(v442, lo440)) && __lt__eq_(v442, hi441);
      };
    };
    if (string_p(s437) !== false) {
      var if_res213 = rvoid();
    } else {
      throw M0.Core.racketContractError($rjs_core.UString.make("Expected:"), $rjs_core.UString.make("string?"), $rjs_core.UString.make(", given:"), s437, $rjs_core.UString.make(", at:"), 0);
      var if_res213 = null;
    }
    if_res213;
    if (integer_in439(2, 16)(radix438) !== false) {
      var if_res214 = rvoid();
    } else {
      throw M0.Core.racketContractError($rjs_core.UString.make("Expected:"), $rjs_core.UString.make("(integer-in 2 16)"), $rjs_core.UString.make(", given:"), radix438, $rjs_core.UString.make(", at:"), 1);
      var if_res214 = null;
    }
    if_res214;
    var result443 = parseInt(s437, radix438);
    if ((isNaN(result443) || not(s437.isValidInteger(radix438))) !== false) {
      var if_res215 = false;
    } else {
      var if_res215 = result443;
    }
    return if_res215;
  };
  var cl216 = function(s444) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return string__gt_number10434(s444, 10);
  };
  var cl217 = function(s445, radix8446) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return string__gt_number10434(s445, radix8446);
  };
  var string__gt_number = $rjs_core.attachProcedureArity(function() {
    var fixed_lam218 = {
      '1': cl216,
      '2': cl217
    }[arguments.length];
    if (fixed_lam218 !== undefined) {
      return fixed_lam218.apply(null, arguments);
    } else {
      return error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var symbol_interned_p = function(sym447) {
    if (symbol_p(sym447) !== false) {
      var if_res219 = rvoid();
    } else {
      var if_res219 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("symbol-interned?"), $rjs_core.UString.make("symbol?"), sym447));
    }
    if_res219;
    return sym447 === M0.Core.Symbol.make(sym447.v);
  };
  var symbol_eq__p = function(s448, v449) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return s448.equals(v449);
  };
  var symbol_lt__p = function(s450, v451) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return s450.lt(v451);
  };
  var keyword_lt__p = function(s452, v453) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return s452.lt(v453);
  };
  var string_length = function(s454) {
    if (string_p(s454) !== false) {
      var if_res220 = rvoid();
    } else {
      var if_res220 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string-length"), $rjs_core.UString.make("string?"), s454));
    }
    if_res220;
    return s454.length;
  };
  var string_downcase = function(s455) {
    if (string_p(s455) !== false) {
      var if_res221 = rvoid();
    } else {
      var if_res221 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string-downcase"), $rjs_core.UString.make("string?"), s455));
    }
    if_res221;
    return s455.toLowerCase();
  };
  var string_upcase = function(s456) {
    if (string_p(s456) !== false) {
      var if_res222 = rvoid();
    } else {
      var if_res222 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string-upcase"), $rjs_core.UString.make("string?"), s456));
    }
    if_res222;
    return s456.toUpperCase();
  };
  var substring15457 = function(str13458, start14459, end12460) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var str461 = str13458;
    var start462 = start14459;
    if (false !== false) {
      var if_res223 = false;
    } else {
      var if_res223 = end12460;
    }
    var end463 = if_res223;
    if (not(M0.Core.UString.check(str461)) !== false) {
      throw M0.Core.racketContractError($rjs_core.UString.make("expected a string"));
      var if_res227 = null;
    } else {
      if ((start462 < 0) !== false) {
        throw M0.Core.racketContractError($rjs_core.UString.make("invalid start index"));
        var if_res226 = null;
      } else {
        if (((end463 !== false) && (((end463 < 0) || (end463 > str461.length)) || (end463 < start462))) !== false) {
          throw M0.Core.racketContractError($rjs_core.UString.make("invalid end index"));
          var if_res225 = null;
        } else {
          if ((end463 === false) !== false) {
            end463 = str461.length;
            var if_res224 = null;
          } else {
            var if_res224 = rvoid();
          }
          var if_res225 = if_res224;
        }
        var if_res226 = if_res225;
      }
      var if_res227 = if_res226;
    }
    if_res227;
    return str461.substring(start462, end463);
  };
  var cl228 = function(str464, start465) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return substring15457(str464, start465, false);
  };
  var cl229 = function(str466, start467, end12468) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return substring15457(str466, start467, end12468);
  };
  var substring = $rjs_core.attachProcedureArity(function() {
    var fixed_lam230 = {
      '2': cl228,
      '3': cl229
    }[arguments.length];
    if (fixed_lam230 !== undefined) {
      return fixed_lam230.apply(null, arguments);
    } else {
      return error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var string_split = function(str469, sep470) {
    if (string_p(str469) !== false) {
      var if_res231 = rvoid();
    } else {
      var if_res231 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string-split"), $rjs_core.UString.make("string?"), str469));
    }
    if_res231;
    if ((function(v471) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return string_p(v471) || regexp_p(v471);
    })(sep470) !== false) {
      var if_res232 = rvoid();
    } else {
      var if_res232 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string-split"), $rjs_core.UString.make("(check/or string? regexp?)"), sep470));
    }
    if_res232;
    return M0.Core.Pair.listFromArray(str469.split(sep470));
  };
  var string_set_bang_ = function(str472, k473, char474) {
    if ((function(v475) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return string_p(v475) && (function(v476) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return not(immutable_p(v476));
      })(v475);
    })(str472) !== false) {
      var if_res233 = rvoid();
    } else {
      var if_res233 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string-set!"), $rjs_core.UString.make("(check/and string? (check/not immutable?))"), str472));
    }
    if_res233;
    if (exact_nonnegative_integer_p(k473) !== false) {
      var if_res234 = rvoid();
    } else {
      var if_res234 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string-set!"), $rjs_core.UString.make("exact-nonnegative-integer?"), k473));
    }
    if_res234;
    if (char_p(char474) !== false) {
      var if_res235 = rvoid();
    } else {
      var if_res235 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string-set!"), $rjs_core.UString.make("char?"), char474));
    }
    if_res235;
    if (str472.isValidIndex(k473) !== false) {
      var if_res236 = str472.setCharAt(k473, char474);
    } else {
      var if_res236 = raise(M0.Core.makeOutOfRangeError($rjs_core.UString.make("string-set!"), $rjs_core.UString.make("string"), str472, str472.length, k473));
    }
    return if_res236;
  };
  var char_p = function(c477) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.Char.check(c477);
  };
  var char__gt_integer = function(c478) {
    if (char_p(c478) !== false) {
      var if_res237 = rvoid();
    } else {
      var if_res237 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("char->integer"), $rjs_core.UString.make("char?"), c478));
    }
    if_res237;
    return M0.Core.Char.charToInteger(c478);
  };
  var integer__gt_char = function(k479) {
    if (exact_nonnegative_integer_p(k479) !== false) {
      var if_res238 = rvoid();
    } else {
      var if_res238 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("integer->char"), $rjs_core.UString.make("exact-nonnegative-integer?"), k479));
    }
    if_res238;
    return M0.Core.Char.integerToChar(k479);
  };
  var char_utf_8_length = function(c480) {
    if (char_p(c480) !== false) {
      var if_res239 = rvoid();
    } else {
      var if_res239 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("char-utf-8-length"), $rjs_core.UString.make("char?"), c480));
    }
    if_res239;
    return M0.Core.Char.charUtf8Length(c480);
  };
  var char_lt__p = function(a481, b482) {
    if (char_p(a481) !== false) {
      var if_res240 = rvoid();
    } else {
      var if_res240 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("char<?"), $rjs_core.UString.make("char?"), a481));
    }
    if_res240;
    if (char_p(b482) !== false) {
      var if_res241 = rvoid();
    } else {
      var if_res241 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("char<?"), $rjs_core.UString.make("char?"), b482));
    }
    if_res241;
    return a481 < b482;
  };
  var char_lt__eq__p = function(a483, b484) {
    if (char_p(a483) !== false) {
      var if_res242 = rvoid();
    } else {
      var if_res242 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("char<=?"), $rjs_core.UString.make("char?"), a483));
    }
    if_res242;
    if (char_p(b484) !== false) {
      var if_res243 = rvoid();
    } else {
      var if_res243 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("char<=?"), $rjs_core.UString.make("char?"), b484));
    }
    if_res243;
    return a483 <= b484;
  };
  var char_gt__p = function(a485, b486) {
    if (char_p(a485) !== false) {
      var if_res244 = rvoid();
    } else {
      var if_res244 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("char>?"), $rjs_core.UString.make("char?"), a485));
    }
    if_res244;
    if (char_p(b486) !== false) {
      var if_res245 = rvoid();
    } else {
      var if_res245 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("char>?"), $rjs_core.UString.make("char?"), b486));
    }
    if_res245;
    return a485 > b486;
  };
  var char_gt__eq__p = function(a487, b488) {
    if (char_p(a487) !== false) {
      var if_res246 = rvoid();
    } else {
      var if_res246 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("char>=?"), $rjs_core.UString.make("char?"), a487));
    }
    if_res246;
    if (char_p(b488) !== false) {
      var if_res247 = rvoid();
    } else {
      var if_res247 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("char>=?"), $rjs_core.UString.make("char?"), b488));
    }
    if_res247;
    return a487 >= b488;
  };
  var char_eq__p = function(a489, b490) {
    if (char_p(a489) !== false) {
      var if_res248 = rvoid();
    } else {
      var if_res248 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("char=?"), $rjs_core.UString.make("char?"), a489));
    }
    if_res248;
    if (char_p(b490) !== false) {
      var if_res249 = rvoid();
    } else {
      var if_res249 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("char=?"), $rjs_core.UString.make("char?"), b490));
    }
    if_res249;
    return M0.Core.Char.eq(a489, b490);
  };
  var box = M0.Core.Box.make;
  var unbox = function(v491) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return v491.get();
  };
  var set_box_bang_ = function(b492, v493) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return b492.set(v493);
  };
  var let_result250 = M0.Core.Struct.makeStructTypeProperty({'name': $rjs_core.UString.make("prop:evt")});
  var prop_evt = let_result250.getAt(0);
  var evt_p = let_result250.getAt(1);
  var prop_checked_procedure = make_struct_type_property($rjs_core.UString.make("prop:checked-procedure")).getAt(0);
  var prop_impersonator_of = make_struct_type_property($rjs_core.UString.make("prop:impersonator-of")).getAt(0);
  var prop_arity_string = make_struct_type_property($rjs_core.UString.make("prop:arity-string")).getAt(0);
  var prop_incomplete_arity = make_struct_type_property($rjs_core.UString.make("prop:incomplete-arity")).getAt(0);
  var prop_method_arity_error = make_struct_type_property($rjs_core.UString.make("prop:method-arity-error")).getAt(0);
  var prop_exn_srclocs = make_struct_type_property($rjs_core.UString.make("prop:exn:srclocs")).getAt(0);
  var prop_procedure = M0.Core.Struct.propProcedure;
  var prop_equal_plus_hash = M0.Core.Struct.propEqualHash;
  var error = M0.Kernel.error;
  var raise_argument_error = M0.Kernel.argerror;
  var raise_arguments_error = M0.Kernel.argserror;
  var raise_mismatch_error = M0.Kernel.mismatcherror;
  var bytes_p = function(bs494) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.Bytes.check(bs494);
  };
  var bytes__gt_string_by_utf_8 = function(bs495) {
    if (bytes_p(bs495) !== false) {
      var if_res251 = rvoid();
    } else {
      var if_res251 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("bytes->string/utf-8"), $rjs_core.UString.make("bytes?"), bs495));
    }
    if_res251;
    return M0.Core.UString.fromBytesUtf8(bs495);
  };
  var string__gt_bytes_by_utf_8 = function(str496) {
    if (string_p(str496) !== false) {
      var if_res252 = rvoid();
    } else {
      var if_res252 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("string->bytes/utf-8"), $rjs_core.UString.make("string?"), str496));
    }
    if_res252;
    return M0.Core.UString.toBytesUtf8(str496);
  };
  var bytes_eq__p = function(bstr1497, bstr2498) {
    if (bytes_p(bstr1497) !== false) {
      var if_res253 = rvoid();
    } else {
      var if_res253 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("bytes=?"), $rjs_core.UString.make("bytes?"), bstr1497));
    }
    if_res253;
    if (bytes_p(bstr2498) !== false) {
      var if_res254 = rvoid();
    } else {
      var if_res254 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("bytes=?"), $rjs_core.UString.make("bytes?"), bstr2498));
    }
    if_res254;
    return M0.Core.Bytes.eq(bstr1497, bstr2498);
  };
  var bytes_lt__p = function(bstr1499, bstr2500) {
    if (bytes_p(bstr1499) !== false) {
      var if_res255 = rvoid();
    } else {
      var if_res255 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("bytes<?"), $rjs_core.UString.make("bytes?"), bstr1499));
    }
    if_res255;
    if (bytes_p(bstr2500) !== false) {
      var if_res256 = rvoid();
    } else {
      var if_res256 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("bytes<?"), $rjs_core.UString.make("bytes?"), bstr2500));
    }
    if_res256;
    return M0.Core.Bytes.lt(bstr1499, bstr2500);
  };
  var bytes_gt__p = function(bstr1501, bstr2502) {
    if (bytes_p(bstr1501) !== false) {
      var if_res257 = rvoid();
    } else {
      var if_res257 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("bytes>?"), $rjs_core.UString.make("bytes?"), bstr1501));
    }
    if_res257;
    if (bytes_p(bstr2502) !== false) {
      var if_res258 = rvoid();
    } else {
      var if_res258 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("bytes>?"), $rjs_core.UString.make("bytes?"), bstr2502));
    }
    if_res258;
    return M0.Core.Bytes.gt(bstr1501, bstr2502);
  };
  var current_continuation_marks = M0.Core.Marks.getContinuationMarks;
  var continuation_mark_set__gt_list = M0.Core.Marks.getMarks;
  var continuation_mark_set_first = function(mark_set503, key_v504, none_v505, prompt_tag506) {
    var let_result259 = values();
    var mark_set507 = mark_set507 || M0.Core.Marks.getContinuationMarks(prompt_tag506);
    var marks508 = M0.Core.Marks.getMarks(mark_set507, key_v504, prompt_tag506);
    if (null_p(marks508) !== false) {
      var if_res260 = none_v505;
    } else {
      var if_res260 = marks508.hd;
    }
    return if_res260;
  };
  var make_parameter = M0.Paramz.makeParameter;
  var call_with_continuation_prompt = M0.Core.Marks.callWithContinuationPrompt;
  var abort_current_continuation = function(prompt_tag509) {
    if ((arguments.length < 1) !== false) {
      throw M0.Core.racketContractError($rjs_core.UString.make("arity mismatch"));
      var if_res261 = null;
    } else {
      var if_res261 = rvoid();
    }
    if_res261;
    var let_result262 = values();
    var args510 = Array.prototype.slice.call(arguments, 1);
    throw new M0.Core.Marks.AbortCurrentContinuation(prompt_tag509, args510);
    return null;
  };
  var make_continuation_prompt_tag = M0.Core.Marks.makeContinuationPromptTag;
  var default_continuation_prompt_tag = M0.Core.Marks.defaultContinuationPromptTag;
  var raise = M0.Kernel.doraise;
  var exn_fail_p = M0.Core.isErr;
  var exn_fail_contract_p = M0.Core.isContractErr;
  var exn_fail_contract_arity_p = M0.Core.isContractErr;
  var exn_message = function(e511) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.UString.makeMutable(M0.Core.errMsg(e511));
  };
  var current_output_port = make_parameter(M0.Core.Ports.standardOutputPort);
  var current_error_port = make_parameter(M0.Core.Ports.standardErrorPort);
  var current_print = make_parameter(function(p512) {
    if (void_p(p512) !== false) {
      var if_res263 = rvoid();
    } else {
      print(p512);
      var if_res263 = newline();
    }
    return if_res263;
  });
  var port_p = function(p513) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.Ports.check(p513);
  };
  var input_port_p = function(p514) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.Ports.isInputPort(p514);
  };
  var output_port_p = function(p515) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.Ports.isOutputPort(p515);
  };
  var string_port_p = function(p516) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.Ports.isStringPort(p516);
  };
  var open_output_string = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.Ports.openOutputString();
  };
  var get_output_string = function(p517) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.Ports.getOutputString(p517);
  };
  var print_as_expression = make_parameter(true);
  var display19518 = function(datum18519, out17520) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var datum521 = datum18519;
    if (eq_p(out17520, M3.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res264 = current_output_port();
    } else {
      var if_res264 = out17520;
    }
    var out522 = if_res264;
    return M0.Core.display(out522, datum521);
  };
  var cl265 = function(datum523) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return display19518(datum523, M3.__rjs_quoted__.unsafe_undefined);
  };
  var cl266 = function(datum524, out17525) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return display19518(datum524, out17525);
  };
  var display = $rjs_core.attachProcedureArity(function() {
    var fixed_lam267 = {
      '1': cl265,
      '2': cl266
    }[arguments.length];
    if (fixed_lam267 !== undefined) {
      return fixed_lam267.apply(null, arguments);
    } else {
      return error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var displayln23526 = function(datum22527, out21528) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var datum529 = datum22527;
    if (eq_p(out21528, M3.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res268 = current_output_port();
    } else {
      var if_res268 = out21528;
    }
    var out530 = if_res268;
    display(datum529, out530);
    return newline(out530);
  };
  var cl269 = function(datum531) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return displayln23526(datum531, M3.__rjs_quoted__.unsafe_undefined);
  };
  var cl270 = function(datum532, out21533) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return displayln23526(datum532, out21533);
  };
  var displayln = $rjs_core.attachProcedureArity(function() {
    var fixed_lam271 = {
      '1': cl269,
      '2': cl270
    }[arguments.length];
    if (fixed_lam271 !== undefined) {
      return fixed_lam271.apply(null, arguments);
    } else {
      return error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var write27534 = function(datum26535, out25536) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var datum537 = datum26535;
    if (eq_p(out25536, M3.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res272 = current_output_port();
    } else {
      var if_res272 = out25536;
    }
    var out538 = if_res272;
    return M0.Core.write(out538, datum537);
  };
  var cl273 = function(datum539) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return write27534(datum539, M3.__rjs_quoted__.unsafe_undefined);
  };
  var cl274 = function(datum540, out25541) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return write27534(datum540, out25541);
  };
  var write = $rjs_core.attachProcedureArity(function() {
    var fixed_lam275 = {
      '1': cl273,
      '2': cl274
    }[arguments.length];
    if (fixed_lam275 !== undefined) {
      return fixed_lam275.apply(null, arguments);
    } else {
      return error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var writeln31542 = function(datum30543, out29544) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var datum545 = datum30543;
    if (eq_p(out29544, M3.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res276 = current_output_port();
    } else {
      var if_res276 = out29544;
    }
    var out546 = if_res276;
    write(datum545, out546);
    return newline(out546);
  };
  var cl277 = function(datum547) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return writeln31542(datum547, M3.__rjs_quoted__.unsafe_undefined);
  };
  var cl278 = function(datum548, out29549) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return writeln31542(datum548, out29549);
  };
  var writeln = $rjs_core.attachProcedureArity(function() {
    var fixed_lam279 = {
      '1': cl277,
      '2': cl278
    }[arguments.length];
    if (fixed_lam279 !== undefined) {
      return fixed_lam279.apply(null, arguments);
    } else {
      return error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var print36550 = function(datum35551, out33552, quote_depth34553) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var datum554 = datum35551;
    if (eq_p(out33552, M3.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res280 = current_output_port();
    } else {
      var if_res280 = out33552;
    }
    var out555 = if_res280;
    if (false !== false) {
      var if_res281 = 0;
    } else {
      var if_res281 = quote_depth34553;
    }
    var quote_depth556 = if_res281;
    return M0.Core.print(out555, datum554, print_as_expression(), quote_depth556);
  };
  var cl282 = function(datum557) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return print36550(datum557, M3.__rjs_quoted__.unsafe_undefined, 0);
  };
  var cl283 = function(datum558, out559, quote_depth34560) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return print36550(datum558, out559, quote_depth34560);
  };
  var cl284 = function(datum561, out33562) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return print36550(datum561, out33562, 0);
  };
  var print = $rjs_core.attachProcedureArity(function() {
    var fixed_lam285 = {
      '1': cl282,
      '3': cl283,
      '2': cl284
    }[arguments.length];
    if (fixed_lam285 !== undefined) {
      return fixed_lam285.apply(null, arguments);
    } else {
      return error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2, 3]);
  var println40563 = function(datum39564, out38565) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var datum566 = datum39564;
    if (eq_p(out38565, M3.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res286 = current_output_port();
    } else {
      var if_res286 = out38565;
    }
    var out567 = if_res286;
    print(datum566, out567);
    return newline(out567);
  };
  var cl287 = function(datum568) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return println40563(datum568, M3.__rjs_quoted__.unsafe_undefined);
  };
  var cl288 = function(datum569, out38570) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return println40563(datum569, out38570);
  };
  var println = $rjs_core.attachProcedureArity(function() {
    var fixed_lam289 = {
      '1': cl287,
      '2': cl288
    }[arguments.length];
    if (fixed_lam289 !== undefined) {
      return fixed_lam289.apply(null, arguments);
    } else {
      return error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var newline43571 = function(out42572) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (eq_p(out42572, M3.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res290 = current_output_port();
    } else {
      var if_res290 = out42572;
    }
    var out573 = if_res290;
    return display($rjs_core.UString.make("\n"), out573);
  };
  var cl291 = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return newline43571(M3.__rjs_quoted__.unsafe_undefined);
  };
  var cl292 = function(out42574) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return newline43571(out42574);
  };
  var newline = $rjs_core.attachProcedureArity(function() {
    var fixed_lam293 = {
      '0': cl291,
      '1': cl292
    }[arguments.length];
    if (fixed_lam293 !== undefined) {
      return fixed_lam293.apply(null, arguments);
    } else {
      return error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [0, 1]);
  var current_inspector = function() {
    return true;
  };
  var check_method = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return false;
  };
  var random = M0.Kernel.random;
  var current_seconds = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return Math.floor(Date.now() / 1000);
  };
  var object_name = function(fn575) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return fn575.name;
  };
  var unquoted_printing_string = function(s576) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return s576;
  };
  var error_print_width = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return 42;
  };
  var error_value__gt_string_handler = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return function(x577, n578) {
      if ((arguments.length !== 2) !== false) {
        throw M0.Core.racketContractError($rjs_core.UString.make("arity mismatch"));
        var if_res294 = null;
      } else {
        var if_res294 = rvoid();
      }
      if_res294;
      return $rjs_core.UString.make("str");
    };
  };
  var procedure_arity_mask = function(fn579) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return procedure_arity(fn579);
  };
  var bitwise_bit_set_p = function(mask580, n581) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return true;
  };
  var procedure_extract_target = function(f582) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return false;
  };
  var regexp_p = function(v583) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.Regexp.check(v583);
  };
  var pregexp_p = regexp_p;
  var byte_regexp_p = regexp_p;
  var byte_pregexp_p = regexp_p;
  var regexp = function(str584) {
    if (string_p(str584) !== false) {
      var if_res295 = rvoid();
    } else {
      var if_res295 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("regexp"), $rjs_core.UString.make("string?"), str584));
    }
    if_res295;
    return M0.Core.Regexp.fromString(str584);
  };
  var pregexp = regexp;
  var byte_regexp = function(bs585) {
    if (bytes_p(bs585) !== false) {
      var if_res296 = rvoid();
    } else {
      var if_res296 = M0.Kernel.doraise(M0.Core.makeArgumentError($rjs_core.Symbol.make("byte-regexp"), $rjs_core.UString.make("bytes?"), bs585));
    }
    if_res296;
    return M0.Core.Regexp.fromString(bytes__gt_string_by_utf_8(bs585));
  };
  var byte_pregexp = byte_regexp;
  var regexp_match = function(pattern586, input587) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.Core.Regexp.match(pattern586, input587);
  };
  var let_result297 = make_struct_type($rjs_core.Symbol.make("kernel:arity-at-least"), false, 1, 0, false, rnull, false, false, $rjs_core.Pair.makeList(0), false, $rjs_core.Symbol.make("kernel:arity-at-least"));
  var struct_588 = let_result297.getAt(0);
  var make_589 = let_result297.getAt(1);
  var __p590 = let_result297.getAt(2);
  var __ref591 = let_result297.getAt(3);
  var __set_bang_592 = let_result297.getAt(4);
  var let_result298 = values(struct_588, make_589, __p590, make_struct_field_accessor(__ref591, 0, $rjs_core.Symbol.make("value")));
  var struct_kernel_arity_at_least = let_result298.getAt(0);
  var make_arity_at_least = let_result298.getAt(1);
  var kernel_arity_at_least_p = let_result298.getAt(2);
  var kernel_arity_at_least_value = let_result298.getAt(3);
  var procedure_p = function(f593) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return typeof(f593) === "function";
  };
  var arity_at_least = make_arity_at_least;
  var arity_at_least_p = function(p594) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return kernel_arity_at_least_p(p594);
  };
  var arity_at_least_value = function(p595) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return kernel_arity_at_least_value(p595);
  };
  var procedure_arity_includes_p = function(fn596, n597) {
    var ar598 = procedure_arity(fn596);
    if (kernel_arity_at_least_p(ar598) !== false) {
      var if_res300 = __lt__eq_(kernel_arity_at_least_value(ar598), n597);
    } else {
      if (list_p(ar598) !== false) {
        var if_res299 = member(n597, ar598);
      } else {
        var if_res299 = n597 === ar598;
      }
      var if_res300 = if_res299;
    }
    return if_res300;
  };
  var procedure_arity = function(fn599) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (Array.isArray(fn599.__rjs_arityValue) !== false) {
      if ((fn599.__rjs_arityValue.length === 1) !== false) {
        var if_res301 = fn599.__rjs_arityValue[0];
      } else {
        var if_res301 = M0.Core.Pair.listFromArray(fn599.__rjs_arityValue);
      }
      var if_res303 = if_res301;
    } else {
      if ((fn599.__rjs_arityValue === undefined) !== false) {
        var if_res302 = fn599.length;
      } else {
        var if_res302 = make_arity_at_least(fn599.__rjs_arityValue || fn599.length);
      }
      var if_res303 = if_res302;
    }
    return if_res303;
  };
  var procedure_arity_p = function(v600) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return (exact_nonnegative_integer_p(v600) || kernel_arity_at_least_p(v600)) || ormap(function(v601) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return exact_nonnegative_integer_p(v601) || kernel_arity_at_least_p(v601);
    }, v600);
  };
  var checked_procedure_check_and_extract = function(type602, v603, proc604, v1605, v2606) {
    if (arguments.length !== 5) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((M0.Core.Struct.check(v603, type602) && type602._findProperty(prop_checked_procedure)) !== false) {
      var fn607 = v603.getField(0);
      var r1608 = fn607(v1605, v2606);
      if (r1608 !== false) {
        var if_res304 = v603.getField(1);
      } else {
        var if_res304 = proc604(v603, v1605, v2606);
      }
      var if_res305 = if_res304;
    } else {
      var if_res305 = proc604(v603, v1605, v2606);
    }
    return if_res305;
  };
  var gensym = function(sym609) {
    var s610 = (sym609 && sym609.v) || $rjs_core.UString.make("");
    __count = __count + 1;
    return M0.Core.Symbol.makeUninterned(s610 + __count);
  };
  var eval_jit_enabled = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return false;
  };
  var variable_reference_constant_p = function(x611) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return false;
  };
  var variable_reference_from_unsafe_p = function(x612) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return false;
  };
  var inspector_p = function(p613) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return true;
  };
  var make_thread_cell = function(p614) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return p614;
  };
  var __count = 1000;
  var system_type = function(system_type615, mod616) {
    return $rjs_core.Symbol.make("javascript");
  };
  var make_weak_hash = make_hash;
  var make_weak_hasheqv = make_hasheqv;
  var make_weak_hasheq = make_hasheq;
  var __rjs_quoted__ = {};
  __rjs_quoted__.__plus_ = __plus_;
  __rjs_quoted__.struct_kernel_arity_at_least = struct_kernel_arity_at_least;
  __rjs_quoted__.length = length;
  __rjs_quoted__.make_struct_type_property = make_struct_type_property;
  __rjs_quoted__.kernel_arity_at_least_value = kernel_arity_at_least_value;
  __rjs_quoted__.make_arity_at_least = make_arity_at_least;
  __rjs_quoted__.kernel_arity_at_least_p = kernel_arity_at_least_p;
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get equal_p() {
      return equal_p;
    },
    get eqv_p() {
      return eqv_p;
    },
    get eq_p() {
      return eq_p;
    },
    get values() {
      return values;
    },
    get call_with_values() {
      return call_with_values;
    },
    get immutable_p() {
      return immutable_p;
    },
    get rvoid() {
      return rvoid;
    },
    get void_p() {
      return void_p;
    },
    get number_p() {
      return number_p;
    },
    get real_p() {
      return real_p;
    },
    get integer_p() {
      return integer_p;
    },
    get zero_p() {
      return zero_p;
    },
    get positive_p() {
      return positive_p;
    },
    get negative_p() {
      return negative_p;
    },
    get add1() {
      return add1;
    },
    get sub1() {
      return sub1;
    },
    get quotient() {
      return quotient;
    },
    get even_p() {
      return even_p;
    },
    get odd_p() {
      return odd_p;
    },
    get exact_nonnegative_integer_p() {
      return exact_nonnegative_integer_p;
    },
    get exact_integer_p() {
      return exact_integer_p;
    },
    get exact_p() {
      return exact_p;
    },
    get single_flonum_available_p() {
      return single_flonum_available_p;
    },
    get __times_() {
      return __times_;
    },
    get __by_() {
      return __by_;
    },
    get __plus_() {
      return __plus_;
    },
    get __() {
      return __;
    },
    get __lt_() {
      return __lt_;
    },
    get __gt_() {
      return __gt_;
    },
    get __lt__eq_() {
      return __lt__eq_;
    },
    get __gt__eq_() {
      return __gt__eq_;
    },
    get __eq_() {
      return __eq_;
    },
    get floor() {
      return floor;
    },
    get abs() {
      return abs;
    },
    get sin() {
      return sin;
    },
    get cos() {
      return cos;
    },
    get tan() {
      return tan;
    },
    get atan() {
      return atan;
    },
    get ceiling() {
      return ceiling;
    },
    get round() {
      return round;
    },
    get min() {
      return min;
    },
    get max() {
      return max;
    },
    get log() {
      return log;
    },
    get expt() {
      return expt;
    },
    get sqrt() {
      return sqrt;
    },
    get sqr() {
      return sqr;
    },
    get remainder() {
      return remainder;
    },
    get number__gt_string() {
      return number__gt_string;
    },
    get arithmetic_shift() {
      return arithmetic_shift;
    },
    get inexact__gt_exact() {
      return inexact__gt_exact;
    },
    get exact__gt_inexact() {
      return exact__gt_inexact;
    },
    get not() {
      return not;
    },
    get rfalse() {
      return rfalse;
    },
    get rtrue() {
      return rtrue;
    },
    get false_p() {
      return false_p;
    },
    get boolean_p() {
      return boolean_p;
    },
    get car() {
      return car;
    },
    get cdr() {
      return cdr;
    },
    get cons() {
      return cons;
    },
    get pair_p() {
      return pair_p;
    },
    get caar() {
      return caar;
    },
    get cadr() {
      return cadr;
    },
    get cdar() {
      return cdar;
    },
    get cddr() {
      return cddr;
    },
    get caddr() {
      return caddr;
    },
    get rnull() {
      return rnull;
    },
    get list() {
      return list;
    },
    get null_p() {
      return null_p;
    },
    get list_p() {
      return list_p;
    },
    get length() {
      return length;
    },
    get reverse() {
      return reverse;
    },
    get list_times_() {
      return list_times_;
    },
    get append() {
      return append;
    },
    get for_each() {
      return for_each;
    },
    get mcons() {
      return mcons;
    },
    get mpair_p() {
      return mpair_p;
    },
    get mcar() {
      return mcar;
    },
    get mcdr() {
      return mcdr;
    },
    get set_mcar_bang_() {
      return set_mcar_bang_;
    },
    get set_mcdr_bang_() {
      return set_mcdr_bang_;
    },
    get make_struct_type() {
      return make_struct_type;
    },
    get make_struct_field_accessor() {
      return make_struct_field_accessor;
    },
    get make_struct_field_mutator() {
      return make_struct_field_mutator;
    },
    get make_struct_type_property() {
      return make_struct_type_property;
    },
    get check_struct_type() {
      return check_struct_type;
    },
    get struct_type_p() {
      return struct_type_p;
    },
    get struct_type_info() {
      return struct_type_info;
    },
    get vector() {
      return vector;
    },
    get make_vector() {
      return make_vector;
    },
    get vector_p() {
      return vector_p;
    },
    get vector_length() {
      return vector_length;
    },
    get vector_ref() {
      return vector_ref;
    },
    get vector_set_bang_() {
      return vector_set_bang_;
    },
    get vector__gt_list() {
      return vector__gt_list;
    },
    get vector__gt_immutable_vector() {
      return vector__gt_immutable_vector;
    },
    get hash() {
      return hash;
    },
    get hasheqv() {
      return hasheqv;
    },
    get hasheq() {
      return hasheq;
    },
    get make_hash() {
      return make_hash;
    },
    get make_hasheqv() {
      return make_hasheqv;
    },
    get make_hasheq() {
      return make_hasheq;
    },
    get make_immutable_hash() {
      return make_immutable_hash;
    },
    get make_immutable_hasheqv() {
      return make_immutable_hasheqv;
    },
    get make_immutable_hasheq() {
      return make_immutable_hasheq;
    },
    get hash_p() {
      return hash_p;
    },
    get hash_equal_p() {
      return hash_equal_p;
    },
    get hash_eqv_p() {
      return hash_eqv_p;
    },
    get hash_eq_p() {
      return hash_eq_p;
    },
    get hash_weak_p() {
      return hash_weak_p;
    },
    get hash_ref() {
      return hash_ref;
    },
    get hash_has_key_p() {
      return hash_has_key_p;
    },
    get hash_ref_key() {
      return hash_ref_key;
    },
    get hash_set() {
      return hash_set;
    },
    get hash_remove() {
      return hash_remove;
    },
    get hash_map() {
      return hash_map;
    },
    get hash_count() {
      return hash_count;
    },
    get hash_remove_bang_() {
      return hash_remove_bang_;
    },
    get hash_set_bang_() {
      return hash_set_bang_;
    },
    get hash_iterate_first() {
      return hash_iterate_first;
    },
    get hash_iterate_next() {
      return hash_iterate_next;
    },
    get hash_iterate_key() {
      return hash_iterate_key;
    },
    get hash_iterate_value() {
      return hash_iterate_value;
    },
    get hash_iterate_key_plus_value() {
      return hash_iterate_key_plus_value;
    },
    get hash_iterate_pair() {
      return hash_iterate_pair;
    },
    get hash_keys_subset_p() {
      return hash_keys_subset_p;
    },
    get hash_union() {
      return hash_union;
    },
    get apply() {
      return apply;
    },
    get map() {
      return map;
    },
    get foldl() {
      return foldl;
    },
    get _foldr() {
      return _foldr;
    },
    get foldr() {
      return foldr;
    },
    get range() {
      return range;
    },
    get remove() {
      return remove;
    },
    get filter() {
      return filter;
    },
    get ormap() {
      return ormap;
    },
    get andmap() {
      return andmap;
    },
    get member() {
      return member;
    },
    get compose() {
      return compose;
    },
    get compose1() {
      return compose1;
    },
    get list_ref() {
      return list_ref;
    },
    get build_list() {
      return build_list;
    },
    get make_list() {
      return make_list;
    },
    get flatten() {
      return flatten;
    },
    get assoc() {
      return assoc;
    },
    get memv() {
      return memv;
    },
    get memq() {
      return memq;
    },
    get memf() {
      return memf;
    },
    get findf() {
      return findf;
    },
    get sort9() {
      return sort9;
    },
    get assv() {
      return assv;
    },
    get assq() {
      return assq;
    },
    get assf() {
      return assf;
    },
    get alt_reverse() {
      return alt_reverse;
    },
    get string() {
      return string;
    },
    get string_append() {
      return string_append;
    },
    get string_ref() {
      return string_ref;
    },
    get string_eq__p() {
      return string_eq__p;
    },
    get string_lt__p() {
      return string_lt__p;
    },
    get string_lt__eq__p() {
      return string_lt__eq__p;
    },
    get string_gt__p() {
      return string_gt__p;
    },
    get string_gt__eq__p() {
      return string_gt__eq__p;
    },
    get string_p() {
      return string_p;
    },
    get fprintf() {
      return fprintf;
    },
    get eprintf() {
      return eprintf;
    },
    get printf() {
      return printf;
    },
    get format() {
      return format;
    },
    get symbol_p() {
      return symbol_p;
    },
    get keyword_p() {
      return keyword_p;
    },
    get make_string() {
      return make_string;
    },
    get list__gt_string() {
      return list__gt_string;
    },
    get string__gt_immutable_string() {
      return string__gt_immutable_string;
    },
    get symbol__gt_string() {
      return symbol__gt_string;
    },
    get string__gt_symbol() {
      return string__gt_symbol;
    },
    get string__gt_uninterned_symbol() {
      return string__gt_uninterned_symbol;
    },
    get string__gt_unreadable_symbol() {
      return string__gt_unreadable_symbol;
    },
    get string__gt_number() {
      return string__gt_number;
    },
    get symbol_interned_p() {
      return symbol_interned_p;
    },
    get symbol_eq__p() {
      return symbol_eq__p;
    },
    get symbol_lt__p() {
      return symbol_lt__p;
    },
    get keyword_lt__p() {
      return keyword_lt__p;
    },
    get string_length() {
      return string_length;
    },
    get string_downcase() {
      return string_downcase;
    },
    get string_upcase() {
      return string_upcase;
    },
    get substring() {
      return substring;
    },
    get string_split() {
      return string_split;
    },
    get string_set_bang_() {
      return string_set_bang_;
    },
    get char_p() {
      return char_p;
    },
    get char__gt_integer() {
      return char__gt_integer;
    },
    get integer__gt_char() {
      return integer__gt_char;
    },
    get char_utf_8_length() {
      return char_utf_8_length;
    },
    get char_lt__p() {
      return char_lt__p;
    },
    get char_lt__eq__p() {
      return char_lt__eq__p;
    },
    get char_gt__p() {
      return char_gt__p;
    },
    get char_gt__eq__p() {
      return char_gt__eq__p;
    },
    get char_eq__p() {
      return char_eq__p;
    },
    get box() {
      return box;
    },
    get unbox() {
      return unbox;
    },
    get set_box_bang_() {
      return set_box_bang_;
    },
    get evt_p() {
      return evt_p;
    },
    get prop_evt() {
      return prop_evt;
    },
    get prop_checked_procedure() {
      return prop_checked_procedure;
    },
    get prop_impersonator_of() {
      return prop_impersonator_of;
    },
    get prop_arity_string() {
      return prop_arity_string;
    },
    get prop_incomplete_arity() {
      return prop_incomplete_arity;
    },
    get prop_method_arity_error() {
      return prop_method_arity_error;
    },
    get prop_exn_srclocs() {
      return prop_exn_srclocs;
    },
    get prop_procedure() {
      return prop_procedure;
    },
    get prop_equal_plus_hash() {
      return prop_equal_plus_hash;
    },
    get error() {
      return error;
    },
    get raise_argument_error() {
      return raise_argument_error;
    },
    get raise_arguments_error() {
      return raise_arguments_error;
    },
    get raise_mismatch_error() {
      return raise_mismatch_error;
    },
    get bytes_p() {
      return bytes_p;
    },
    get bytes__gt_string_by_utf_8() {
      return bytes__gt_string_by_utf_8;
    },
    get string__gt_bytes_by_utf_8() {
      return string__gt_bytes_by_utf_8;
    },
    get bytes_eq__p() {
      return bytes_eq__p;
    },
    get bytes_lt__p() {
      return bytes_lt__p;
    },
    get bytes_gt__p() {
      return bytes_gt__p;
    },
    get current_continuation_marks() {
      return current_continuation_marks;
    },
    get continuation_mark_set__gt_list() {
      return continuation_mark_set__gt_list;
    },
    get continuation_mark_set_first() {
      return continuation_mark_set_first;
    },
    get make_parameter() {
      return make_parameter;
    },
    get call_with_continuation_prompt() {
      return call_with_continuation_prompt;
    },
    get abort_current_continuation() {
      return abort_current_continuation;
    },
    get make_continuation_prompt_tag() {
      return make_continuation_prompt_tag;
    },
    get default_continuation_prompt_tag() {
      return default_continuation_prompt_tag;
    },
    get raise() {
      return raise;
    },
    get exn_fail_p() {
      return exn_fail_p;
    },
    get exn_fail_contract_p() {
      return exn_fail_contract_p;
    },
    get exn_fail_contract_arity_p() {
      return exn_fail_contract_arity_p;
    },
    get exn_message() {
      return exn_message;
    },
    get current_output_port() {
      return current_output_port;
    },
    get current_error_port() {
      return current_error_port;
    },
    get current_print() {
      return current_print;
    },
    get port_p() {
      return port_p;
    },
    get input_port_p() {
      return input_port_p;
    },
    get output_port_p() {
      return output_port_p;
    },
    get string_port_p() {
      return string_port_p;
    },
    get open_output_string() {
      return open_output_string;
    },
    get get_output_string() {
      return get_output_string;
    },
    get print_as_expression() {
      return print_as_expression;
    },
    get display() {
      return display;
    },
    get displayln() {
      return displayln;
    },
    get write() {
      return write;
    },
    get writeln() {
      return writeln;
    },
    get print() {
      return print;
    },
    get println() {
      return println;
    },
    get newline() {
      return newline;
    },
    get current_inspector() {
      return current_inspector;
    },
    get check_method() {
      return check_method;
    },
    get random() {
      return random;
    },
    get current_seconds() {
      return current_seconds;
    },
    get object_name() {
      return object_name;
    },
    get unquoted_printing_string() {
      return unquoted_printing_string;
    },
    get error_print_width() {
      return error_print_width;
    },
    get error_value__gt_string_handler() {
      return error_value__gt_string_handler;
    },
    get procedure_arity_mask() {
      return procedure_arity_mask;
    },
    get bitwise_bit_set_p() {
      return bitwise_bit_set_p;
    },
    get procedure_extract_target() {
      return procedure_extract_target;
    },
    get regexp_p() {
      return regexp_p;
    },
    get pregexp_p() {
      return pregexp_p;
    },
    get byte_regexp_p() {
      return byte_regexp_p;
    },
    get byte_pregexp_p() {
      return byte_pregexp_p;
    },
    get regexp() {
      return regexp;
    },
    get pregexp() {
      return pregexp;
    },
    get byte_regexp() {
      return byte_regexp;
    },
    get byte_pregexp() {
      return byte_pregexp;
    },
    get regexp_match() {
      return regexp_match;
    },
    get kernel_arity_at_least_value() {
      return kernel_arity_at_least_value;
    },
    get kernel_arity_at_least_p() {
      return kernel_arity_at_least_p;
    },
    get make_arity_at_least() {
      return make_arity_at_least;
    },
    get struct_kernel_arity_at_least() {
      return struct_kernel_arity_at_least;
    },
    get procedure_p() {
      return procedure_p;
    },
    get arity_at_least() {
      return arity_at_least;
    },
    get arity_at_least_p() {
      return arity_at_least_p;
    },
    get arity_at_least_value() {
      return arity_at_least_value;
    },
    get procedure_arity_includes_p() {
      return procedure_arity_includes_p;
    },
    get procedure_arity() {
      return procedure_arity;
    },
    get procedure_arity_p() {
      return procedure_arity_p;
    },
    get checked_procedure_check_and_extract() {
      return checked_procedure_check_and_extract;
    },
    get gensym() {
      return gensym;
    },
    get eval_jit_enabled() {
      return eval_jit_enabled;
    },
    get variable_reference_constant_p() {
      return variable_reference_constant_p;
    },
    get variable_reference_from_unsafe_p() {
      return variable_reference_from_unsafe_p;
    },
    get inspector_p() {
      return inspector_p;
    },
    get make_thread_cell() {
      return make_thread_cell;
    },
    get system_type() {
      return system_type;
    },
    get make_weak_hash() {
      return make_weak_hash;
    },
    get make_weak_hasheqv() {
      return make_weak_hasheqv;
    },
    get make_weak_hasheq() {
      return make_weak_hasheq;
    }
  };
})();
var $__runtime_47_core_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/core.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var __rjs_quoted__ = {};
  ;
  return {get __rjs_quoted__() {
      return __rjs_quoted__;
    }};
})();
var $__collects_47_racket_47_private_47_reverse_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/racket/private/reverse.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__runtime_47_kernel_46_rkt_46_js__;
  var M1 = $__runtime_47_core_46_rkt_46_js__;
  var reverse = function(l1907) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M0.variable_reference_from_unsafe_p(M1.__rjs_quoted__.___variable_reference) !== false) {
      var if_res1169 = M0.rvoid();
    } else {
      if (M0.list_p(l1907) !== false) {
        var if_res1168 = M0.rvoid();
      } else {
        var if_res1168 = M0.raise_argument_error($rjs_core.Symbol.make("reverse"), $rjs_core.UString.make("list?"), l1907);
      }
      var if_res1169 = if_res1168;
    }
    if_res1169;
    var loop1908 = function(a1909, l1910) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M0.null_p(l1910) !== false) {
        var if_res1170 = a1909;
      } else {
        var if_res1170 = loop1908(M0.cons(M0.car(l1910), a1909), M0.cdr(l1910));
      }
      return if_res1170;
    };
    return loop1908(M0.rnull, l1907);
  };
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get alt_reverse() {
      return reverse;
    }
  };
})();
var $__links_47_racketscript_45_compiler_47_racketscript_47_private_47_interop_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "links/racketscript-compiler/racketscript/private/interop.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__runtime_47_kernel_46_rkt_46_js__;
  var ___js_ffi = $rjs_core.attachProcedureArity(function() {
    for (var _618307 = [],
        $__1 = 0; $__1 < arguments.length; $__1++)
      _618307[$__1] = arguments[$__1];
    var _618 = $rjs_core.Pair.listFromArray(_618307);
    return M0.error($rjs_core.Symbol.make("racketscript"), $rjs_core.UString.make("can't make JS ffi calls in Racket"));
  });
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get ___js_ffi() {
      return ___js_ffi;
    }
  };
})();
var $__links_47_racketscript_45_compiler_47_racketscript_47_interop_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "links/racketscript-compiler/racketscript/interop.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__collects_47_racket_47_private_47_reverse_46_rkt_46_js__;
  var M1 = $__runtime_47_kernel_46_rkt_46_js__;
  var M2 = $__links_47_racketscript_45_compiler_47_racketscript_47_private_47_interop_46_rkt_46_js__;
  var __eq__gt_$ = function(lam_expr750) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return $rjs_core.Marks.wrapWithContext(lam_expr750);
  };
  var js_string = function(e751) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return e751.toString();
  };
  var racket_string = function(e752) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return $rjs_core.UString.makeImmutable(e752);
  };
  var assoc__gt_object = function(pairs753) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var result754 = {};
    var loop755 = function(pairs756) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M1.null_p(pairs756) !== false) {
        var if_res402 = result754;
      } else {
        var p757 = M1.car(pairs756);
        var k759 = M1.car(p757);
        if (M1.string_p(k759) !== false) {
          var if_res401 = k759;
        } else {
          if (M1.symbol_p(k759) !== false) {
            var if_res400 = M1.symbol__gt_string(k759);
          } else {
            var if_res400 = M1.error($rjs_core.Symbol.make("assoc->object"), $rjs_core.UString.make("invalid key value"));
          }
          var if_res401 = if_res400;
        }
        var key758 = if_res401;
        result754[key758] = M1.car(M1.cdr(p757));
        var if_res402 = loop755(M1.cdr(pairs756));
      }
      return if_res402;
    };
    return loop755(pairs753);
  };
  var js_array_p = function(v760) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return (v760) instanceof (Array);
  };
  var in_js_array = function(arr761) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_array(arr761);
    var arr762 = arr761;
    if (js_array_p(arr762) !== false) {
      var if_res403 = M1.rvoid();
    } else {
      var if_res403 = in_js_array(arr762);
    }
    if_res403;
    var for_loop763 = function(fold_var764, i765) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M1.__lt_(i765, arr762.length) !== false) {
        var v766 = arr762[i765];
        if (true !== false) {
          var fold_var768 = fold_var764;
          var fold_var769 = M1.cons(v766, fold_var768);
          var fold_var767 = M1.values(fold_var769);
          if (true !== false) {
            var if_res404 = M1.not(false);
          } else {
            var if_res404 = false;
          }
          if (if_res404 !== false) {
            var if_res405 = for_loop763(fold_var767, i765 + 1);
          } else {
            var if_res405 = fold_var767;
          }
          var if_res406 = if_res405;
        } else {
          var if_res406 = fold_var764;
        }
        var if_res407 = if_res406;
      } else {
        var if_res407 = fold_var764;
      }
      return if_res407;
    };
    return M0.alt_reverse(for_loop763(M1.rnull, 0));
  };
  var check_array = function(v770) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (js_array_p(v770) !== false) {
      var if_res408 = M1.rvoid();
    } else {
      var if_res408 = M1.raise_argument_error($rjs_core.Symbol.make("in-js-array"), $rjs_core.UString.make("js-array?"), v770);
    }
    return if_res408;
  };
  var in_js_obect = function(obj771) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_object(obj771);
    var obj772 = obj771;
    var keys773 = Object.keys(obj771);
    if (js_object_p(obj772) !== false) {
      var if_res409 = M1.rvoid();
    } else {
      var if_res409 = in_js_array(obj772);
    }
    if_res409;
    var for_loop774 = function(fold_var775, i776) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M1.__lt_(i776, keys773.length) !== false) {
        var k777 = keys773[i776];
        var v778 = obj772[keys773[i776]];
        if (true !== false) {
          var fold_var780 = fold_var775;
          var fold_var781 = M1.cons(M1.values(k777, v778), fold_var780);
          var fold_var779 = M1.values(fold_var781);
          if (true !== false) {
            var if_res410 = M1.not(false);
          } else {
            var if_res410 = false;
          }
          if (if_res410 !== false) {
            var if_res411 = for_loop774(fold_var779, i776 + 1);
          } else {
            var if_res411 = fold_var779;
          }
          var if_res412 = if_res411;
        } else {
          var if_res412 = fold_var775;
        }
        var if_res413 = if_res412;
      } else {
        var if_res413 = fold_var775;
      }
      return if_res413;
    };
    return M0.alt_reverse(for_loop774(M1.rnull, 0));
  };
  var js_object_p = function(v782) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return $traceurRuntime.typeof((v782)) === "object";
  };
  var check_object = function(v783) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (js_object_p(v783) !== false) {
      var if_res414 = M1.rvoid();
    } else {
      var if_res414 = M1.raise_argument_error($rjs_core.Symbol.make("in-js-object"), $rjs_core.UString.make("js-object?"), v783);
    }
    return if_res414;
  };
  var __rjs_quoted__ = {};
  __rjs_quoted__.js_string = js_string;
  __rjs_quoted__.js_object_p = js_object_p;
  __rjs_quoted__.js_array_p = js_array_p;
  __rjs_quoted__.in_js_array = in_js_array;
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get assoc__gt_object() {
      return assoc__gt_object;
    },
    get racket_string() {
      return racket_string;
    },
    get js_string() {
      return js_string;
    },
    get __eq__gt_$() {
      return __eq__gt_$;
    }
  };
})();
var $__collects_47_waxeye_47_fa_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/waxeye/fa.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__runtime_47_kernel_46_rkt_46_js__;
  var let_result1162 = M0.make_struct_type($rjs_core.Symbol.make("edge"), false, 3, 0, false, M0.rnull, M0.current_inspector(), false, $rjs_core.Pair.makeList(), false, $rjs_core.Symbol.make("edge"));
  var struct_1892 = let_result1162.getAt(0);
  var make_1893 = let_result1162.getAt(1);
  var __p1894 = let_result1162.getAt(2);
  var __ref1895 = let_result1162.getAt(3);
  var __set_bang_1896 = let_result1162.getAt(4);
  var let_result1163 = M0.values(struct_1892, make_1893, __p1894, M0.make_struct_field_accessor(__ref1895, 0, $rjs_core.Symbol.make("t")), M0.make_struct_field_accessor(__ref1895, 1, $rjs_core.Symbol.make("s")), M0.make_struct_field_accessor(__ref1895, 2, $rjs_core.Symbol.make("v")), M0.make_struct_field_mutator(__set_bang_1896, 0, $rjs_core.Symbol.make("t")), M0.make_struct_field_mutator(__set_bang_1896, 1, $rjs_core.Symbol.make("s")), M0.make_struct_field_mutator(__set_bang_1896, 2, $rjs_core.Symbol.make("v")));
  var struct_edge = let_result1163.getAt(0);
  var edge1 = let_result1163.getAt(1);
  var edge_p = let_result1163.getAt(2);
  var edge_t = let_result1163.getAt(3);
  var edge_s = let_result1163.getAt(4);
  var edge_v = let_result1163.getAt(5);
  var set_edge_t_bang_ = let_result1163.getAt(6);
  var set_edge_s_bang_ = let_result1163.getAt(7);
  var set_edge_v_bang_ = let_result1163.getAt(8);
  var let_result1164 = M0.make_struct_type($rjs_core.Symbol.make("state"), false, 2, 0, false, M0.rnull, M0.current_inspector(), false, $rjs_core.Pair.makeList(), false, $rjs_core.Symbol.make("state"));
  var struct_1897 = let_result1164.getAt(0);
  var make_1898 = let_result1164.getAt(1);
  var __p1899 = let_result1164.getAt(2);
  var __ref1900 = let_result1164.getAt(3);
  var __set_bang_1901 = let_result1164.getAt(4);
  var let_result1165 = M0.values(struct_1897, make_1898, __p1899, M0.make_struct_field_accessor(__ref1900, 0, $rjs_core.Symbol.make("edges")), M0.make_struct_field_accessor(__ref1900, 1, $rjs_core.Symbol.make("match")), M0.make_struct_field_mutator(__set_bang_1901, 0, $rjs_core.Symbol.make("edges")), M0.make_struct_field_mutator(__set_bang_1901, 1, $rjs_core.Symbol.make("match")));
  var struct_state = let_result1165.getAt(0);
  var state2 = let_result1165.getAt(1);
  var state_p = let_result1165.getAt(2);
  var state_edges = let_result1165.getAt(3);
  var state_match = let_result1165.getAt(4);
  var set_state_edges_bang_ = let_result1165.getAt(5);
  var set_state_match_bang_ = let_result1165.getAt(6);
  var let_result1166 = M0.make_struct_type($rjs_core.Symbol.make("fa"), false, 3, 0, false, M0.rnull, M0.current_inspector(), false, $rjs_core.Pair.makeList(0, 1, 2), false, $rjs_core.Symbol.make("fa"));
  var struct_1902 = let_result1166.getAt(0);
  var make_1903 = let_result1166.getAt(1);
  var __p1904 = let_result1166.getAt(2);
  var __ref1905 = let_result1166.getAt(3);
  var __set_bang_1906 = let_result1166.getAt(4);
  var let_result1167 = M0.values(struct_1902, make_1903, __p1904, M0.make_struct_field_accessor(__ref1905, 0, $rjs_core.Symbol.make("type")), M0.make_struct_field_accessor(__ref1905, 1, $rjs_core.Symbol.make("states")), M0.make_struct_field_accessor(__ref1905, 2, $rjs_core.Symbol.make("mode")));
  var struct_fa = let_result1167.getAt(0);
  var fa3 = let_result1167.getAt(1);
  var fa_p = let_result1167.getAt(2);
  var fa_type = let_result1167.getAt(3);
  var fa_states = let_result1167.getAt(4);
  var fa_mode = let_result1167.getAt(5);
  var __rjs_quoted__ = {};
  __rjs_quoted__.set_edge_v_bang_ = set_edge_v_bang_;
  __rjs_quoted__.set_edge_t_bang_ = set_edge_t_bang_;
  __rjs_quoted__.state2 = state2;
  __rjs_quoted__.state_match = state_match;
  __rjs_quoted__.struct_fa = struct_fa;
  __rjs_quoted__.set_state_edges_bang_ = set_state_edges_bang_;
  __rjs_quoted__.struct_edge = struct_edge;
  __rjs_quoted__.edge_s = edge_s;
  __rjs_quoted__.fa_p = fa_p;
  __rjs_quoted__.edge_t = edge_t;
  __rjs_quoted__.set_state_match_bang_ = set_state_match_bang_;
  __rjs_quoted__.struct_state = struct_state;
  __rjs_quoted__.edge1 = edge1;
  __rjs_quoted__.edge_p = edge_p;
  __rjs_quoted__.state_p = state_p;
  __rjs_quoted__.fa_type = fa_type;
  __rjs_quoted__.fa_mode = fa_mode;
  __rjs_quoted__.state_edges = state_edges;
  __rjs_quoted__.fa_states = fa_states;
  __rjs_quoted__.set_edge_s_bang_ = set_edge_s_bang_;
  __rjs_quoted__.edge_v = edge_v;
  __rjs_quoted__.fa3 = fa3;
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get struct_edge() {
      return struct_edge;
    },
    get edge_p() {
      return edge_p;
    },
    get fa_states() {
      return fa_states;
    },
    get edge_v() {
      return edge_v;
    },
    get struct_state() {
      return struct_state;
    },
    get set_edge_s_bang_() {
      return set_edge_s_bang_;
    },
    get set_edge_t_bang_() {
      return set_edge_t_bang_;
    },
    get struct_fa() {
      return struct_fa;
    },
    get set_edge_v_bang_() {
      return set_edge_v_bang_;
    },
    get fa_mode() {
      return fa_mode;
    },
    get state_edges() {
      return state_edges;
    },
    get state_p() {
      return state_p;
    },
    get state_match() {
      return state_match;
    },
    get set_state_match_bang_() {
      return set_state_match_bang_;
    },
    get fa_p() {
      return fa_p;
    },
    get edge_s() {
      return edge_s;
    },
    get fa_type() {
      return fa_type;
    },
    get edge_t() {
      return edge_t;
    },
    get set_state_edges_bang_() {
      return set_state_edges_bang_;
    }
  };
})();
var $__collects_47_waxeye_47_set_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/waxeye/set.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__runtime_47_kernel_46_rkt_46_js__;
  var within_set_p = function(a3534, b3535) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M0.null_p(a3534) !== false) {
      var if_res2389 = false;
    } else {
      var aa3536 = M0.car(a3534);
      if (M0.char_p(aa3536) !== false) {
        if (M0.char_eq__p(aa3536, b3535) !== false) {
          var if_res2384 = true;
        } else {
          if (M0.char_lt__p(aa3536, b3535) !== false) {
            var if_res2383 = within_set_p(M0.cdr(a3534), b3535);
          } else {
            var if_res2383 = false;
          }
          var if_res2384 = if_res2383;
        }
        var if_res2388 = if_res2384;
      } else {
        if (M0.char_lt__eq__p(M0.car(aa3536), b3535) !== false) {
          var if_res2385 = M0.char_lt__eq__p(b3535, M0.cdr(aa3536));
        } else {
          var if_res2385 = false;
        }
        if (if_res2385 !== false) {
          var if_res2387 = true;
        } else {
          if (M0.char_lt__p(M0.cdr(aa3536), b3535) !== false) {
            var if_res2386 = within_set_p(M0.cdr(a3534), b3535);
          } else {
            var if_res2386 = false;
          }
          var if_res2387 = if_res2386;
        }
        var if_res2388 = if_res2387;
      }
      var if_res2389 = if_res2388;
    }
    return if_res2389;
  };
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get within_set_p() {
      return within_set_p;
    }
  };
})();
var $__collects_47_racket_47_private_47_kw_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/racket/private/kw.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__runtime_47_kernel_46_rkt_46_js__;
  var M1 = $__runtime_47_unsafe_46_rkt_46_js__;
  var let_result1598 = M0.make_struct_type_property($rjs_core.Symbol.make("keyword-impersonator"));
  var prop_keyword_impersonator = let_result1598.getAt(0);
  var keyword_impersonator_p = let_result1598.getAt(1);
  var keyword_impersonator_ref = let_result1598.getAt(2);
  var keyword_procedure_impersonator_of = function(v2561) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (keyword_impersonator_p(v2561) !== false) {
      var if_res1599 = keyword_impersonator_ref(v2561)(v2561);
    } else {
      var if_res1599 = false;
    }
    return if_res1599;
  };
  var let_result1600 = M0.make_struct_type($rjs_core.Symbol.make("keyword-procedure"), false, 4, 0, false, M0.list(M0.cons(M0.prop_checked_procedure, true), M0.cons(M0.prop_impersonator_of, keyword_procedure_impersonator_of)), M0.current_inspector(), false, $rjs_core.Pair.makeList(0, 1, 2, 3));
  var struct_keyword_procedure = let_result1600.getAt(0);
  var mk_kw_proc = let_result1600.getAt(1);
  var keyword_procedure_p = let_result1600.getAt(2);
  var keyword_procedure_ref = let_result1600.getAt(3);
  var keyword_procedure_set_bang_ = let_result1600.getAt(4);
  var keyword_procedure_checker = M0.make_struct_field_accessor(keyword_procedure_ref, 0);
  var keyword_procedure_proc = M0.make_struct_field_accessor(keyword_procedure_ref, 1);
  var keyword_procedure_required = M0.make_struct_field_accessor(keyword_procedure_ref, 2);
  var keyword_procedure_allowed = M0.make_struct_field_accessor(keyword_procedure_ref, 3);
  var let_result1601 = M0.make_struct_type($rjs_core.Symbol.make("procedure"), struct_keyword_procedure, 0, 0, false, M0.list(M0.cons(M0.prop_method_arity_error, true)));
  var struct_keyword_method = let_result1601.getAt(0);
  var make_km = let_result1601.getAt(1);
  var keyword_method_p = let_result1601.getAt(2);
  var km_ref = let_result1601.getAt(3);
  var km_set_bang_ = let_result1601.getAt(4);
  var generate_arity_string = function(proc2562) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var let_result1602 = procedure_keywords(proc2562);
    var req2563 = let_result1602.getAt(0);
    var allowed2564 = let_result1602.getAt(1);
    var a2565 = M0.procedure_arity(proc2562);
    var keywords_desc2566 = function(opt2568, req2569) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var temp1608 = $rjs_core.UString.make("~a with keyword~a~a");
      if (M0.null_p(M0.cdr(req2569)) !== false) {
        var if_res1607 = M0.format($rjs_core.UString.make("an ~aargument"), opt2568);
      } else {
        var if_res1607 = M0.format($rjs_core.UString.make("~aarguments"), opt2568);
      }
      if (M0.null_p(M0.cdr(req2569)) !== false) {
        var if_res1606 = $rjs_core.UString.make("");
      } else {
        var if_res1606 = $rjs_core.UString.make("s");
      }
      var tmp2570 = M0.length(req2569);
      if (M0.equal_p(tmp2570, 1) !== false) {
        var if_res1605 = M0.format($rjs_core.UString.make(" ~a"), M0.car(req2569));
      } else {
        if (M0.equal_p(tmp2570, 2) !== false) {
          var if_res1604 = M0.format($rjs_core.UString.make(" ~a and ~a"), M0.car(req2569), M0.cadr(req2569));
        } else {
          var loop2571 = function(req2572) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (M0.null_p(M0.cdr(req2572)) !== false) {
              var if_res1603 = M0.format($rjs_core.UString.make(" and ~a"), M0.car(req2572));
            } else {
              var if_res1603 = M0.format($rjs_core.UString.make(" ~a,~a"), M0.car(req2572), loop2571(M0.cdr(req2572)));
            }
            return if_res1603;
          };
          var if_res1604 = loop2571(req2569);
        }
        var if_res1605 = if_res1604;
      }
      return M0.format(temp1608, if_res1607, if_res1606, if_res1605);
    };
    var method_adjust2567 = function(a2573) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var or_part2574 = okm_p(proc2562);
      if (or_part2574 !== false) {
        var if_res1609 = or_part2574;
      } else {
        var if_res1609 = keyword_method_p(proc2562);
      }
      if (if_res1609 !== false) {
        if (M0.zero_p(a2573) !== false) {
          var if_res1610 = 0;
        } else {
          var if_res1610 = M0.sub1(a2573);
        }
        var if_res1611 = if_res1610;
      } else {
        var if_res1611 = a2573;
      }
      return if_res1611;
    };
    if (M0.number_p(a2565) !== false) {
      var a2575 = method_adjust2567(a2565);
      var if_res1618 = M0.format($rjs_core.UString.make("~a"), a2575);
    } else {
      if (M0.arity_at_least_p(a2565) !== false) {
        var a2576 = method_adjust2567(M0.arity_at_least_value(a2565));
        var if_res1617 = M0.format($rjs_core.UString.make("at least ~a"), a2576);
      } else {
        var if_res1617 = $rjs_core.UString.make("a different number");
      }
      var if_res1618 = if_res1617;
    }
    if (M0.null_p(req2563) !== false) {
      var if_res1616 = $rjs_core.UString.make("");
    } else {
      var if_res1616 = M0.format($rjs_core.UString.make(" plus ~a"), keywords_desc2566($rjs_core.UString.make(""), req2563));
    }
    if (allowed2564 !== false) {
      var loop2578 = function(req2579, allowed2580) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M0.null_p(req2579) !== false) {
          var if_res1613 = allowed2580;
        } else {
          if (M0.eq_p(M0.car(req2579), M0.car(allowed2580)) !== false) {
            var if_res1612 = loop2578(M0.cdr(req2579), M0.cdr(allowed2580));
          } else {
            var if_res1612 = M0.cons(M0.car(allowed2580), loop2578(req2579, M0.cdr(allowed2580)));
          }
          var if_res1613 = if_res1612;
        }
        return if_res1613;
      };
      var others2577 = loop2578(req2563, allowed2564);
      if (M0.null_p(others2577) !== false) {
        var if_res1614 = $rjs_core.UString.make("");
      } else {
        var if_res1614 = M0.format($rjs_core.UString.make(" plus ~a"), keywords_desc2566($rjs_core.UString.make("optional "), others2577));
      }
      var if_res1615 = if_res1614;
    } else {
      var if_res1615 = $rjs_core.UString.make(" plus arbitrary keyword arguments");
    }
    return M0.string_append(if_res1618, if_res1616, if_res1615);
  };
  var let_result1619 = M0.make_struct_type($rjs_core.Symbol.make("procedure"), struct_keyword_procedure, 1, 0, false, M0.list(M0.cons(M0.prop_arity_string, generate_arity_string)), M0.current_inspector(), 0);
  var struct_okp = let_result1619.getAt(0);
  var make_optional_keyword_procedure = let_result1619.getAt(1);
  var okp_p = let_result1619.getAt(2);
  var okp_ref = let_result1619.getAt(3);
  var okp_set_bang_ = let_result1619.getAt(4);
  var let_result1620 = M0.make_struct_type($rjs_core.Symbol.make("procedure"), struct_okp, 0, 0, false, M0.list(M0.cons(M0.prop_method_arity_error, true)));
  var struct_okm = let_result1620.getAt(0);
  var make_optional_keyword_method = let_result1620.getAt(1);
  var okm_p = let_result1620.getAt(2);
  var okm_ref = let_result1620.getAt(3);
  var okm_set_bang_ = let_result1620.getAt(4);
  var let_result1621 = M0.make_struct_type_property($rjs_core.Symbol.make("named-keyword-procedure"));
  var prop_named_keyword_procedure = let_result1621.getAt(0);
  var named_keyword_procedure_p = let_result1621.getAt(1);
  var keyword_procedure_name_plus_fail = let_result1621.getAt(2);
  var let_result1623 = M0.make_struct_type_property($rjs_core.Symbol.make("procedure"), function(v2581, info_l2582) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M0.exact_integer_p(v2581) !== false) {
      var if_res1622 = M0.make_struct_field_accessor(M0.list_ref(info_l2582, 3), v2581);
    } else {
      var if_res1622 = false;
    }
    return if_res1622;
  });
  var prop_procedure_accessor = let_result1623.getAt(0);
  var procedure_accessor_p = let_result1623.getAt(1);
  var procedure_accessor_ref = let_result1623.getAt(2);
  var let_result1624 = M0.make_struct_type_property($rjs_core.Symbol.make("procedure"), false, M0.list(M0.cons(M0.prop_procedure, M0.values), M0.cons(prop_procedure_accessor, M0.values)), true);
  var new_prop_procedure = let_result1624.getAt(0);
  var new_procedure_p = let_result1624.getAt(1);
  var new_procedure_ref = let_result1624.getAt(2);
  var let_result1625 = M0.make_struct_type($rjs_core.Symbol.make("procedure"), struct_keyword_procedure, 1, 0, false, M0.list(M0.cons(prop_keyword_impersonator, function(v2583) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return kpp_ref(v2583, 0);
  })));
  var struct_keyword_procedure_impersonator = let_result1625.getAt(0);
  var make_kpp = let_result1625.getAt(1);
  var keyword_procedure_impersonator_p = let_result1625.getAt(2);
  var kpp_ref = let_result1625.getAt(3);
  var kpp_set_bang_ = let_result1625.getAt(4);
  var let_result1626 = M0.make_struct_type($rjs_core.Symbol.make("procedure"), struct_keyword_method, 1, 0, false, M0.list(M0.cons(prop_keyword_impersonator, function(v2584) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return kmp_ref(v2584, 0);
  })));
  var struct_keyword_method_impersonator = let_result1626.getAt(0);
  var make_kmp = let_result1626.getAt(1);
  var keyword_method_impersonator_p = let_result1626.getAt(2);
  var kmp_ref = let_result1626.getAt(3);
  var kmp_set_bang_ = let_result1626.getAt(4);
  var let_result1627 = M0.make_struct_type($rjs_core.Symbol.make("procedure"), struct_okp, 1, 0, false, M0.list(M0.cons(prop_keyword_impersonator, function(v2585) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return okpp_ref(v2585, 0);
  })));
  var struct_okpp = let_result1627.getAt(0);
  var make_optional_keyword_procedure_impersonator = let_result1627.getAt(1);
  var okpp_p = let_result1627.getAt(2);
  var okpp_ref = let_result1627.getAt(3);
  var okpp_set_bang_ = let_result1627.getAt(4);
  var let_result1628 = M0.make_struct_type($rjs_core.Symbol.make("procedure"), struct_okp, 1, 0, false, M0.list(M0.cons(prop_keyword_impersonator, function(v2586) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return okmp_ref(v2586, 0);
  })));
  var struct_okmp = let_result1628.getAt(0);
  var make_optional_keyword_method_impersonator = let_result1628.getAt(1);
  var okmp_p = let_result1628.getAt(2);
  var okmp_ref = let_result1628.getAt(3);
  var okmp_set_bang_ = let_result1628.getAt(4);
  var let_result1629 = M0.make_struct_type($rjs_core.Symbol.make("procedure"), struct_keyword_procedure, 0, 0, false, M0.list(M0.cons(M0.prop_arity_string, generate_arity_string), M0.cons(M0.prop_incomplete_arity, true)));
  var struct_keyword_procedure_by_arity_error = let_result1629.getAt(0);
  var make_kp_by_ae = let_result1629.getAt(1);
  var kp_by_ae_p = let_result1629.getAt(2);
  var kp_by_ae_ref = let_result1629.getAt(3);
  var kp_by_ae_set_bang_ = let_result1629.getAt(4);
  var let_result1630 = M0.make_struct_type($rjs_core.Symbol.make("procedure"), struct_keyword_method, 0, 0, false, M0.list(M0.cons(M0.prop_arity_string, generate_arity_string), M0.cons(M0.prop_incomplete_arity, true)));
  var struct_keyword_method_by_arity_error = let_result1630.getAt(0);
  var make_km_by_ae = let_result1630.getAt(1);
  var km_by_ae_p = let_result1630.getAt(2);
  var km_by_ae_ref = let_result1630.getAt(3);
  var km_by_ae_set_bang_ = let_result1630.getAt(4);
  var let_result1631 = M0.make_struct_type($rjs_core.Symbol.make("procedure"), struct_keyword_procedure_impersonator, 0, 0, false, M0.list(M0.cons(M0.prop_arity_string, generate_arity_string), M0.cons(M0.prop_incomplete_arity, true)));
  var struct_keyword_procedure_impersonator_by_arity_error = let_result1631.getAt(0);
  var make_kpi_by_ae = let_result1631.getAt(1);
  var kpi_by_ae_p = let_result1631.getAt(2);
  var kpi_by_ae_ref = let_result1631.getAt(3);
  var kpi_by_ae_set_bang_ = let_result1631.getAt(4);
  var let_result1632 = M0.make_struct_type($rjs_core.Symbol.make("procedure"), struct_keyword_method_impersonator, 0, 0, false, M0.list(M0.cons(M0.prop_arity_string, generate_arity_string), M0.cons(M0.prop_incomplete_arity, true)));
  var struct_keyword_method_impersonator_by_arity_error = let_result1632.getAt(0);
  var make_kmi_by_ae = let_result1632.getAt(1);
  var kmi_by_ae_p = let_result1632.getAt(2);
  var kmi_by_ae_ref = let_result1632.getAt(3);
  var kmi_by_ae_set_bang_ = let_result1632.getAt(4);
  var make_required = function(name2587, fail_proc2588, method_p2589, impersonator_p2590) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var or_part2596 = name2587;
    if (or_part2596 !== false) {
      var if_res1636 = or_part2596;
    } else {
      var if_res1636 = $rjs_core.Symbol.make("unknown");
    }
    if (impersonator_p2590 !== false) {
      if (method_p2589 !== false) {
        var if_res1633 = struct_keyword_method_impersonator_by_arity_error;
      } else {
        var if_res1633 = struct_keyword_procedure_impersonator_by_arity_error;
      }
      var if_res1635 = if_res1633;
    } else {
      if (method_p2589 !== false) {
        var if_res1634 = struct_keyword_method_by_arity_error;
      } else {
        var if_res1634 = struct_keyword_procedure_by_arity_error;
      }
      var if_res1635 = if_res1634;
    }
    var let_result1637 = M0.make_struct_type(if_res1636, if_res1635, 0, 0, false, M0.list(M0.cons(prop_named_keyword_procedure, M0.cons(name2587, fail_proc2588))), M0.current_inspector(), fail_proc2588);
    var s_2591 = let_result1637.getAt(0);
    var mk2592 = let_result1637.getAt(1);
    var __p2593 = let_result1637.getAt(2);
    var __ref2594 = let_result1637.getAt(3);
    var __set_bang_2595 = let_result1637.getAt(4);
    return mk2592;
  };
  var cl1638 = function(proc2597) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var proc_name2598 = M0.object_name(proc2597);
    var plain_proc2599 = $rjs_core.attachProcedureArity(function() {
      for (var args26001641 = [],
          $__1 = 0; $__1 < arguments.length; $__1++)
        args26001641[$__1] = arguments[$__1];
      var args2600 = $rjs_core.Pair.listFromArray(args26001641);
      return M0.apply(proc2597, M0.rnull, M0.rnull, args2600);
    });
    if (M0.symbol_p(proc_name2598) !== false) {
      var if_res1642 = M0.__rjs_quoted__.procedure_rename(plain_proc2599, proc_name2598);
    } else {
      var if_res1642 = plain_proc2599;
    }
    return make_keyword_procedure(proc2597, if_res1642);
  };
  var cl1639 = function(proc2601, plain_proc2602) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M0.procedure_p(proc2601) !== false) {
      var if_res1643 = M0.procedure_arity_mask(proc2601);
    } else {
      var if_res1643 = false;
    }
    return make_optional_keyword_procedure(make_keyword_checker(M0.rnull, false, if_res1643), proc2601, M0.rnull, false, plain_proc2602);
  };
  var make_keyword_procedure = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1640 = {
      '1': cl1638,
      '2': cl1639
    }[arguments.length];
    if (fixed_lam1640 !== undefined) {
      return fixed_lam1640.apply(null, arguments);
    } else {
      return M0.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var keyword_apply = $rjs_core.attachProcedureArity(function(proc2603, kws2604, kw_vals2605, normal_args2606) {
    for (var normal_argss26071644 = [],
        $__1 = 4; $__1 < arguments.length; $__1++)
      normal_argss26071644[$__1 - 4] = arguments[$__1];
    if (arguments.length < 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var normal_argss2607 = $rjs_core.Pair.listFromArray(normal_argss26071644);
    var type_error2608 = function(what2609, which2610) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M0.apply(M0.raise_argument_error, $rjs_core.Symbol.make("keyword-apply"), what2609, which2610, proc2603, kws2604, kw_vals2605, normal_args2606, normal_argss2607);
    };
    if (M0.procedure_p(proc2603) !== false) {
      var if_res1645 = M0.rvoid();
    } else {
      var if_res1645 = type_error2608($rjs_core.UString.make("procedure?"), 0);
    }
    if_res1645;
    var loop2611 = function(ks2612) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M0.null_p(ks2612) !== false) {
        var if_res1652 = M0.rvoid();
      } else {
        var or_part2613 = M0.not(M0.pair_p(ks2612));
        if (or_part2613 !== false) {
          var if_res1646 = or_part2613;
        } else {
          var if_res1646 = M0.not(M0.keyword_p(M0.car(ks2612)));
        }
        if (if_res1646 !== false) {
          var if_res1651 = type_error2608($rjs_core.UString.make("(listof keyword?)"), 1);
        } else {
          if (M0.null_p(M0.cdr(ks2612)) !== false) {
            var if_res1650 = M0.rvoid();
          } else {
            var or_part2614 = M0.not(M0.pair_p(M0.cdr(ks2612)));
            if (or_part2614 !== false) {
              var if_res1647 = or_part2614;
            } else {
              var if_res1647 = M0.not(M0.keyword_p(M0.cadr(ks2612)));
            }
            if (if_res1647 !== false) {
              var if_res1649 = loop2611(M0.cdr(ks2612));
            } else {
              if (M0.keyword_lt__p(M0.car(ks2612), M0.cadr(ks2612)) !== false) {
                var if_res1648 = loop2611(M0.cdr(ks2612));
              } else {
                var if_res1648 = type_error2608($rjs_core.UString.make("(and/c (listof? keyword?) sorted? distinct?)"), 1);
              }
              var if_res1649 = if_res1648;
            }
            var if_res1650 = if_res1649;
          }
          var if_res1651 = if_res1650;
        }
        var if_res1652 = if_res1651;
      }
      return if_res1652;
    };
    loop2611(kws2604);
    if (M0.list_p(kw_vals2605) !== false) {
      var if_res1653 = M0.rvoid();
    } else {
      var if_res1653 = type_error2608($rjs_core.UString.make("list?"), 2);
    }
    if_res1653;
    if (M0.__eq_(M0.length(kws2604), M0.length(kw_vals2605)) !== false) {
      var if_res1654 = M0.rvoid();
    } else {
      var if_res1654 = M0.raise_arguments_error($rjs_core.Symbol.make("keyword-apply"), $rjs_core.UString.make("keyword list length does not match value list length"), $rjs_core.UString.make("keyword list length"), M0.length(kws2604), $rjs_core.UString.make("value list length"), M0.length(kw_vals2605), $rjs_core.UString.make("keyword list"), kws2604, $rjs_core.UString.make("value list"), kw_vals2605);
    }
    if_res1654;
    var loop2616 = function(normal_argss2617, pos2618) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M0.null_p(M0.cdr(normal_argss2617)) !== false) {
        var l2619 = M0.car(normal_argss2617);
        if (M0.list_p(l2619) !== false) {
          var if_res1655 = l2619;
        } else {
          var if_res1655 = type_error2608($rjs_core.UString.make("list?"), pos2618);
        }
        var if_res1656 = if_res1655;
      } else {
        var if_res1656 = M0.cons(M0.car(normal_argss2617), loop2616(M0.cdr(normal_argss2617), M0.add1(pos2618)));
      }
      return if_res1656;
    };
    var normal_args2615 = loop2616(M0.cons(normal_args2606, normal_argss2607), 3);
    if (M0.null_p(kws2604) !== false) {
      var if_res1657 = M0.apply(proc2603, normal_args2615);
    } else {
      var if_res1657 = M0.apply(keyword_procedure_extract_by_method(kws2604, 2 + M0.length(normal_args2615), proc2603, 0), kws2604, kw_vals2605, normal_args2615);
    }
    return if_res1657;
  });
  var procedure_keywords = function(p2620) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (keyword_procedure_p(p2620) !== false) {
      var if_res1662 = M0.values(keyword_procedure_required(p2620), keyword_procedure_allowed(p2620));
    } else {
      if (M0.procedure_p(p2620) !== false) {
        if (new_procedure_p(p2620) !== false) {
          var v2621 = new_procedure_ref(p2620);
          if (M0.procedure_p(v2621) !== false) {
            var if_res1659 = procedure_keywords(v2621);
          } else {
            var a2622 = procedure_accessor_ref(p2620);
            if (a2622 !== false) {
              var if_res1658 = procedure_keywords(a2622(p2620));
            } else {
              var if_res1658 = M0.values(M0.rnull, M0.rnull);
            }
            var if_res1659 = if_res1658;
          }
          var if_res1660 = if_res1659;
        } else {
          var if_res1660 = M0.values(M0.rnull, M0.rnull);
        }
        var if_res1661 = if_res1660;
      } else {
        var if_res1661 = M0.raise_argument_error($rjs_core.Symbol.make("procedure-keywords"), $rjs_core.UString.make("procedure?"), p2620);
      }
      var if_res1662 = if_res1661;
    }
    return if_res1662;
  };
  var missing_kw = $rjs_core.attachProcedureArity(function(proc2623) {
    for (var args26241663 = [],
        $__2 = 1; $__2 < arguments.length; $__2++)
      args26241663[$__2 - 1] = arguments[$__2];
    if (arguments.length < 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var args2624 = $rjs_core.Pair.listFromArray(args26241663);
    return M0.apply(keyword_procedure_extract_by_method(M0.rnull, 0, proc2623, 0), M0.rnull, M0.rnull, args2624);
  });
  var check_kw_args = function(p2625, kws2626) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop2627 = function(kws2628, required2629, allowed2630) {
      if (arguments.length !== 3) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M0.null_p(kws2628) !== false) {
        if (M0.null_p(required2629) !== false) {
          var if_res1664 = M0.values(false, false);
        } else {
          var if_res1664 = M0.values(M0.car(required2629), false);
        }
        var if_res1673 = if_res1664;
      } else {
        if (M0.pair_p(required2629) !== false) {
          var if_res1665 = M0.eq_p(M0.car(required2629), M0.car(kws2628));
        } else {
          var if_res1665 = false;
        }
        if (if_res1665 !== false) {
          var temp1668 = M0.cdr(kws2628);
          var temp1667 = M0.cdr(required2629);
          if (allowed2630 !== false) {
            var if_res1666 = M0.cdr(allowed2630);
          } else {
            var if_res1666 = false;
          }
          var if_res1672 = loop2627(temp1668, temp1667, if_res1666);
        } else {
          if (M0.not(allowed2630) !== false) {
            var if_res1671 = loop2627(M0.cdr(kws2628), required2629, false);
          } else {
            if (M0.pair_p(allowed2630) !== false) {
              if (M0.eq_p(M0.car(allowed2630), M0.car(kws2628)) !== false) {
                var if_res1669 = loop2627(M0.cdr(kws2628), required2629, M0.cdr(allowed2630));
              } else {
                var if_res1669 = loop2627(kws2628, required2629, M0.cdr(allowed2630));
              }
              var if_res1670 = if_res1669;
            } else {
              var if_res1670 = M0.values(false, M0.car(kws2628));
            }
            var if_res1671 = if_res1670;
          }
          var if_res1672 = if_res1671;
        }
        var if_res1673 = if_res1672;
      }
      return if_res1673;
    };
    return loop2627(kws2626, keyword_procedure_required(p2625), keyword_procedure_allowed(p2625));
  };
  var make_keyword_checker = function(req_kws2631, allowed_kws2632, arity_mask2633) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M0.not(allowed_kws2632) !== false) {
      if (M0.null_p(req_kws2631) !== false) {
        var if_res1676 = function(kws2634, a2635) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (true !== false) {
            var if_res1674 = M0.bitwise_bit_set_p(arity_mask2633, a2635);
          } else {
            var if_res1674 = false;
          }
          return if_res1674;
        };
      } else {
        var if_res1676 = function(kws2636, a2637) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (subset_p(req_kws2631, kws2636) !== false) {
            var if_res1675 = M0.bitwise_bit_set_p(arity_mask2633, a2637);
          } else {
            var if_res1675 = false;
          }
          return if_res1675;
        };
      }
      var if_res1689 = if_res1676;
    } else {
      if (M0.null_p(allowed_kws2632) !== false) {
        var if_res1688 = function(kws2638, a2639) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M0.null_p(kws2638) !== false) {
            var if_res1677 = M0.bitwise_bit_set_p(arity_mask2633, a2639);
          } else {
            var if_res1677 = false;
          }
          return if_res1677;
        };
      } else {
        if (M0.null_p(req_kws2631) !== false) {
          var if_res1687 = function(kws2640, a2641) {
            if (arguments.length !== 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (subset_p(kws2640, allowed_kws2632) !== false) {
              var if_res1678 = M0.bitwise_bit_set_p(arity_mask2633, a2641);
            } else {
              var if_res1678 = false;
            }
            return if_res1678;
          };
        } else {
          if (M0.list_p(req_kws2631) !== false) {
            if (M0.list_p(allowed_kws2632) !== false) {
              var if_res1679 = M0.eq_p(M0.length(req_kws2631), M0.length(allowed_kws2632));
            } else {
              var if_res1679 = false;
            }
            var if_res1680 = if_res1679;
          } else {
            var if_res1680 = false;
          }
          if (if_res1680 !== false) {
            var if_res1686 = function(kws2642, a2643) {
              if (arguments.length !== 2) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              var loop2644 = function(kws2645, req_kws2646) {
                if (arguments.length !== 2) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                if (M0.null_p(req_kws2646) !== false) {
                  var if_res1683 = M0.null_p(kws2645);
                } else {
                  if (M0.null_p(kws2645) !== false) {
                    var if_res1682 = false;
                  } else {
                    if (M0.eq_p(M0.car(kws2645), M0.car(req_kws2646)) !== false) {
                      var if_res1681 = loop2644(M0.cdr(kws2645), M0.cdr(req_kws2646));
                    } else {
                      var if_res1681 = false;
                    }
                    var if_res1682 = if_res1681;
                  }
                  var if_res1683 = if_res1682;
                }
                return if_res1683;
              };
              if (loop2644(kws2642, req_kws2631) !== false) {
                var if_res1684 = M0.bitwise_bit_set_p(arity_mask2633, a2643);
              } else {
                var if_res1684 = false;
              }
              return if_res1684;
            };
          } else {
            var if_res1686 = function(kws2647, a2648) {
              if (arguments.length !== 2) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              if (subsets_p(req_kws2631, kws2647, allowed_kws2632) !== false) {
                var if_res1685 = M0.bitwise_bit_set_p(arity_mask2633, a2648);
              } else {
                var if_res1685 = false;
              }
              return if_res1685;
            };
          }
          var if_res1687 = if_res1686;
        }
        var if_res1688 = if_res1687;
      }
      var if_res1689 = if_res1688;
    }
    return if_res1689;
  };
  var subset_p = function(l12649, l22650) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M0.null_p(l12649) !== false) {
      var if_res1692 = true;
    } else {
      if (M0.null_p(l22650) !== false) {
        var if_res1691 = false;
      } else {
        if (M0.eq_p(M0.car(l12649), M0.car(l22650)) !== false) {
          var if_res1690 = subset_p(M0.cdr(l12649), M0.cdr(l22650));
        } else {
          var if_res1690 = subset_p(l12649, M0.cdr(l22650));
        }
        var if_res1691 = if_res1690;
      }
      var if_res1692 = if_res1691;
    }
    return if_res1692;
  };
  var subsets_p = function(l12651, l22652, l32653) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M0.null_p(l12651) !== false) {
      var if_res1697 = subset_p(l22652, l32653);
    } else {
      if (M0.null_p(l22652) !== false) {
        var if_res1696 = false;
      } else {
        if (M0.null_p(l32653) !== false) {
          var if_res1695 = false;
        } else {
          var v22654 = M0.car(l22652);
          if (M0.eq_p(M0.car(l12651), v22654) !== false) {
            var if_res1694 = subsets_p(M0.cdr(l12651), M0.cdr(l22652), M0.cdr(l32653));
          } else {
            if (M0.eq_p(v22654, M0.car(l32653)) !== false) {
              var if_res1693 = subsets_p(l12651, M0.cdr(l22652), M0.cdr(l32653));
            } else {
              var if_res1693 = subsets_p(l12651, l22652, M0.cdr(l32653));
            }
            var if_res1694 = if_res1693;
          }
          var if_res1695 = if_res1694;
        }
        var if_res1696 = if_res1695;
      }
      var if_res1697 = if_res1696;
    }
    return if_res1697;
  };
  var keyword_procedure_extract_by_method = function(kws2655, n2656, p2657, method_n2658) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (keyword_procedure_p(p2657) !== false) {
      var if_res1698 = keyword_procedure_checker(p2657)(kws2655, n2656);
    } else {
      var if_res1698 = false;
    }
    if (if_res1698 !== false) {
      var if_res1726 = keyword_procedure_proc(p2657);
    } else {
      if (M0.not(keyword_procedure_p(p2657)) !== false) {
        if (M0.procedure_p(p2657) !== false) {
          if (new_procedure_p(p2657) !== false) {
            var a2661 = procedure_accessor_ref(p2657);
            if (a2661 !== false) {
              var if_res1699 = a2661(p2657);
            } else {
              var if_res1699 = false;
            }
            var if_res1700 = if_res1699;
          } else {
            var if_res1700 = false;
          }
          var or_part2660 = if_res1700;
          if (or_part2660 !== false) {
            var if_res1703 = or_part2660;
          } else {
            var or_part2662 = M0.procedure_extract_target(p2657);
            if (or_part2662 !== false) {
              var if_res1702 = or_part2662;
            } else {
              if (new_procedure_p(p2657) !== false) {
                var if_res1701 = $rjs_core.Symbol.make("method");
              } else {
                var if_res1701 = false;
              }
              var if_res1702 = if_res1701;
            }
            var if_res1703 = if_res1702;
          }
          var if_res1704 = if_res1703;
        } else {
          var if_res1704 = false;
        }
        var if_res1705 = if_res1704;
      } else {
        var if_res1705 = false;
      }
      var p22659 = if_res1705;
      if (p22659 !== false) {
        if (M0.eq_p(p22659, $rjs_core.Symbol.make("method")) !== false) {
          var p32663 = keyword_procedure_extract_by_method(kws2655, M0.add1(n2656), new_procedure_ref(p2657), M0.add1(method_n2658));
          var if_res1707 = $rjs_core.attachProcedureArity(function(kws2664, kw_args2665) {
            for (var args26661706 = [],
                $__3 = 2; $__3 < arguments.length; $__3++)
              args26661706[$__3 - 2] = arguments[$__3];
            if (arguments.length < 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            var args2666 = $rjs_core.Pair.listFromArray(args26661706);
            return M0.apply(p32663, kws2664, kw_args2665, M0.cons(p2657, args2666));
          });
        } else {
          var if_res1707 = keyword_procedure_extract_by_method(kws2655, n2656, p22659, method_n2658);
        }
        var if_res1725 = if_res1707;
      } else {
        var if_res1725 = $rjs_core.attachProcedureArity(function(kws2667, kw_args2668) {
          for (var args26691708 = [],
              $__4 = 2; $__4 < arguments.length; $__4++)
            args26691708[$__4 - 2] = arguments[$__4];
          if (arguments.length < 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          var args2669 = $rjs_core.Pair.listFromArray(args26691708);
          if (keyword_procedure_p(p2657) !== false) {
            var if_res1709 = check_kw_args(p2657, kws2667);
          } else {
            var if_res1709 = M0.values(false, M0.car(kws2667));
          }
          var let_result1710 = if_res1709;
          var missing_kw2670 = let_result1710.getAt(0);
          var extra_kw2671 = let_result1710.getAt(1);
          var or_part2676 = keyword_method_p(p2657);
          if (or_part2676 !== false) {
            var if_res1711 = or_part2676;
          } else {
            var if_res1711 = okm_p(p2657);
          }
          if (if_res1711 !== false) {
            var if_res1712 = 1;
          } else {
            var if_res1712 = 0;
          }
          var method_n2675 = method_n2658 + if_res1712;
          if (M0.__gt__eq_(n2656, method_n2675) !== false) {
            var if_res1713 = n2656 - method_n2675;
          } else {
            var if_res1713 = n2656;
          }
          var n2672 = if_res1713;
          if (M0.null_p(args2669) !== false) {
            var if_res1714 = M0.null_p(kws2667);
          } else {
            var if_res1714 = false;
          }
          if (if_res1714 !== false) {
            var if_res1715 = $rjs_core.UString.make("");
          } else {
            var if_res1715 = M0.apply(M0.string_append, $rjs_core.UString.make("\n  arguments...:"), M0.append(M0.map(function(v2677) {
              if (arguments.length !== 1) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              return M0.format($rjs_core.UString.make("\n   ~e"), v2677);
            }, args2669), M0.map(function(kw2678, kw_arg2679) {
              if (arguments.length !== 2) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              return M0.format($rjs_core.UString.make("\n   ~a ~e"), kw2678, kw_arg2679);
            }, kws2667, kw_args2668)));
          }
          var args_str2673 = if_res1715;
          var proc_name2674 = function(p2680) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (named_keyword_procedure_p(p2680) !== false) {
              var if_res1716 = M0.car(keyword_procedure_name_plus_fail(p2680));
            } else {
              var if_res1716 = false;
            }
            var or_part2681 = if_res1716;
            if (or_part2681 !== false) {
              var if_res1718 = or_part2681;
            } else {
              var or_part2682 = M0.object_name(p2680);
              if (or_part2682 !== false) {
                var if_res1717 = or_part2682;
              } else {
                var if_res1717 = p2680;
              }
              var if_res1718 = if_res1717;
            }
            return if_res1718;
          };
          if (extra_kw2671 !== false) {
            if (keyword_procedure_p(p2657) !== false) {
              var if_res1720 = M0.format(M0.string_append($rjs_core.UString.make("application: procedure does not expect an argument with given keyword\n"), $rjs_core.UString.make("  procedure: ~a\n"), $rjs_core.UString.make("  given keyword: ~a"), $rjs_core.UString.make("~a")), proc_name2674(p2657), extra_kw2671, args_str2673);
            } else {
              if (M0.procedure_p(p2657) !== false) {
                var if_res1719 = M0.format(M0.string_append($rjs_core.UString.make("application: procedure does not accept keyword arguments\n"), $rjs_core.UString.make("  procedure: ~a"), $rjs_core.UString.make("~a")), proc_name2674(p2657), args_str2673);
              } else {
                var if_res1719 = M0.format(M0.string_append($rjs_core.UString.make("application: not a procedure;\n"), $rjs_core.UString.make(" expected a procedure that can be applied to arguments\n"), $rjs_core.UString.make("  given: ~e"), $rjs_core.UString.make("~a")), p2657, args_str2673);
              }
              var if_res1720 = if_res1719;
            }
            var if_res1724 = if_res1720;
          } else {
            if (missing_kw2670 !== false) {
              var if_res1723 = M0.format(M0.string_append($rjs_core.UString.make("application: required keyword argument not supplied\n"), $rjs_core.UString.make("  procedure: ~a\n"), $rjs_core.UString.make("  required keyword: ~a"), $rjs_core.UString.make("~a")), proc_name2674(p2657), missing_kw2670, args_str2673);
            } else {
              var temp1722 = M0.string_append($rjs_core.UString.make("application: no case matching ~a non-keyword argument~a\n"), $rjs_core.UString.make("  procedure: ~a"), $rjs_core.UString.make("~a"));
              if (M0.__eq_(1, n2672 - 2) !== false) {
                var if_res1721 = $rjs_core.UString.make("");
              } else {
                var if_res1721 = $rjs_core.UString.make("s");
              }
              var if_res1723 = M0.format(temp1722, n2672 - 2, if_res1721, proc_name2674(p2657), args_str2673);
            }
            var if_res1724 = if_res1723;
          }
          return M0.raise(M0.__rjs_quoted__.exn_fail_contract(if_res1724, M0.current_continuation_marks()));
        });
      }
      var if_res1726 = if_res1725;
    }
    return if_res1726;
  };
  var keyword_procedure_extract = function(p2683, kws2684, n2685) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return keyword_procedure_extract_by_method(kws2684, n2685, p2683, 0);
  };
  var cl1727 = function(proc2686, arity2687, req_kw2688, allowed_kw2689, name2690) {
    if (arguments.length !== 5) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return do_procedure_reduce_keyword_arity($rjs_core.Symbol.make("procedure-reduce-keyword-arity"), proc2686, arity2687, false, name2690, req_kw2688, allowed_kw2689);
  };
  var cl1728 = function(proc2691, arity2692, req_kw2693, allowed_kw2694) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return do_procedure_reduce_keyword_arity($rjs_core.Symbol.make("procedure-reduce-keyword-arity"), proc2691, arity2692, false, false, req_kw2693, allowed_kw2694);
  };
  var procedure_reduce_keyword_arity = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1729 = {
      '5': cl1727,
      '4': cl1728
    }[arguments.length];
    if (fixed_lam1729 !== undefined) {
      return fixed_lam1729.apply(null, arguments);
    } else {
      return M0.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [4, 5]);
  var cl1730 = function(proc2695, mask2696, req_kw2697, allowed_kw2698, name2699) {
    if (arguments.length !== 5) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return do_procedure_reduce_keyword_arity($rjs_core.Symbol.make("procedure-reduce-keyword-arity-mask"), proc2695, false, mask2696, name2699, req_kw2697, allowed_kw2698);
  };
  var cl1731 = function(proc2700, mask2701, req_kw2702, allowed_kw2703) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return do_procedure_reduce_keyword_arity($rjs_core.Symbol.make("procedure-reduce-keyword-arity-mask"), proc2700, false, mask2701, false, req_kw2702, allowed_kw2703);
  };
  var procedure_reduce_keyword_arity_mask = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1732 = {
      '5': cl1730,
      '4': cl1731
    }[arguments.length];
    if (fixed_lam1732 !== undefined) {
      return fixed_lam1732.apply(null, arguments);
    } else {
      return M0.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [4, 5]);
  var do_procedure_reduce_keyword_arity = function(who2704, proc2705, arity2706, mask2707, name2708, req_kw2709, allowed_kw2710) {
    if (arguments.length !== 7) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (okp_p(proc2705) !== false) {
      var if_res1733 = okp_ref(proc2705, 0);
    } else {
      var if_res1733 = proc2705;
    }
    var p2712 = if_res1733;
    if (arity2706 !== false) {
      var if_res1734 = M0.__rjs_quoted__.procedure_reduce_arity(p2712, arity2706);
    } else {
      var if_res1734 = M0.__rjs_quoted__.procedure_reduce_arity_mask(p2712, mask2707, name2708);
    }
    var plain_proc2711 = if_res1734;
    var sorted_p2713 = function(kws2714) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var loop2715 = function(kws2716) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M0.null_p(kws2716) !== false) {
          var if_res1737 = true;
        } else {
          if (M0.null_p(M0.cdr(kws2716)) !== false) {
            var if_res1736 = true;
          } else {
            if (M0.keyword_lt__p(M0.car(kws2716), M0.cadr(kws2716)) !== false) {
              var if_res1735 = loop2715(M0.cdr(kws2716));
            } else {
              var if_res1735 = false;
            }
            var if_res1736 = if_res1735;
          }
          var if_res1737 = if_res1736;
        }
        return if_res1737;
      };
      return loop2715(kws2714);
    };
    if (M0.list_p(req_kw2709) !== false) {
      if (M0.andmap(M0.keyword_p, req_kw2709) !== false) {
        var if_res1738 = sorted_p2713(req_kw2709);
      } else {
        var if_res1738 = false;
      }
      var if_res1739 = if_res1738;
    } else {
      var if_res1739 = false;
    }
    if (if_res1739 !== false) {
      var if_res1742 = M0.rvoid();
    } else {
      var temp1741 = $rjs_core.UString.make("(and/c (listof? keyword?) sorted? distinct?)");
      var or_part2717 = arity2706;
      if (or_part2717 !== false) {
        var if_res1740 = or_part2717;
      } else {
        var if_res1740 = mask2707;
      }
      var if_res1742 = M0.raise_argument_error(who2704, temp1741, 2, proc2705, if_res1740, req_kw2709, allowed_kw2710);
    }
    if_res1742;
    if (allowed_kw2710 !== false) {
      if (M0.list_p(allowed_kw2710) !== false) {
        if (M0.andmap(M0.keyword_p, allowed_kw2710) !== false) {
          var if_res1743 = sorted_p2713(allowed_kw2710);
        } else {
          var if_res1743 = false;
        }
        var if_res1744 = if_res1743;
      } else {
        var if_res1744 = false;
      }
      if (if_res1744 !== false) {
        var if_res1747 = M0.rvoid();
      } else {
        var temp1746 = $rjs_core.UString.make("(or/c (and/c (listof? keyword?) sorted? distinct?) #f)");
        var or_part2718 = arity2706;
        if (or_part2718 !== false) {
          var if_res1745 = or_part2718;
        } else {
          var if_res1745 = mask2707;
        }
        var if_res1747 = M0.raise_argument_error(who2704, temp1746, 3, proc2705, if_res1745, req_kw2709, allowed_kw2710);
      }
      if_res1747;
      if (subset_p(req_kw2709, allowed_kw2710) !== false) {
        var if_res1748 = M0.rvoid();
      } else {
        var if_res1748 = M0.raise_arguments_error(who2704, $rjs_core.UString.make("allowed-keyword list does not include all required keywords"), $rjs_core.UString.make("allowed-keyword list"), allowed_kw2710, $rjs_core.UString.make("required keywords"), req_kw2709);
      }
      var if_res1749 = if_res1748;
    } else {
      var if_res1749 = M0.rvoid();
    }
    if_res1749;
    var let_result1750 = procedure_keywords(proc2705);
    var old_req2719 = let_result1750.getAt(0);
    var old_allowed2720 = let_result1750.getAt(1);
    if (subset_p(old_req2719, req_kw2709) !== false) {
      var if_res1751 = M0.rvoid();
    } else {
      var if_res1751 = M0.raise_arguments_error(who2704, $rjs_core.UString.make("cannot reduce required keyword set"), $rjs_core.UString.make("required keywords"), old_req2719, $rjs_core.UString.make("requested required keywords"), req_kw2709);
    }
    if_res1751;
    if (old_allowed2720 !== false) {
      if (subset_p(req_kw2709, old_allowed2720) !== false) {
        var if_res1752 = M0.rvoid();
      } else {
        var if_res1752 = M0.raise_arguments_error(who2704, $rjs_core.UString.make("cannot require keywords not in original allowed set"), $rjs_core.UString.make("original allowed keywords"), old_allowed2720, $rjs_core.UString.make("requested required keywords"), req_kw2709);
      }
      if_res1752;
      var or_part2721 = M0.not(allowed_kw2710);
      if (or_part2721 !== false) {
        var if_res1753 = or_part2721;
      } else {
        var if_res1753 = subset_p(allowed_kw2710, old_allowed2720);
      }
      if (if_res1753 !== false) {
        var if_res1754 = M0.rvoid();
      } else {
        var if_res1754 = M0.raise_arguments_error(who2704, $rjs_core.UString.make("cannot allow keywords not in original allowed set"), $rjs_core.UString.make("original allowed keywords"), old_allowed2720, $rjs_core.UString.make("requested allowed keywords"), allowed_kw2710);
      }
      var if_res1755 = if_res1754;
    } else {
      var if_res1755 = M0.rvoid();
    }
    if_res1755;
    if (M0.null_p(allowed_kw2710) !== false) {
      var if_res1763 = plain_proc2711;
    } else {
      var or_part2723 = mask2707;
      if (or_part2723 !== false) {
        var if_res1756 = or_part2723;
      } else {
        var if_res1756 = arity__gt_mask(arity2706);
      }
      var mask2722 = if_res1756;
      var new_mask2724 = M0.arithmetic_shift(mask2722, 2);
      var kw_checker2725 = make_keyword_checker(req_kw2709, allowed_kw2710, new_mask2724);
      var proc2726 = normalize_proc(proc2705);
      var new_kw_proc2727 = M0.__rjs_quoted__.procedure_reduce_arity_mask(keyword_procedure_proc(proc2726), new_mask2724);
      if (M0.null_p(req_kw2709) !== false) {
        if (okm_p(proc2726) !== false) {
          var if_res1757 = make_optional_keyword_method;
        } else {
          var if_res1757 = make_optional_keyword_procedure;
        }
        var if_res1762 = if_res1757(kw_checker2725, new_kw_proc2727, req_kw2709, allowed_kw2710, plain_proc2711);
      } else {
        if (named_keyword_procedure_p(proc2726) !== false) {
          var if_res1760 = M0.car(keyword_procedure_name_plus_fail(proc2726));
        } else {
          var if_res1760 = false;
        }
        var or_part2728 = if_res1760;
        if (or_part2728 !== false) {
          var if_res1761 = or_part2728;
        } else {
          var if_res1761 = M0.object_name(proc2726);
        }
        var temp1759 = M0.__rjs_quoted__.procedure_reduce_arity_mask(missing_kw, M0.arithmetic_shift(mask2722, 1));
        var or_part2729 = okm_p(proc2726);
        if (or_part2729 !== false) {
          var if_res1758 = or_part2729;
        } else {
          var if_res1758 = keyword_method_p(proc2726);
        }
        var if_res1762 = make_required(if_res1761, temp1759, if_res1758, false)(kw_checker2725, new_kw_proc2727, req_kw2709, allowed_kw2710);
      }
      var if_res1763 = if_res1762;
    }
    return if_res1763;
  };
  var arity__gt_mask = function(a2730) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M0.exact_nonnegative_integer_p(a2730) !== false) {
      var if_res1769 = M0.arithmetic_shift(1, a2730);
    } else {
      if (M0.arity_at_least_p(a2730) !== false) {
        var if_res1768 = M0.__rjs_quoted__.bitwise_xor(-1, M0.sub1(M0.arithmetic_shift(1, M0.arity_at_least_value(a2730))));
      } else {
        if (M0.list_p(a2730) !== false) {
          var loop2731 = function(mask2732, l2733) {
            if (arguments.length !== 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (M0.null_p(l2733) !== false) {
              var if_res1766 = mask2732;
            } else {
              var a2734 = M0.car(l2733);
              var or_part2735 = M0.exact_nonnegative_integer_p(a2734);
              if (or_part2735 !== false) {
                var if_res1764 = or_part2735;
              } else {
                var if_res1764 = M0.arity_at_least_p(a2734);
              }
              if (if_res1764 !== false) {
                var if_res1765 = loop2731(M0.__rjs_quoted__.bitwise_ior(mask2732, arity__gt_mask(a2734)), M0.cdr(l2733));
              } else {
                var if_res1765 = false;
              }
              var if_res1766 = if_res1765;
            }
            return if_res1766;
          };
          var if_res1767 = loop2731(0, a2730);
        } else {
          var if_res1767 = false;
        }
        var if_res1768 = if_res1767;
      }
      var if_res1769 = if_res1768;
    }
    return if_res1769;
  };
  var cl1770 = function(proc2737, arity2738, name2739) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M0.procedure_p(proc2737) !== false) {
      var let_result1773 = procedure_keywords(proc2737);
      var req2740 = let_result1773.getAt(0);
      var allows2741 = let_result1773.getAt(1);
      if (M0.pair_p(req2740) !== false) {
        var if_res1774 = M0.not(M0.null_p(arity2738));
      } else {
        var if_res1774 = false;
      }
      var if_res1775 = if_res1774;
    } else {
      var if_res1775 = false;
    }
    if (if_res1775 !== false) {
      var if_res1777 = M0.raise_arguments_error($rjs_core.Symbol.make("procedure-reduce-arity"), $rjs_core.UString.make("procedure has required keyword arguments"), $rjs_core.UString.make("procedure"), proc2737);
    } else {
      if (okm_p(proc2737) !== false) {
        var if_res1776 = M0.__rjs_quoted__.procedure__gt_method(proc2737);
      } else {
        var if_res1776 = proc2737;
      }
      var if_res1777 = M0.__rjs_quoted__.procedure_reduce_arity(if_res1776, arity2738, name2739);
    }
    return if_res1777;
  };
  var cl1771 = function(proc2742, arity2743) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return new_procedure_reduce_arity(proc2742, arity2743, false);
  };
  var procedure_reduce_arity2736 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1772 = {
      '3': cl1770,
      '2': cl1771
    }[arguments.length];
    if (fixed_lam1772 !== undefined) {
      return fixed_lam1772.apply(null, arguments);
    } else {
      return M0.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var new_procedure_reduce_arity = procedure_reduce_arity2736;
  var cl1778 = function(proc2745, mask2746, name2747) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M0.procedure_p(proc2745) !== false) {
      var let_result1781 = procedure_keywords(proc2745);
      var req2748 = let_result1781.getAt(0);
      var allows2749 = let_result1781.getAt(1);
      if (M0.pair_p(req2748) !== false) {
        var if_res1782 = M0.not(M0.eqv_p(mask2746, 0));
      } else {
        var if_res1782 = false;
      }
      var if_res1783 = if_res1782;
    } else {
      var if_res1783 = false;
    }
    if (if_res1783 !== false) {
      var if_res1785 = M0.raise_arguments_error($rjs_core.Symbol.make("procedure-reduce-arity"), $rjs_core.UString.make("procedure has required keyword arguments"), $rjs_core.UString.make("procedure"), proc2745);
    } else {
      if (okm_p(proc2745) !== false) {
        var if_res1784 = M0.__rjs_quoted__.procedure__gt_method(proc2745);
      } else {
        var if_res1784 = proc2745;
      }
      var if_res1785 = M0.__rjs_quoted__.procedure_reduce_arity_mask(if_res1784, mask2746, name2747);
    }
    return if_res1785;
  };
  var cl1779 = function(proc2750, mask2751) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return new_procedure_reduce_arity_mask(proc2750, mask2751, false);
  };
  var procedure_reduce_arity2744 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1780 = {
      '3': cl1778,
      '2': cl1779
    }[arguments.length];
    if (fixed_lam1780 !== undefined) {
      return fixed_lam1780.apply(null, arguments);
    } else {
      return M0.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var new_procedure_reduce_arity_mask = procedure_reduce_arity2744;
  var procedure__gt_method2752 = function(proc2753) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var proc2754 = normalize_proc(proc2753);
    if (keyword_procedure_p(proc2754) !== false) {
      if (okm_p(proc2754) !== false) {
        var if_res1788 = proc2754;
      } else {
        if (keyword_method_p(proc2754) !== false) {
          var if_res1787 = proc2754;
        } else {
          if (okp_p(proc2754) !== false) {
            var if_res1786 = make_optional_keyword_method(keyword_procedure_checker(proc2754), keyword_procedure_proc(proc2754), keyword_procedure_required(proc2754), keyword_procedure_allowed(proc2754), okp_ref(proc2754, 0));
          } else {
            var name_plus_fail2755 = keyword_procedure_name_plus_fail(proc2754);
            var mk2756 = make_required(M0.car(name_plus_fail2755), M0.cdr(name_plus_fail2755), true, false);
            var if_res1786 = mk2756(keyword_procedure_checker(proc2754), keyword_procedure_proc(proc2754), keyword_procedure_required(proc2754), keyword_procedure_allowed(proc2754));
          }
          var if_res1787 = if_res1786;
        }
        var if_res1788 = if_res1787;
      }
      var if_res1789 = if_res1788;
    } else {
      var if_res1789 = M0.__rjs_quoted__.procedure__gt_method(proc2754);
    }
    return if_res1789;
  };
  var new_procedure__gt_method = procedure__gt_method2752;
  var procedure_rename2757 = function(proc2758, name2759) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (keyword_procedure_p(proc2758) !== false) {
      var if_res1790 = M0.symbol_p(name2759);
    } else {
      var if_res1790 = false;
    }
    if (M0.not(if_res1790) !== false) {
      var if_res1793 = M0.__rjs_quoted__.procedure_rename(proc2758, name2759);
    } else {
      if (okp_p(proc2758) !== false) {
        if (okm_p(proc2758) !== false) {
          var if_res1791 = make_optional_keyword_method;
        } else {
          var if_res1791 = make_optional_keyword_procedure;
        }
        var if_res1792 = if_res1791(keyword_procedure_checker(proc2758), keyword_procedure_proc(proc2758), keyword_procedure_required(proc2758), keyword_procedure_allowed(proc2758), M0.__rjs_quoted__.procedure_rename(okp_ref(proc2758, 0), name2759));
      } else {
        var name_plus_fail2760 = keyword_procedure_name_plus_fail(proc2758);
        var mk2761 = make_required(name2759, M0.cdr(name_plus_fail2760), keyword_method_p(proc2758), false);
        var if_res1792 = mk2761(keyword_procedure_checker(proc2758), keyword_procedure_proc(proc2758), keyword_procedure_required(proc2758), keyword_procedure_allowed(proc2758));
      }
      var if_res1793 = if_res1792;
    }
    return if_res1793;
  };
  var new_procedure_rename = procedure_rename2757;
  var chaperone_procedure2762 = $rjs_core.attachProcedureArity(function(proc2763, wrap_proc2764) {
    for (var props27651794 = [],
        $__3 = 2; $__3 < arguments.length; $__3++)
      props27651794[$__3 - 2] = arguments[$__3];
    if (arguments.length < 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var props2765 = $rjs_core.Pair.listFromArray(props27651794);
    return do_chaperone_procedure(false, false, M0.__rjs_quoted__.chaperone_procedure, $rjs_core.Symbol.make("chaperone-procedure"), proc2763, wrap_proc2764, props2765);
  });
  var new_chaperone_procedure = chaperone_procedure2762;
  var unsafe_chaperone_procedure2766 = $rjs_core.attachProcedureArity(function(proc2767, wrap_proc2768) {
    for (var props27691795 = [],
        $__4 = 2; $__4 < arguments.length; $__4++)
      props27691795[$__4 - 2] = arguments[$__4];
    if (arguments.length < 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var props2769 = $rjs_core.Pair.listFromArray(props27691795);
    return do_unsafe_chaperone_procedure(M1.__rjs_quoted__.unsafe_chaperone_procedure, $rjs_core.Symbol.make("unsafe-chaperone-procedure"), proc2767, wrap_proc2768, props2769);
  });
  var new_unsafe_chaperone_procedure = unsafe_chaperone_procedure2766;
  var impersonate_procedure2770 = $rjs_core.attachProcedureArity(function(proc2771, wrap_proc2772) {
    for (var props27731796 = [],
        $__5 = 2; $__5 < arguments.length; $__5++)
      props27731796[$__5 - 2] = arguments[$__5];
    if (arguments.length < 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var props2773 = $rjs_core.Pair.listFromArray(props27731796);
    return do_chaperone_procedure(true, false, M0.__rjs_quoted__.impersonate_procedure, $rjs_core.Symbol.make("impersonate-procedure"), proc2771, wrap_proc2772, props2773);
  });
  var new_impersonate_procedure = impersonate_procedure2770;
  var unsafe_impersonate_procedure2774 = $rjs_core.attachProcedureArity(function(proc2775, wrap_proc2776) {
    for (var props27771797 = [],
        $__6 = 2; $__6 < arguments.length; $__6++)
      props27771797[$__6 - 2] = arguments[$__6];
    if (arguments.length < 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var props2777 = $rjs_core.Pair.listFromArray(props27771797);
    return do_unsafe_chaperone_procedure(M1.__rjs_quoted__.unsafe_impersonate_procedure, $rjs_core.Symbol.make("unsafe-impersonate-procedure"), proc2775, wrap_proc2776, props2777);
  });
  var new_unsafe_impersonate_procedure = unsafe_impersonate_procedure2774;
  var chaperone_procedure_times_2778 = $rjs_core.attachProcedureArity(function(proc2779, wrap_proc2780) {
    for (var props27811798 = [],
        $__7 = 2; $__7 < arguments.length; $__7++)
      props27811798[$__7 - 2] = arguments[$__7];
    if (arguments.length < 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var props2781 = $rjs_core.Pair.listFromArray(props27811798);
    return do_chaperone_procedure(false, true, M0.__rjs_quoted__.chaperone_procedure_times_, $rjs_core.Symbol.make("chaperone-procedure"), proc2779, wrap_proc2780, props2781);
  });
  var new_chaperone_procedure_times_ = chaperone_procedure_times_2778;
  var impersonate_procedure_times_2782 = $rjs_core.attachProcedureArity(function(proc2783, wrap_proc2784) {
    for (var props27851799 = [],
        $__8 = 2; $__8 < arguments.length; $__8++)
      props27851799[$__8 - 2] = arguments[$__8];
    if (arguments.length < 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var props2785 = $rjs_core.Pair.listFromArray(props27851799);
    return do_chaperone_procedure(true, true, M0.__rjs_quoted__.impersonate_procedure_times_, $rjs_core.Symbol.make("impersonate-procedure"), proc2783, wrap_proc2784, props2785);
  });
  var new_impersonate_procedure_times_ = impersonate_procedure_times_2782;
  var do_chaperone_procedure = function(is_impersonator_p2786, self_arg_p2787, chaperone_procedure2788, name2789, proc2790, wrap_proc2791, props2792) {
    if (arguments.length !== 7) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var n_proc2793 = normalize_proc(proc2790);
    var n_wrap_proc2794 = normalize_proc(wrap_proc2791);
    var or_part2795 = M0.not(keyword_procedure_p(n_proc2793));
    if (or_part2795 !== false) {
      var if_res1801 = or_part2795;
    } else {
      var or_part2796 = M0.not(M0.procedure_p(wrap_proc2791));
      if (or_part2796 !== false) {
        var if_res1800 = or_part2796;
      } else {
        var if_res1800 = bad_props_p(props2792);
      }
      var if_res1801 = if_res1800;
    }
    if (if_res1801 !== false) {
      var if_res1865 = M0.apply(chaperone_procedure2788, proc2790, wrap_proc2791, props2792);
    } else {
      chaperone_arity_match_checking(self_arg_p2787, name2789, proc2790, wrap_proc2791, props2792);
      var p2798 = keyword_procedure_proc(n_wrap_proc2794);
      if (self_arg_p2787 !== false) {
        var cl1802 = $rjs_core.attachProcedureArity(function(self_proc2799, kws2800, args2801) {
          for (var rest28021807 = [],
              $__9 = 3; $__9 < arguments.length; $__9++)
            rest28021807[$__9 - 3] = arguments[$__9];
          if (arguments.length < 3) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          var rest2802 = $rjs_core.Pair.listFromArray(rest28021807);
          return M0.call_with_values(function() {
            if (arguments.length !== 0) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return M0.apply(p2798, kws2800, args2801, self_proc2799, rest2802);
          }, $rjs_core.attachProcedureArity(function() {
            for (var results28031808 = [],
                $__10 = 0; $__10 < arguments.length; $__10++)
              results28031808[$__10] = arguments[$__10];
            var results2803 = $rjs_core.Pair.listFromArray(results28031808);
            var len2804 = M0.length(results2803);
            var alen2805 = M0.length(rest2802);
            if (M0.__lt_(len2804, alen2805 + 1) !== false) {
              var if_res1809 = M0.raise_arguments_error($rjs_core.Symbol.make("keyword procedure chaperone"), $rjs_core.UString.make("wrong number of results from wrapper procedure"), $rjs_core.UString.make("expected minimum number of results"), alen2805 + 1, $rjs_core.UString.make("received number of results"), len2804, $rjs_core.UString.make("wrapper procedure"), wrap_proc2791);
            } else {
              var if_res1809 = M0.rvoid();
            }
            if_res1809;
            var num_extra2806 = len2804 - (alen2805 + 1);
            var new_args2807 = M0.list_ref(results2803, num_extra2806);
            if (M0.list_p(new_args2807) !== false) {
              var if_res1810 = M0.__eq_(M0.length(new_args2807), M0.length(args2801));
            } else {
              var if_res1810 = false;
            }
            if (if_res1810 !== false) {
              var if_res1814 = M0.rvoid();
            } else {
              var temp1813 = $rjs_core.Symbol.make("keyword procedure chaperone");
              var temp1812 = $rjs_core.UString.make("expected a list of keyword-argument values as first result~a from wrapper procedure");
              if (M0.__eq_(len2804, alen2805) !== false) {
                var if_res1811 = $rjs_core.UString.make("");
              } else {
                var if_res1811 = $rjs_core.UString.make(" (after the result-wrapper procedure or mark specifications)");
              }
              var if_res1814 = M0.raise_arguments_error(temp1813, M0.format(temp1812, if_res1811), $rjs_core.UString.make("first result"), new_args2807, $rjs_core.UString.make("wrapper procedure"), wrap_proc2791);
            }
            if_res1814;
            M0.for_each(function(kw2808, new_arg2809, arg2810) {
              if (arguments.length !== 3) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              if (is_impersonator_p2786 !== false) {
                var if_res1816 = M0.rvoid();
              } else {
                if (M0.__rjs_quoted__.chaperone_of_p(new_arg2809, arg2810) !== false) {
                  var if_res1815 = M0.rvoid();
                } else {
                  var if_res1815 = M0.raise_arguments_error($rjs_core.Symbol.make("keyword procedure chaperone"), M0.format($rjs_core.UString.make("~a keyword result is not a chaperone of original argument from chaperoning procedure"), kw2808), $rjs_core.UString.make("result"), new_arg2809, $rjs_core.UString.make("wrapper procedure"), wrap_proc2791);
                }
                var if_res1816 = if_res1815;
              }
              return if_res1816;
            }, kws2800, new_args2807, args2801);
            var tmp2811 = num_extra2806;
            if (M0.equal_p(tmp2811, 0) !== false) {
              var if_res1819 = M0.apply(M0.values, kws2800, results2803);
            } else {
              if (M0.equal_p(tmp2811, 1) !== false) {
                var if_res1818 = M0.apply(M0.values, M0.car(results2803), kws2800, M0.cdr(results2803));
              } else {
                var loop2812 = function(results2813, c2814) {
                  if (arguments.length !== 2) {
                    throw $rjs_core.racketContractError("arity mismatch");
                  } else {}
                  if (M0.zero_p(c2814) !== false) {
                    var if_res1817 = M0.cons(kws2800, results2813);
                  } else {
                    var if_res1817 = M0.cons(M0.car(results2813), loop2812(M0.cdr(results2813), M0.sub1(c2814)));
                  }
                  return if_res1817;
                };
                var if_res1818 = M0.apply(M0.values, loop2812(results2803, num_extra2806));
              }
              var if_res1819 = if_res1818;
            }
            return if_res1819;
          }));
        });
        var cl1803 = $rjs_core.attachProcedureArity(function() {
          for (var other28151820 = [],
              $__10 = 0; $__10 < arguments.length; $__10++)
            other28151820[$__10] = arguments[$__10];
          var other2815 = $rjs_core.Pair.listFromArray(other28151820);
          return M0.error($rjs_core.UString.make("shouldn't get here"));
        });
        var if_res1840 = $rjs_core.attachProcedureArity(function() {
          var fixed_lam1804 = {}[arguments.length];
          if (fixed_lam1804 !== undefined) {
            return fixed_lam1804.apply(null, arguments);
          } else {
            if (M0.__gt__eq_(cl1802.length, 1) !== false) {
              var if_res1806 = cl1802.apply(null, arguments);
            } else {
              if (true !== false) {
                var if_res1805 = cl1803.apply(null, arguments);
              } else {
                var if_res1805 = M0.error($rjs_core.UString.make("case-lambda: invalid case"));
              }
              var if_res1806 = if_res1805;
            }
            return if_res1806;
          }
        }, [M0.make_arity_at_least(0)]);
      } else {
        var cl1821 = $rjs_core.attachProcedureArity(function(kws2816, args2817) {
          for (var rest28181826 = [],
              $__11 = 2; $__11 < arguments.length; $__11++)
            rest28181826[$__11 - 2] = arguments[$__11];
          if (arguments.length < 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          var rest2818 = $rjs_core.Pair.listFromArray(rest28181826);
          return M0.call_with_values(function() {
            if (arguments.length !== 0) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return M0.apply(p2798, kws2816, args2817, rest2818);
          }, $rjs_core.attachProcedureArity(function() {
            for (var results28191827 = [],
                $__12 = 0; $__12 < arguments.length; $__12++)
              results28191827[$__12] = arguments[$__12];
            var results2819 = $rjs_core.Pair.listFromArray(results28191827);
            var len2820 = M0.length(results2819);
            var alen2821 = M0.length(rest2818);
            if (M0.__lt_(len2820, alen2821 + 1) !== false) {
              var if_res1828 = M0.raise_arguments_error($rjs_core.Symbol.make("keyword procedure chaperone"), $rjs_core.UString.make("wrong number of results from wrapper procedure"), $rjs_core.UString.make("expected minimum number of results"), alen2821 + 1, $rjs_core.UString.make("received number of results"), len2820, $rjs_core.UString.make("wrapper procedure"), wrap_proc2791);
            } else {
              var if_res1828 = M0.rvoid();
            }
            if_res1828;
            var num_extra2822 = len2820 - (alen2821 + 1);
            var new_args2823 = M0.list_ref(results2819, num_extra2822);
            if (M0.list_p(new_args2823) !== false) {
              var if_res1829 = M0.__eq_(M0.length(new_args2823), M0.length(args2817));
            } else {
              var if_res1829 = false;
            }
            if (if_res1829 !== false) {
              var if_res1833 = M0.rvoid();
            } else {
              var temp1832 = $rjs_core.Symbol.make("keyword procedure chaperone");
              var temp1831 = $rjs_core.UString.make("expected a list of keyword-argument values as first result~a from wrapper procedure");
              if (M0.__eq_(len2820, alen2821) !== false) {
                var if_res1830 = $rjs_core.UString.make("");
              } else {
                var if_res1830 = $rjs_core.UString.make(" (after the result-wrapper procedure or mark specifications)");
              }
              var if_res1833 = M0.raise_arguments_error(temp1832, M0.format(temp1831, if_res1830), $rjs_core.UString.make("first result"), new_args2823, $rjs_core.UString.make("wrapper procedure"), wrap_proc2791);
            }
            if_res1833;
            M0.for_each(function(kw2824, new_arg2825, arg2826) {
              if (arguments.length !== 3) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              if (is_impersonator_p2786 !== false) {
                var if_res1835 = M0.rvoid();
              } else {
                if (M0.__rjs_quoted__.chaperone_of_p(new_arg2825, arg2826) !== false) {
                  var if_res1834 = M0.rvoid();
                } else {
                  var if_res1834 = M0.raise_arguments_error($rjs_core.Symbol.make("keyword procedure chaperone"), M0.format($rjs_core.UString.make("~a keyword result is not a chaperone of original argument from chaperoning procedure"), kw2824), $rjs_core.UString.make("result"), new_arg2825, $rjs_core.UString.make("wrapper procedure"), wrap_proc2791);
                }
                var if_res1835 = if_res1834;
              }
              return if_res1835;
            }, kws2816, new_args2823, args2817);
            var tmp2827 = num_extra2822;
            if (M0.equal_p(tmp2827, 0) !== false) {
              var if_res1838 = M0.apply(M0.values, kws2816, results2819);
            } else {
              if (M0.equal_p(tmp2827, 1) !== false) {
                var if_res1837 = M0.apply(M0.values, M0.car(results2819), kws2816, M0.cdr(results2819));
              } else {
                var loop2828 = function(results2829, c2830) {
                  if (arguments.length !== 2) {
                    throw $rjs_core.racketContractError("arity mismatch");
                  } else {}
                  if (M0.zero_p(c2830) !== false) {
                    var if_res1836 = M0.cons(kws2816, results2829);
                  } else {
                    var if_res1836 = M0.cons(M0.car(results2829), loop2828(M0.cdr(results2829), M0.sub1(c2830)));
                  }
                  return if_res1836;
                };
                var if_res1837 = M0.apply(M0.values, loop2828(results2819, num_extra2822));
              }
              var if_res1838 = if_res1837;
            }
            return if_res1838;
          }));
        });
        var cl1822 = $rjs_core.attachProcedureArity(function() {
          for (var other28311839 = [],
              $__12 = 0; $__12 < arguments.length; $__12++)
            other28311839[$__12] = arguments[$__12];
          var other2831 = $rjs_core.Pair.listFromArray(other28311839);
          return M0.error($rjs_core.UString.make("shouldn't get here"));
        });
        var if_res1840 = $rjs_core.attachProcedureArity(function() {
          var fixed_lam1823 = {}[arguments.length];
          if (fixed_lam1823 !== undefined) {
            return fixed_lam1823.apply(null, arguments);
          } else {
            if (M0.__gt__eq_(cl1821.length, 1) !== false) {
              var if_res1825 = cl1821.apply(null, arguments);
            } else {
              if (true !== false) {
                var if_res1824 = cl1822.apply(null, arguments);
              } else {
                var if_res1824 = M0.error($rjs_core.UString.make("case-lambda: invalid case"));
              }
              var if_res1825 = if_res1824;
            }
            return if_res1825;
          }
        }, [M0.make_arity_at_least(0)]);
      }
      var kw_chaperone2797 = if_res1840;
      var wrap2834 = function(proc2835, n_proc2836) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M0.not(M0.eq_p(n_proc2836, proc2835)) !== false) {
          var if_res1841 = new_procedure_p(proc2835);
        } else {
          var if_res1841 = false;
        }
        if (if_res1841 !== false) {
          var v2837 = new_procedure_ref(proc2835);
          if (M0.exact_integer_p(v2837) !== false) {
            var acc2838 = procedure_accessor_ref(proc2835);
            var if_res1857 = M0.values(M0.__rjs_quoted__.chaperone_struct(proc2835, acc2838, function(self2839, sub_proc2840) {
              if (arguments.length !== 2) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              var let_result1842 = wrap2834(sub_proc2840, normalize_proc(sub_proc2840));
              var f2841 = let_result1842.getAt(0);
              var acc2842 = let_result1842.getAt(1);
              return f2841;
            }), acc2838);
          } else {
            if (is_impersonator_p2786 !== false) {
              var if_res1856 = M0.__rjs_quoted__.impersonate_struct;
            } else {
              var if_res1856 = M0.__rjs_quoted__.chaperone_struct;
            }
            if (okp_p(n_proc2836) !== false) {
              var if_res1855 = chaperone_procedure2788(proc2835, wrap_proc2791);
            } else {
              var if_res1855 = proc2835;
            }
            var new_kw_proc2843 = if_res1856(if_res1855, new_procedure_ref, function(self2844, proc2845) {
              if (arguments.length !== 2) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              if (is_impersonator_p2786 !== false) {
                var if_res1854 = new_impersonate_procedure;
              } else {
                var if_res1854 = new_chaperone_procedure;
              }
              if (self_arg_p2787 !== false) {
                var if_res1853 = $rjs_core.attachProcedureArity(function(proc_self2846, kws2847, kw_args2848, self2849) {
                  for (var args28501843 = [],
                      $__13 = 4; $__13 < arguments.length; $__13++)
                    args28501843[$__13 - 4] = arguments[$__13];
                  if (arguments.length < 4) {
                    throw $rjs_core.racketContractError("arity mismatch");
                  } else {}
                  var args2850 = $rjs_core.Pair.listFromArray(args28501843);
                  var len2851 = M0.length(args2850);
                  return M0.call_with_values(function() {
                    if (arguments.length !== 0) {
                      throw $rjs_core.racketContractError("arity mismatch");
                    } else {}
                    return M0.apply(kw_chaperone2797, proc_self2846, kws2847, kw_args2848, args2850);
                  }, $rjs_core.attachProcedureArity(function() {
                    for (var results28521844 = [],
                        $__14 = 0; $__14 < arguments.length; $__14++)
                      results28521844[$__14] = arguments[$__14];
                    var results2852 = $rjs_core.Pair.listFromArray(results28521844);
                    var r_len2853 = M0.length(results2852);
                    var list_take2854 = function(l2855, n2856) {
                      if (arguments.length !== 2) {
                        throw $rjs_core.racketContractError("arity mismatch");
                      } else {}
                      if (M0.zero_p(n2856) !== false) {
                        var if_res1845 = M0.rnull;
                      } else {
                        var if_res1845 = M0.cons(M0.car(l2855), list_take2854(M0.cdr(l2855), M0.sub1(n2856)));
                      }
                      return if_res1845;
                    };
                    if (M0.null_p($rjs_core.Pair.makeList($rjs_core.Symbol.make("proc-self"))) !== false) {
                      var if_res1846 = M0.__eq_(r_len2853, 2 + len2851);
                    } else {
                      var if_res1846 = false;
                    }
                    if (if_res1846 !== false) {
                      var if_res1847 = M0.apply(M0.values, M0.cadr(results2852), self2849, M0.cddr(results2852));
                    } else {
                      var skip2857 = r_len2853 - len2851;
                      var if_res1847 = M0.apply(M0.values, M0.append(list_take2854(results2852, skip2857 - 2), M0.list(M0.list_ref(results2852, M0.sub1(skip2857)), self2849), M0.__rjs_quoted__.list_tail(results2852, skip2857)));
                    }
                    return if_res1847;
                  }));
                });
              } else {
                var if_res1853 = $rjs_core.attachProcedureArity(function(kws2858, kw_args2859, self2860) {
                  for (var args28611848 = [],
                      $__14 = 3; $__14 < arguments.length; $__14++)
                    args28611848[$__14 - 3] = arguments[$__14];
                  if (arguments.length < 3) {
                    throw $rjs_core.racketContractError("arity mismatch");
                  } else {}
                  var args2861 = $rjs_core.Pair.listFromArray(args28611848);
                  var len2862 = M0.length(args2861);
                  return M0.call_with_values(function() {
                    if (arguments.length !== 0) {
                      throw $rjs_core.racketContractError("arity mismatch");
                    } else {}
                    return M0.apply(kw_chaperone2797, kws2858, kw_args2859, args2861);
                  }, $rjs_core.attachProcedureArity(function() {
                    for (var results28631849 = [],
                        $__15 = 0; $__15 < arguments.length; $__15++)
                      results28631849[$__15] = arguments[$__15];
                    var results2863 = $rjs_core.Pair.listFromArray(results28631849);
                    var r_len2864 = M0.length(results2863);
                    var list_take2865 = function(l2866, n2867) {
                      if (arguments.length !== 2) {
                        throw $rjs_core.racketContractError("arity mismatch");
                      } else {}
                      if (M0.zero_p(n2867) !== false) {
                        var if_res1850 = M0.rnull;
                      } else {
                        var if_res1850 = M0.cons(M0.car(l2866), list_take2865(M0.cdr(l2866), M0.sub1(n2867)));
                      }
                      return if_res1850;
                    };
                    if (M0.null_p($rjs_core.Pair.makeList()) !== false) {
                      var if_res1851 = M0.__eq_(r_len2864, 2 + len2862);
                    } else {
                      var if_res1851 = false;
                    }
                    if (if_res1851 !== false) {
                      var if_res1852 = M0.apply(M0.values, M0.cadr(results2863), self2860, M0.cddr(results2863));
                    } else {
                      var skip2868 = r_len2864 - len2862;
                      var if_res1852 = M0.apply(M0.values, M0.append(list_take2865(results2863, skip2868 - 2), M0.list(M0.list_ref(results2863, M0.sub1(skip2868)), self2860), M0.__rjs_quoted__.list_tail(results2863, skip2868)));
                    }
                    return if_res1852;
                  }));
                });
              }
              return if_res1854(proc2845, make_keyword_procedure(if_res1853));
            });
            var if_res1857 = M0.values(new_kw_proc2843, new_procedure_ref);
          }
          var if_res1862 = if_res1857;
        } else {
          if (okp_p(n_proc2836) !== false) {
            if (is_impersonator_p2786 !== false) {
              if (okm_p(n_proc2836) !== false) {
                var if_res1858 = make_optional_keyword_method_impersonator;
              } else {
                var if_res1858 = make_optional_keyword_procedure_impersonator;
              }
              var if_res1859 = if_res1858(keyword_procedure_checker(n_proc2836), chaperone_procedure2788(keyword_procedure_proc(n_proc2836), kw_chaperone2797), keyword_procedure_required(n_proc2836), keyword_procedure_allowed(n_proc2836), chaperone_procedure2788(okp_ref(n_proc2836, 0), okp_ref(n_wrap_proc2794, 0)), n_proc2836);
            } else {
              var if_res1859 = M0.__rjs_quoted__.chaperone_struct(proc2835, keyword_procedure_proc, function(self2869, proc2870) {
                if (arguments.length !== 2) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                return chaperone_procedure2788(proc2870, kw_chaperone2797);
              }, M0.make_struct_field_accessor(okp_ref, 0), function(self2871, proc2872) {
                if (arguments.length !== 2) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                return chaperone_procedure2788(proc2872, okp_ref(n_wrap_proc2794, 0));
              });
            }
            var if_res1861 = M0.values(if_res1859, keyword_procedure_proc);
          } else {
            if (is_impersonator_p2786 !== false) {
              var name_plus_fail2873 = keyword_procedure_name_plus_fail(n_proc2836);
              var mk2874 = make_required(M0.car(name_plus_fail2873), M0.cdr(name_plus_fail2873), keyword_method_p(n_proc2836), true);
              var if_res1860 = mk2874(keyword_procedure_checker(n_proc2836), chaperone_procedure2788(keyword_procedure_proc(n_proc2836), kw_chaperone2797), keyword_procedure_required(n_proc2836), keyword_procedure_allowed(n_proc2836), n_proc2836);
            } else {
              var if_res1860 = M0.__rjs_quoted__.chaperone_struct(n_proc2836, keyword_procedure_proc, function(self2875, proc2876) {
                if (arguments.length !== 2) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                return chaperone_procedure2788(proc2876, kw_chaperone2797);
              });
            }
            var if_res1861 = M0.values(if_res1860, keyword_procedure_proc);
          }
          var if_res1862 = if_res1861;
        }
        return if_res1862;
      };
      var let_result1863 = wrap2834(proc2790, n_proc2793);
      var new_proc2832 = let_result1863.getAt(0);
      var chap_accessor2833 = let_result1863.getAt(1);
      if (M0.null_p(props2792) !== false) {
        var if_res1864 = new_proc2832;
      } else {
        var if_res1864 = M0.apply(M0.__rjs_quoted__.chaperone_struct, new_proc2832, chap_accessor2833, false, props2792);
      }
      var if_res1865 = if_res1864;
    }
    return if_res1865;
  };
  var do_unsafe_chaperone_procedure = function(unsafe_chaperone_procedure2877, name2878, proc2879, wrap_proc2880, props2881) {
    if (arguments.length !== 5) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var n_proc2882 = normalize_proc(proc2879);
    var n_wrap_proc2883 = normalize_proc(wrap_proc2880);
    var or_part2884 = M0.not(keyword_procedure_p(n_proc2882));
    if (or_part2884 !== false) {
      var if_res1867 = or_part2884;
    } else {
      var or_part2885 = M0.not(M0.procedure_p(wrap_proc2880));
      if (or_part2885 !== false) {
        var if_res1866 = or_part2885;
      } else {
        var if_res1866 = bad_props_p(props2881);
      }
      var if_res1867 = if_res1866;
    }
    if (if_res1867 !== false) {
      var if_res1868 = M0.apply(unsafe_chaperone_procedure2877, proc2879, wrap_proc2880, props2881);
    } else {
      chaperone_arity_match_checking(false, name2878, proc2879, wrap_proc2880, props2881);
      var if_res1868 = M0.apply(unsafe_chaperone_procedure2877, proc2879, wrap_proc2880, props2881);
    }
    return if_res1868;
  };
  var bad_props_p = function(props2886) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop2887 = function(props2888) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M0.null_p(props2888) !== false) {
        var if_res1871 = false;
      } else {
        if (M0.__rjs_quoted__.impersonator_property_p(M0.car(props2888)) !== false) {
          var props2889 = M0.cdr(props2888);
          var or_part2890 = M0.null_p(props2889);
          if (or_part2890 !== false) {
            var if_res1869 = or_part2890;
          } else {
            var if_res1869 = loop2887(M0.cdr(props2889));
          }
          var if_res1870 = if_res1869;
        } else {
          var if_res1870 = true;
        }
        var if_res1871 = if_res1870;
      }
      return if_res1871;
    };
    return loop2887(props2886);
  };
  var chaperone_arity_match_checking = function(self_arg_p2891, name2892, proc2893, wrap_proc2894, props2895) {
    if (arguments.length !== 5) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var a2896 = M0.procedure_arity(proc2893);
    var b2897 = M0.procedure_arity(wrap_proc2894);
    if (self_arg_p2891 !== false) {
      var if_res1872 = 1;
    } else {
      var if_res1872 = 0;
    }
    var d2898 = if_res1872;
    var let_result1873 = procedure_keywords(proc2893);
    var a_req2899 = let_result1873.getAt(0);
    var a_allow2900 = let_result1873.getAt(1);
    var let_result1874 = procedure_keywords(wrap_proc2894);
    var b_req2901 = let_result1874.getAt(0);
    var b_allow2902 = let_result1874.getAt(1);
    var includes_p2903 = function(a2904, b2905) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M0.number_p(b2905) !== false) {
        if (M0.number_p(a2904) !== false) {
          var if_res1876 = M0.__eq_(b2905, a2904 + d2898);
        } else {
          if (M0.arity_at_least_p(a2904) !== false) {
            var if_res1875 = M0.__gt__eq_(b2905, M0.arity_at_least_value(a2904) + d2898);
          } else {
            var if_res1875 = M0.ormap(function(a2906) {
              if (arguments.length !== 1) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              return includes_p2903(a2906, b2905);
            }, a2904);
          }
          var if_res1876 = if_res1875;
        }
        var if_res1880 = if_res1876;
      } else {
        if (M0.arity_at_least_p(b2905) !== false) {
          if (M0.number_p(a2904) !== false) {
            var if_res1878 = false;
          } else {
            if (M0.arity_at_least_p(a2904) !== false) {
              var if_res1877 = M0.__gt__eq_(M0.arity_at_least_value(b2905), M0.arity_at_least_value(a2904) + d2898);
            } else {
              var if_res1877 = M0.ormap(function(a2907) {
                if (arguments.length !== 1) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                return includes_p2903(b2905, a2907);
              }, a2904);
            }
            var if_res1878 = if_res1877;
          }
          var if_res1879 = if_res1878;
        } else {
          var if_res1879 = M0.andmap(function(b2908) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return includes_p2903(a2904, b2908);
          }, b2905);
        }
        var if_res1880 = if_res1879;
      }
      return if_res1880;
    };
    if (includes_p2903(b2897, a2896) !== false) {
      var if_res1881 = M0.rvoid();
    } else {
      var if_res1881 = M0.apply(M0.__rjs_quoted__.chaperone_procedure, proc2893, wrap_proc2894, props2895);
    }
    if_res1881;
    if (subset_p(b_req2901, a_req2899) !== false) {
      var if_res1882 = M0.rvoid();
    } else {
      var if_res1882 = M0.raise_arguments_error(name2892, $rjs_core.UString.make("wrapper procedure requires more keywords than original procedure"), $rjs_core.UString.make("wrapper procedure"), wrap_proc2894, $rjs_core.UString.make("original procedure"), proc2893);
    }
    if_res1882;
    var or_part2909 = M0.not(b_allow2902);
    if (or_part2909 !== false) {
      var if_res1884 = or_part2909;
    } else {
      if (a_allow2900 !== false) {
        var if_res1883 = subset_p(a_allow2900, b_allow2902);
      } else {
        var if_res1883 = false;
      }
      var if_res1884 = if_res1883;
    }
    if (if_res1884 !== false) {
      var if_res1885 = M0.rvoid();
    } else {
      var if_res1885 = M0.raise_arguments_error(name2892, $rjs_core.UString.make("wrapper procedure does not accept all keywords of original procedure"), $rjs_core.UString.make("wrapper procedure"), wrap_proc2894, $rjs_core.UString.make("original procedure"), proc2893);
    }
    if_res1885;
    return M0.rvoid();
  };
  var normalize_proc = function(proc2910) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (keyword_procedure_p(proc2910) !== false) {
      var if_res1893 = proc2910;
    } else {
      if (new_procedure_p(proc2910) !== false) {
        var let_result1886 = procedure_keywords(proc2910);
        var req_kws2911 = let_result1886.getAt(0);
        var allowed_kws2912 = let_result1886.getAt(1);
        if (M0.null_p(allowed_kws2912) !== false) {
          var if_res1891 = proc2910;
        } else {
          var if_res1891 = make_optional_keyword_procedure(function(given_kws2913, given_argc2914) {
            if (arguments.length !== 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (M0.procedure_arity_includes_p(proc2910, given_argc2914 - 2, true) !== false) {
              var or_part2915 = M0.not(allowed_kws2912);
              if (or_part2915 !== false) {
                var if_res1888 = or_part2915;
              } else {
                var if_res1888 = subset_p(given_kws2913, allowed_kws2912);
              }
              if (if_res1888 !== false) {
                var if_res1889 = subset_p(req_kws2911, given_kws2913);
              } else {
                var if_res1889 = false;
              }
              var if_res1890 = if_res1889;
            } else {
              var if_res1890 = false;
            }
            return if_res1890;
          }, $rjs_core.attachProcedureArity(function(kws2916, kw_args2917) {
            for (var vals29181887 = [],
                $__9 = 2; $__9 < arguments.length; $__9++)
              vals29181887[$__9 - 2] = arguments[$__9];
            if (arguments.length < 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            var vals2918 = $rjs_core.Pair.listFromArray(vals29181887);
            return keyword_apply(proc2910, kws2916, kw_args2917, vals2918);
          }), req_kws2911, allowed_kws2912, proc2910);
        }
        var if_res1892 = if_res1891;
      } else {
        var if_res1892 = proc2910;
      }
      var if_res1893 = if_res1892;
    }
    return if_res1893;
  };
  var __rjs_quoted__ = {};
  __rjs_quoted__.keyword_procedure_extract = keyword_procedure_extract;
  __rjs_quoted__.struct_keyword_method_by_arity_error = struct_keyword_method_by_arity_error;
  __rjs_quoted__.missing_kw = missing_kw;
  __rjs_quoted__.make_optional_keyword_method = make_optional_keyword_method;
  __rjs_quoted__.prop_named_keyword_procedure = prop_named_keyword_procedure;
  __rjs_quoted__.struct_keyword_procedure_by_arity_error = struct_keyword_procedure_by_arity_error;
  __rjs_quoted__.subsets_p = subsets_p;
  __rjs_quoted__.struct_keyword_procedure = struct_keyword_procedure;
  __rjs_quoted__.subset_p = subset_p;
  __rjs_quoted__.make_optional_keyword_procedure = make_optional_keyword_procedure;
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get new_impersonate_procedure_times_() {
      return new_impersonate_procedure_times_;
    },
    get new_chaperone_procedure_times_() {
      return new_chaperone_procedure_times_;
    },
    get new_impersonate_procedure() {
      return new_impersonate_procedure;
    },
    get new_chaperone_procedure() {
      return new_chaperone_procedure;
    },
    get new_procedure_rename() {
      return new_procedure_rename;
    },
    get new_procedure__gt_method() {
      return new_procedure__gt_method;
    },
    get new_prop_procedure() {
      return new_prop_procedure;
    },
    get procedure_reduce_keyword_arity_mask() {
      return procedure_reduce_keyword_arity_mask;
    },
    get procedure_reduce_keyword_arity() {
      return procedure_reduce_keyword_arity;
    },
    get new_procedure_reduce_arity_mask() {
      return new_procedure_reduce_arity_mask;
    },
    get new_procedure_reduce_arity() {
      return new_procedure_reduce_arity;
    },
    get procedure_keywords() {
      return procedure_keywords;
    },
    get keyword_apply() {
      return keyword_apply;
    },
    get make_keyword_procedure() {
      return make_keyword_procedure;
    }
  };
})();
var $__collects_47_racket_47_private_47_map_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/racket/private/map.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__collects_47_racket_47_private_47_kw_46_rkt_46_js__;
  var M1 = $__runtime_47_kernel_46_rkt_46_js__;
  var M2 = $__runtime_47_core_46_rkt_46_js__;
  var cl947 = function(f1607, l1608) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.variable_reference_from_unsafe_p(M2.__rjs_quoted__.___variable_reference) !== false) {
      var if_res954 = true;
    } else {
      if (M1.procedure_p(f1607) !== false) {
        if (M1.procedure_arity_includes_p(f1607, 1) !== false) {
          var if_res952 = M1.list_p(l1608);
        } else {
          var if_res952 = false;
        }
        var if_res953 = if_res952;
      } else {
        var if_res953 = false;
      }
      var if_res954 = if_res953;
    }
    if (if_res954 !== false) {
      var loop1609 = function(l1610) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M1.null_p(l1610) !== false) {
          var if_res955 = M1.rnull;
        } else {
          var r1611 = M1.cdr(l1610);
          var if_res955 = M1.cons(f1607(M1.car(l1610)), loop1609(r1611));
        }
        return if_res955;
      };
      var if_res956 = loop1609(l1608);
    } else {
      var if_res956 = gen_map(f1607, M1.list(l1608));
    }
    return if_res956;
  };
  var cl948 = function(f1612, l11613, l21614) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.variable_reference_from_unsafe_p(M2.__rjs_quoted__.___variable_reference) !== false) {
      var if_res961 = true;
    } else {
      if (M1.procedure_p(f1612) !== false) {
        if (M1.procedure_arity_includes_p(f1612, 2) !== false) {
          if (M1.list_p(l11613) !== false) {
            if (M1.list_p(l21614) !== false) {
              var if_res957 = M1.__eq_(M1.length(l11613), M1.length(l21614));
            } else {
              var if_res957 = false;
            }
            var if_res958 = if_res957;
          } else {
            var if_res958 = false;
          }
          var if_res959 = if_res958;
        } else {
          var if_res959 = false;
        }
        var if_res960 = if_res959;
      } else {
        var if_res960 = false;
      }
      var if_res961 = if_res960;
    }
    if (if_res961 !== false) {
      var loop1615 = function(l11616, l21617) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M1.null_p(l11616) !== false) {
          var if_res962 = M1.rnull;
        } else {
          var r11618 = M1.cdr(l11616);
          var r21619 = M1.cdr(l21617);
          var if_res962 = M1.cons(f1612(M1.car(l11616), M1.car(l21617)), loop1615(r11618, r21619));
        }
        return if_res962;
      };
      var if_res963 = loop1615(l11613, l21614);
    } else {
      var if_res963 = gen_map(f1612, M1.list(l11613, l21614));
    }
    return if_res963;
  };
  var cl949 = $rjs_core.attachProcedureArity(function(f1620, l1621) {
    for (var args1622964 = [],
        $__1 = 2; $__1 < arguments.length; $__1++)
      args1622964[$__1 - 2] = arguments[$__1];
    if (arguments.length < 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var args1622 = $rjs_core.Pair.listFromArray(args1622964);
    return gen_map(f1620, M1.cons(l1621, args1622));
  });
  var map1606 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam950 = {
      '2': cl947,
      '3': cl948
    }[arguments.length];
    if (fixed_lam950 !== undefined) {
      return fixed_lam950.apply(null, arguments);
    } else {
      if (M1.__gt__eq_(cl949.length, 1) !== false) {
        var if_res951 = cl949.apply(null, arguments);
      } else {
        var if_res951 = M1.error($rjs_core.UString.make("case-lambda: invalid case"));
      }
      return if_res951;
    }
  }, [M1.make_arity_at_least(2)]);
  var map2 = map1606;
  var cl965 = function(f1624, l1625) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.variable_reference_from_unsafe_p(M2.__rjs_quoted__.___variable_reference) !== false) {
      var if_res972 = true;
    } else {
      if (M1.procedure_p(f1624) !== false) {
        if (M1.procedure_arity_includes_p(f1624, 1) !== false) {
          var if_res970 = M1.list_p(l1625);
        } else {
          var if_res970 = false;
        }
        var if_res971 = if_res970;
      } else {
        var if_res971 = false;
      }
      var if_res972 = if_res971;
    }
    if (if_res972 !== false) {
      var loop1626 = function(l1627) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M1.null_p(l1627) !== false) {
          var if_res973 = M1.rvoid();
        } else {
          var r1628 = M1.cdr(l1627);
          f1624(M1.car(l1627));
          var if_res973 = loop1626(r1628);
        }
        return if_res973;
      };
      var if_res974 = loop1626(l1625);
    } else {
      var if_res974 = gen_for_each(f1624, M1.list(l1625));
    }
    return if_res974;
  };
  var cl966 = function(f1629, l11630, l21631) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.variable_reference_from_unsafe_p(M2.__rjs_quoted__.___variable_reference) !== false) {
      var if_res979 = true;
    } else {
      if (M1.procedure_p(f1629) !== false) {
        if (M1.procedure_arity_includes_p(f1629, 2) !== false) {
          if (M1.list_p(l11630) !== false) {
            if (M1.list_p(l21631) !== false) {
              var if_res975 = M1.__eq_(M1.length(l11630), M1.length(l21631));
            } else {
              var if_res975 = false;
            }
            var if_res976 = if_res975;
          } else {
            var if_res976 = false;
          }
          var if_res977 = if_res976;
        } else {
          var if_res977 = false;
        }
        var if_res978 = if_res977;
      } else {
        var if_res978 = false;
      }
      var if_res979 = if_res978;
    }
    if (if_res979 !== false) {
      var loop1632 = function(l11633, l21634) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M1.null_p(l11633) !== false) {
          var if_res980 = M1.rvoid();
        } else {
          var r11635 = M1.cdr(l11633);
          var r21636 = M1.cdr(l21634);
          f1629(M1.car(l11633), M1.car(l21634));
          var if_res980 = loop1632(r11635, r21636);
        }
        return if_res980;
      };
      var if_res981 = loop1632(l11630, l21631);
    } else {
      var if_res981 = gen_for_each(f1629, M1.list(l11630, l21631));
    }
    return if_res981;
  };
  var cl967 = $rjs_core.attachProcedureArity(function(f1637, l1638) {
    for (var args1639982 = [],
        $__2 = 2; $__2 < arguments.length; $__2++)
      args1639982[$__2 - 2] = arguments[$__2];
    if (arguments.length < 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var args1639 = $rjs_core.Pair.listFromArray(args1639982);
    return gen_for_each(f1637, M1.cons(l1638, args1639));
  });
  var for_each1623 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam968 = {
      '2': cl965,
      '3': cl966
    }[arguments.length];
    if (fixed_lam968 !== undefined) {
      return fixed_lam968.apply(null, arguments);
    } else {
      if (M1.__gt__eq_(cl967.length, 1) !== false) {
        var if_res969 = cl967.apply(null, arguments);
      } else {
        var if_res969 = M1.error($rjs_core.UString.make("case-lambda: invalid case"));
      }
      return if_res969;
    }
  }, [M1.make_arity_at_least(2)]);
  var for_each2 = for_each1623;
  var cl983 = function(f1641, l1642) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.variable_reference_from_unsafe_p(M2.__rjs_quoted__.___variable_reference) !== false) {
      var if_res990 = true;
    } else {
      if (M1.procedure_p(f1641) !== false) {
        if (M1.procedure_arity_includes_p(f1641, 1) !== false) {
          var if_res988 = M1.list_p(l1642);
        } else {
          var if_res988 = false;
        }
        var if_res989 = if_res988;
      } else {
        var if_res989 = false;
      }
      var if_res990 = if_res989;
    }
    if (if_res990 !== false) {
      if (M1.null_p(l1642) !== false) {
        var if_res993 = true;
      } else {
        var loop1643 = function(l1644) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M1.null_p(M1.cdr(l1644)) !== false) {
            var if_res992 = f1641(M1.car(l1644));
          } else {
            var r1645 = M1.cdr(l1644);
            if (f1641(M1.car(l1644)) !== false) {
              var if_res991 = loop1643(r1645);
            } else {
              var if_res991 = false;
            }
            var if_res992 = if_res991;
          }
          return if_res992;
        };
        var if_res993 = loop1643(l1642);
      }
      var if_res994 = if_res993;
    } else {
      var if_res994 = gen_andmap(f1641, M1.list(l1642));
    }
    return if_res994;
  };
  var cl984 = function(f1646, l11647, l21648) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.variable_reference_from_unsafe_p(M2.__rjs_quoted__.___variable_reference) !== false) {
      var if_res999 = true;
    } else {
      if (M1.procedure_p(f1646) !== false) {
        if (M1.procedure_arity_includes_p(f1646, 2) !== false) {
          if (M1.list_p(l11647) !== false) {
            if (M1.list_p(l21648) !== false) {
              var if_res995 = M1.__eq_(M1.length(l11647), M1.length(l21648));
            } else {
              var if_res995 = false;
            }
            var if_res996 = if_res995;
          } else {
            var if_res996 = false;
          }
          var if_res997 = if_res996;
        } else {
          var if_res997 = false;
        }
        var if_res998 = if_res997;
      } else {
        var if_res998 = false;
      }
      var if_res999 = if_res998;
    }
    if (if_res999 !== false) {
      if (M1.null_p(l11647) !== false) {
        var if_res1002 = true;
      } else {
        var loop1649 = function(l11650, l21651) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M1.null_p(M1.cdr(l11650)) !== false) {
            var if_res1001 = f1646(M1.car(l11650), M1.car(l21651));
          } else {
            var r11652 = M1.cdr(l11650);
            var r21653 = M1.cdr(l21651);
            if (f1646(M1.car(l11650), M1.car(l21651)) !== false) {
              var if_res1000 = loop1649(r11652, r21653);
            } else {
              var if_res1000 = false;
            }
            var if_res1001 = if_res1000;
          }
          return if_res1001;
        };
        var if_res1002 = loop1649(l11647, l21648);
      }
      var if_res1003 = if_res1002;
    } else {
      var if_res1003 = gen_andmap(f1646, M1.list(l11647, l21648));
    }
    return if_res1003;
  };
  var cl985 = $rjs_core.attachProcedureArity(function(f1654, l1655) {
    for (var args16561004 = [],
        $__3 = 2; $__3 < arguments.length; $__3++)
      args16561004[$__3 - 2] = arguments[$__3];
    if (arguments.length < 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var args1656 = $rjs_core.Pair.listFromArray(args16561004);
    return gen_andmap(f1654, M1.cons(l1655, args1656));
  });
  var andmap1640 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam986 = {
      '2': cl983,
      '3': cl984
    }[arguments.length];
    if (fixed_lam986 !== undefined) {
      return fixed_lam986.apply(null, arguments);
    } else {
      if (M1.__gt__eq_(cl985.length, 1) !== false) {
        var if_res987 = cl985.apply(null, arguments);
      } else {
        var if_res987 = M1.error($rjs_core.UString.make("case-lambda: invalid case"));
      }
      return if_res987;
    }
  }, [M1.make_arity_at_least(2)]);
  var andmap2 = andmap1640;
  var cl1005 = function(f1658, l1659) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.variable_reference_from_unsafe_p(M2.__rjs_quoted__.___variable_reference) !== false) {
      var if_res1012 = true;
    } else {
      if (M1.procedure_p(f1658) !== false) {
        if (M1.procedure_arity_includes_p(f1658, 1) !== false) {
          var if_res1010 = M1.list_p(l1659);
        } else {
          var if_res1010 = false;
        }
        var if_res1011 = if_res1010;
      } else {
        var if_res1011 = false;
      }
      var if_res1012 = if_res1011;
    }
    if (if_res1012 !== false) {
      if (M1.null_p(l1659) !== false) {
        var if_res1015 = false;
      } else {
        var loop1660 = function(l1661) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M1.null_p(M1.cdr(l1661)) !== false) {
            var if_res1014 = f1658(M1.car(l1661));
          } else {
            var r1662 = M1.cdr(l1661);
            var or_part1663 = f1658(M1.car(l1661));
            if (or_part1663 !== false) {
              var if_res1013 = or_part1663;
            } else {
              var if_res1013 = loop1660(r1662);
            }
            var if_res1014 = if_res1013;
          }
          return if_res1014;
        };
        var if_res1015 = loop1660(l1659);
      }
      var if_res1016 = if_res1015;
    } else {
      var if_res1016 = gen_ormap(f1658, M1.list(l1659));
    }
    return if_res1016;
  };
  var cl1006 = function(f1664, l11665, l21666) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.variable_reference_from_unsafe_p(M2.__rjs_quoted__.___variable_reference) !== false) {
      var if_res1021 = true;
    } else {
      if (M1.procedure_p(f1664) !== false) {
        if (M1.procedure_arity_includes_p(f1664, 2) !== false) {
          if (M1.list_p(l11665) !== false) {
            if (M1.list_p(l21666) !== false) {
              var if_res1017 = M1.__eq_(M1.length(l11665), M1.length(l21666));
            } else {
              var if_res1017 = false;
            }
            var if_res1018 = if_res1017;
          } else {
            var if_res1018 = false;
          }
          var if_res1019 = if_res1018;
        } else {
          var if_res1019 = false;
        }
        var if_res1020 = if_res1019;
      } else {
        var if_res1020 = false;
      }
      var if_res1021 = if_res1020;
    }
    if (if_res1021 !== false) {
      if (M1.null_p(l11665) !== false) {
        var if_res1024 = false;
      } else {
        var loop1667 = function(l11668, l21669) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M1.null_p(M1.cdr(l11668)) !== false) {
            var if_res1023 = f1664(M1.car(l11668), M1.car(l21669));
          } else {
            var r11670 = M1.cdr(l11668);
            var r21671 = M1.cdr(l21669);
            var or_part1672 = f1664(M1.car(l11668), M1.car(l21669));
            if (or_part1672 !== false) {
              var if_res1022 = or_part1672;
            } else {
              var if_res1022 = loop1667(r11670, r21671);
            }
            var if_res1023 = if_res1022;
          }
          return if_res1023;
        };
        var if_res1024 = loop1667(l11665, l21666);
      }
      var if_res1025 = if_res1024;
    } else {
      var if_res1025 = gen_ormap(f1664, M1.list(l11665, l21666));
    }
    return if_res1025;
  };
  var cl1007 = $rjs_core.attachProcedureArity(function(f1673, l1674) {
    for (var args16751026 = [],
        $__4 = 2; $__4 < arguments.length; $__4++)
      args16751026[$__4 - 2] = arguments[$__4];
    if (arguments.length < 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var args1675 = $rjs_core.Pair.listFromArray(args16751026);
    return gen_ormap(f1673, M1.cons(l1674, args1675));
  });
  var ormap1657 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1008 = {
      '2': cl1005,
      '3': cl1006
    }[arguments.length];
    if (fixed_lam1008 !== undefined) {
      return fixed_lam1008.apply(null, arguments);
    } else {
      if (M1.__gt__eq_(cl1007.length, 1) !== false) {
        var if_res1009 = cl1007.apply(null, arguments);
      } else {
        var if_res1009 = M1.error($rjs_core.UString.make("case-lambda: invalid case"));
      }
      return if_res1009;
    }
  }, [M1.make_arity_at_least(2)]);
  var ormap2 = ormap1657;
  var check_args = function(who1676, f1677, ls1678) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.procedure_p(f1677) !== false) {
      var if_res1027 = M1.rvoid();
    } else {
      var if_res1027 = M1.raise_argument_error(who1676, $rjs_core.UString.make("procedure?"), f1677);
    }
    if_res1027;
    var loop1679 = function(prev_len1680, ls1681, i1682) {
      if (arguments.length !== 3) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M1.null_p(ls1681) !== false) {
        var if_res1031 = M1.rvoid();
      } else {
        var l1683 = M1.car(ls1681);
        if (M1.list_p(l1683) !== false) {
          var if_res1028 = M1.rvoid();
        } else {
          var if_res1028 = M1.raise_argument_error(who1676, $rjs_core.UString.make("list?"), l1683);
        }
        if_res1028;
        var len1684 = M1.length(l1683);
        if (prev_len1680 !== false) {
          var if_res1029 = M1.not(M1.__eq_(len1684, prev_len1680));
        } else {
          var if_res1029 = false;
        }
        if (if_res1029 !== false) {
          var if_res1030 = M1.raise_arguments_error(who1676, $rjs_core.UString.make("all lists must have same size"), $rjs_core.UString.make("first list length"), prev_len1680, $rjs_core.UString.make("other list length"), len1684, $rjs_core.UString.make("procedure"), f1677);
        } else {
          var if_res1030 = M1.rvoid();
        }
        if_res1030;
        var if_res1031 = loop1679(len1684, M1.cdr(ls1681), M1.add1(i1682));
      }
      return if_res1031;
    };
    loop1679(false, ls1678, 1);
    if (M1.procedure_arity_includes_p(f1677, M1.length(ls1678)) !== false) {
      var if_res1048 = M1.rvoid();
    } else {
      var let_result1032 = M0.procedure_keywords(f1677);
      var required_keywords1685 = let_result1032.getAt(0);
      var optional_keywords1686 = let_result1032.getAt(1);
      if (M1.pair_p(required_keywords1685) !== false) {
        var if_res1047 = M1.string_append($rjs_core.UString.make("argument mismatch;\n"), $rjs_core.UString.make(" the given procedure expects keyword arguments"));
      } else {
        var if_res1047 = M1.string_append($rjs_core.UString.make("argument mismatch;\n"), $rjs_core.UString.make(" the given procedure's expected number of arguments does not match"), $rjs_core.UString.make(" the given number of lists"));
      }
      var temp1046 = $rjs_core.UString.make("given procedure");
      var n1688 = M1.object_name(f1677);
      if (M1.symbol_p(n1688) !== false) {
        var if_res1043 = M1.symbol__gt_string(n1688);
      } else {
        var if_res1043 = false;
      }
      var or_part1687 = if_res1043;
      if (or_part1687 !== false) {
        var if_res1044 = or_part1687;
      } else {
        var if_res1044 = $rjs_core.UString.make("#<procedure>");
      }
      var temp1045 = M1.unquoted_printing_string(if_res1044);
      var a1689 = M1.procedure_arity(f1677);
      if (M1.pair_p(required_keywords1685) !== false) {
        var if_res1042 = M1.rnull;
      } else {
        if (M1.integer_p(a1689) !== false) {
          var if_res1041 = M1.list($rjs_core.UString.make("expected"), a1689);
        } else {
          if (M1.arity_at_least_p(a1689) !== false) {
            var if_res1040 = M1.list($rjs_core.UString.make("expected"), M1.unquoted_printing_string(M1.string_append($rjs_core.UString.make("at least "), M1.number__gt_string(M1.arity_at_least_value(a1689)))));
          } else {
            var if_res1040 = M1.rnull;
          }
          var if_res1041 = if_res1040;
        }
        var if_res1042 = if_res1041;
      }
      if (M1.pair_p(required_keywords1685) !== false) {
        var if_res1039 = M1.rnull;
      } else {
        var if_res1039 = M1.list($rjs_core.UString.make("given"), M1.length(ls1678));
      }
      if (M1.pair_p(required_keywords1685) !== false) {
        var temp1037 = $rjs_core.UString.make("required keywords");
        var loop1690 = function(kws1691) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M1.null_p(kws1691) !== false) {
            var if_res1036 = M1.rnull;
          } else {
            var if_res1036 = M1.list_times_($rjs_core.UString.make(" "), M1.string_append($rjs_core.UString.make("#:"), M1.__rjs_quoted__.keyword__gt_string(M1.car(kws1691))), loop1690(M1.cdr(kws1691)));
          }
          return if_res1036;
        };
        var if_res1038 = M1.list(temp1037, M1.unquoted_printing_string(M1.apply(M1.string_append, M1.cdr(loop1690(required_keywords1685)))));
      } else {
        var if_res1038 = M1.rnull;
      }
      var w1692 = M1.quotient(M1.error_print_width(), M1.length(ls1678));
      if (M1.__gt_(w1692, 10) !== false) {
        var temp1034 = $rjs_core.UString.make("argument lists...");
        var loop1693 = function(ls1694) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M1.null_p(ls1694) !== false) {
            var if_res1033 = M1.rnull;
          } else {
            var if_res1033 = M1.cons(M1.string_append($rjs_core.UString.make("\n   "), M1.error_value__gt_string_handler()(M1.car(ls1694), w1692)), loop1693(M1.cdr(ls1694)));
          }
          return if_res1033;
        };
        var if_res1035 = M1.list(temp1034, M1.unquoted_printing_string(M1.apply(M1.string_append, loop1693(ls1678))));
      } else {
        var if_res1035 = M1.rnull;
      }
      var if_res1048 = M1.apply(M1.raise_arguments_error, who1676, if_res1047, temp1046, temp1045, M1.append(if_res1042, if_res1039, if_res1038, if_res1035));
    }
    return if_res1048;
  };
  var gen_map = function(f1695, ls1696) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.variable_reference_from_unsafe_p(M2.__rjs_quoted__.___variable_reference) !== false) {
      var if_res1049 = true;
    } else {
      var if_res1049 = check_args($rjs_core.Symbol.make("map"), f1695, ls1696);
    }
    if_res1049;
    var loop1697 = function(ls1698) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M1.null_p(M1.car(ls1698)) !== false) {
        var if_res1050 = M1.rnull;
      } else {
        var next_ls1699 = map2(M1.cdr, ls1698);
        var if_res1050 = M1.cons(M1.apply(f1695, map2(M1.car, ls1698)), loop1697(next_ls1699));
      }
      return if_res1050;
    };
    return loop1697(ls1696);
  };
  var gen_for_each = function(f1700, ls1701) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.variable_reference_from_unsafe_p(M2.__rjs_quoted__.___variable_reference) !== false) {
      var if_res1051 = true;
    } else {
      var if_res1051 = check_args($rjs_core.Symbol.make("for-each"), f1700, ls1701);
    }
    if_res1051;
    var loop1702 = function(ls1703) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M1.null_p(M1.car(ls1703)) !== false) {
        var if_res1052 = M1.rvoid();
      } else {
        var next_ls1704 = map2(M1.cdr, ls1703);
        M1.apply(f1700, map2(M1.car, ls1703));
        var if_res1052 = loop1702(next_ls1704);
      }
      return if_res1052;
    };
    return loop1702(ls1701);
  };
  var gen_andmap = function(f1705, ls1706) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.variable_reference_from_unsafe_p(M2.__rjs_quoted__.___variable_reference) !== false) {
      var if_res1053 = true;
    } else {
      var if_res1053 = check_args($rjs_core.Symbol.make("andmap"), f1705, ls1706);
    }
    if_res1053;
    var loop1707 = function(ls1708) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M1.null_p(M1.car(ls1708)) !== false) {
        var if_res1056 = true;
      } else {
        if (M1.null_p(M1.cdar(ls1708)) !== false) {
          var if_res1055 = M1.apply(f1705, map2(M1.car, ls1708));
        } else {
          var next_ls1709 = map2(M1.cdr, ls1708);
          if (M1.apply(f1705, map2(M1.car, ls1708)) !== false) {
            var if_res1054 = loop1707(next_ls1709);
          } else {
            var if_res1054 = false;
          }
          var if_res1055 = if_res1054;
        }
        var if_res1056 = if_res1055;
      }
      return if_res1056;
    };
    return loop1707(ls1706);
  };
  var gen_ormap = function(f1710, ls1711) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.variable_reference_from_unsafe_p(M2.__rjs_quoted__.___variable_reference) !== false) {
      var if_res1057 = true;
    } else {
      var if_res1057 = check_args($rjs_core.Symbol.make("ormap"), f1710, ls1711);
    }
    if_res1057;
    var loop1712 = function(ls1713) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M1.null_p(M1.car(ls1713)) !== false) {
        var if_res1060 = false;
      } else {
        if (M1.null_p(M1.cdar(ls1713)) !== false) {
          var if_res1059 = M1.apply(f1710, map2(M1.car, ls1713));
        } else {
          var next_ls1714 = map2(M1.cdr, ls1713);
          var or_part1715 = M1.apply(f1710, map2(M1.car, ls1713));
          if (or_part1715 !== false) {
            var if_res1058 = or_part1715;
          } else {
            var if_res1058 = loop1712(next_ls1714);
          }
          var if_res1059 = if_res1058;
        }
        var if_res1060 = if_res1059;
      }
      return if_res1060;
    };
    return loop1712(ls1711);
  };
  M1.rvoid();
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get ormap() {
      return ormap2;
    },
    get andmap() {
      return andmap2;
    },
    get for_each() {
      return for_each2;
    },
    get map() {
      return map2;
    }
  };
})();
var $__collects_47_racket_47_private_47_sort_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/racket/private/sort.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__runtime_47_kernel_46_rkt_46_js__;
  var M1 = $__runtime_47_unsafe_46_rkt_46_js__;
  var generic_sort3537 = function(A3538, less_than_p3539, n3540) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var n_by_2_3541 = M1.unsafe_fxrshift(n3540, 1);
    var n_by_2_plus_3542 = M1.unsafe_fx_(n3540, n_by_2_3541);
    var copying_mergesort3543 = function(Alo3544, Blo3545, n3546) {
      if (arguments.length !== 3) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M1.unsafe_fx_eq_(n3546, 1) !== false) {
        var if_res2405 = M1.unsafe_vector_set_bang_(A3538, Blo3545, M1.unsafe_vector_ref(A3538, Alo3544));
      } else {
        if (M1.unsafe_fx_eq_(n3546, 2) !== false) {
          var x3547 = M1.unsafe_vector_ref(A3538, Alo3544);
          var y3548 = M1.unsafe_vector_ref(A3538, M1.unsafe_fx_plus_(Alo3544, 1));
          if (false !== false) {
            var if_res2390 = less_than_p3539(false(y3548), false(x3547));
          } else {
            var if_res2390 = less_than_p3539(y3548, x3547);
          }
          if (if_res2390 !== false) {
            M1.unsafe_vector_set_bang_(A3538, Blo3545, y3548);
            var if_res2391 = M1.unsafe_vector_set_bang_(A3538, M1.unsafe_fx_plus_(Blo3545, 1), x3547);
          } else {
            M1.unsafe_vector_set_bang_(A3538, Blo3545, x3547);
            var if_res2391 = M1.unsafe_vector_set_bang_(A3538, M1.unsafe_fx_plus_(Blo3545, 1), y3548);
          }
          var if_res2404 = if_res2391;
        } else {
          if (M1.unsafe_fx_lt_(n3546, 16) !== false) {
            M1.unsafe_vector_set_bang_(A3538, Blo3545, M1.unsafe_vector_ref(A3538, Alo3544));
            var iloop3549 = function(i3550) {
              if (arguments.length !== 1) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              if (M1.unsafe_fx_lt_(i3550, n3546) !== false) {
                var ref_i3551 = M1.unsafe_vector_ref(A3538, M1.unsafe_fx_plus_(Alo3544, i3550));
                var jloop3552 = function(j3553) {
                  if (arguments.length !== 1) {
                    throw $rjs_core.racketContractError("arity mismatch");
                  } else {}
                  var ref_j_13554 = M1.unsafe_vector_ref(A3538, M1.unsafe_fx_(j3553, 1));
                  if (M1.unsafe_fx_lt_(Blo3545, j3553) !== false) {
                    if (false !== false) {
                      var if_res2392 = less_than_p3539(false(ref_i3551), false(ref_j_13554));
                    } else {
                      var if_res2392 = less_than_p3539(ref_i3551, ref_j_13554);
                    }
                    var if_res2393 = if_res2392;
                  } else {
                    var if_res2393 = false;
                  }
                  if (if_res2393 !== false) {
                    M1.unsafe_vector_set_bang_(A3538, j3553, ref_j_13554);
                    var if_res2394 = jloop3552(M1.unsafe_fx_(j3553, 1));
                  } else {
                    M1.unsafe_vector_set_bang_(A3538, j3553, ref_i3551);
                    var if_res2394 = iloop3549(M1.unsafe_fx_plus_(i3550, 1));
                  }
                  return if_res2394;
                };
                var if_res2395 = jloop3552(M1.unsafe_fx_plus_(Blo3545, i3550));
              } else {
                var if_res2395 = M0.rvoid();
              }
              return if_res2395;
            };
            var if_res2403 = iloop3549(1);
          } else {
            var n_by_2_3555 = M1.unsafe_fxrshift(n3546, 1);
            var n_by_2_plus_3556 = M1.unsafe_fx_(n3546, n_by_2_3555);
            var Amid13557 = M1.unsafe_fx_plus_(Alo3544, n_by_2_3555);
            var Amid23558 = M1.unsafe_fx_plus_(Alo3544, n_by_2_plus_3556);
            var Bmid13559 = M1.unsafe_fx_plus_(Blo3545, n_by_2_3555);
            copying_mergesort3543(Amid13557, Bmid13559, n_by_2_plus_3556);
            copying_mergesort3543(Alo3544, Amid23558, n_by_2_3555);
            var b23560 = M1.unsafe_fx_plus_(Blo3545, n3546);
            var loop3561 = function(a13562, b13563, c13564) {
              if (arguments.length !== 3) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              var x3565 = M1.unsafe_vector_ref(A3538, a13562);
              var y3566 = M1.unsafe_vector_ref(A3538, b13563);
              if (true !== false) {
                if (false !== false) {
                  var if_res2396 = less_than_p3539(false(y3566), false(x3565));
                } else {
                  var if_res2396 = less_than_p3539(y3566, x3565);
                }
                var if_res2398 = M0.not(if_res2396);
              } else {
                if (false !== false) {
                  var if_res2397 = less_than_p3539(false(x3565), false(y3566));
                } else {
                  var if_res2397 = less_than_p3539(x3565, y3566);
                }
                var if_res2398 = if_res2397;
              }
              if (if_res2398 !== false) {
                M1.unsafe_vector_set_bang_(A3538, c13564, x3565);
                var a13567 = M1.unsafe_fx_plus_(a13562, 1);
                var c13568 = M1.unsafe_fx_plus_(c13564, 1);
                if (M1.unsafe_fx_lt_(c13568, b13563) !== false) {
                  var if_res2399 = loop3561(a13567, b13563, c13568);
                } else {
                  var if_res2399 = M0.rvoid();
                }
                var if_res2402 = if_res2399;
              } else {
                M1.unsafe_vector_set_bang_(A3538, c13564, y3566);
                var b13569 = M1.unsafe_fx_plus_(b13563, 1);
                var c13570 = M1.unsafe_fx_plus_(c13564, 1);
                if (M1.unsafe_fx_lt__eq_(b23560, b13569) !== false) {
                  var loop3571 = function(a13572, c13573) {
                    if (arguments.length !== 2) {
                      throw $rjs_core.racketContractError("arity mismatch");
                    } else {}
                    if (M1.unsafe_fx_lt_(c13573, b13569) !== false) {
                      M1.unsafe_vector_set_bang_(A3538, c13573, M1.unsafe_vector_ref(A3538, a13572));
                      var if_res2400 = loop3571(M1.unsafe_fx_plus_(a13572, 1), M1.unsafe_fx_plus_(c13573, 1));
                    } else {
                      var if_res2400 = M0.rvoid();
                    }
                    return if_res2400;
                  };
                  var if_res2401 = loop3571(a13562, c13570);
                } else {
                  var if_res2401 = loop3561(a13562, b13569, c13570);
                }
                var if_res2402 = if_res2401;
              }
              return if_res2402;
            };
            var if_res2403 = loop3561(Amid23558, Bmid13559, Blo3545);
          }
          var if_res2404 = if_res2403;
        }
        var if_res2405 = if_res2404;
      }
      return if_res2405;
    };
    var Alo3574 = 0;
    var Amid13575 = n_by_2_3541;
    var Amid23576 = n_by_2_plus_3542;
    var Ahi3577 = n3540;
    var B1lo3578 = n3540;
    copying_mergesort3543(Amid13575, B1lo3578, n_by_2_plus_3542);
    if (M0.zero_p(n_by_2_3541) !== false) {
      var if_res2406 = M0.rvoid();
    } else {
      var if_res2406 = copying_mergesort3543(Alo3574, Amid23576, n_by_2_3541);
    }
    if_res2406;
    var b23579 = Ahi3577;
    var loop3580 = function(a13581, b13582, c13583) {
      if (arguments.length !== 3) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var x3584 = M1.unsafe_vector_ref(A3538, a13581);
      var y3585 = M1.unsafe_vector_ref(A3538, b13582);
      if (false !== false) {
        if (false !== false) {
          var if_res2407 = less_than_p3539(false(y3585), false(x3584));
        } else {
          var if_res2407 = less_than_p3539(y3585, x3584);
        }
        var if_res2409 = M0.not(if_res2407);
      } else {
        if (false !== false) {
          var if_res2408 = less_than_p3539(false(x3584), false(y3585));
        } else {
          var if_res2408 = less_than_p3539(x3584, y3585);
        }
        var if_res2409 = if_res2408;
      }
      if (if_res2409 !== false) {
        M1.unsafe_vector_set_bang_(A3538, c13583, x3584);
        var a13586 = M1.unsafe_fx_plus_(a13581, 1);
        var c13587 = M1.unsafe_fx_plus_(c13583, 1);
        if (M1.unsafe_fx_lt_(c13587, b13582) !== false) {
          var if_res2410 = loop3580(a13586, b13582, c13587);
        } else {
          var if_res2410 = M0.rvoid();
        }
        var if_res2413 = if_res2410;
      } else {
        M1.unsafe_vector_set_bang_(A3538, c13583, y3585);
        var b13588 = M1.unsafe_fx_plus_(b13582, 1);
        var c13589 = M1.unsafe_fx_plus_(c13583, 1);
        if (M1.unsafe_fx_lt__eq_(b23579, b13588) !== false) {
          var loop3590 = function(a13591, c13592) {
            if (arguments.length !== 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (M1.unsafe_fx_lt_(c13592, b13588) !== false) {
              M1.unsafe_vector_set_bang_(A3538, c13592, M1.unsafe_vector_ref(A3538, a13591));
              var if_res2411 = loop3590(M1.unsafe_fx_plus_(a13591, 1), M1.unsafe_fx_plus_(c13592, 1));
            } else {
              var if_res2411 = M0.rvoid();
            }
            return if_res2411;
          };
          var if_res2412 = loop3590(a13581, c13589);
        } else {
          var if_res2412 = loop3580(a13581, b13588, c13589);
        }
        var if_res2413 = if_res2412;
      }
      return if_res2413;
    };
    return loop3580(B1lo3578, Amid23576, Alo3574);
  };
  var generic_sort_by_key3593 = function(A3594, less_than_p3595, n3596, key3597) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var n_by_2_3598 = M1.unsafe_fxrshift(n3596, 1);
    var n_by_2_plus_3599 = M1.unsafe_fx_(n3596, n_by_2_3598);
    var copying_mergesort3600 = function(Alo3601, Blo3602, n3603) {
      if (arguments.length !== 3) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M1.unsafe_fx_eq_(n3603, 1) !== false) {
        var if_res2429 = M1.unsafe_vector_set_bang_(A3594, Blo3602, M1.unsafe_vector_ref(A3594, Alo3601));
      } else {
        if (M1.unsafe_fx_eq_(n3603, 2) !== false) {
          var x3604 = M1.unsafe_vector_ref(A3594, Alo3601);
          var y3605 = M1.unsafe_vector_ref(A3594, M1.unsafe_fx_plus_(Alo3601, 1));
          if (key3597 !== false) {
            var if_res2414 = less_than_p3595(key3597(y3605), key3597(x3604));
          } else {
            var if_res2414 = less_than_p3595(y3605, x3604);
          }
          if (if_res2414 !== false) {
            M1.unsafe_vector_set_bang_(A3594, Blo3602, y3605);
            var if_res2415 = M1.unsafe_vector_set_bang_(A3594, M1.unsafe_fx_plus_(Blo3602, 1), x3604);
          } else {
            M1.unsafe_vector_set_bang_(A3594, Blo3602, x3604);
            var if_res2415 = M1.unsafe_vector_set_bang_(A3594, M1.unsafe_fx_plus_(Blo3602, 1), y3605);
          }
          var if_res2428 = if_res2415;
        } else {
          if (M1.unsafe_fx_lt_(n3603, 16) !== false) {
            M1.unsafe_vector_set_bang_(A3594, Blo3602, M1.unsafe_vector_ref(A3594, Alo3601));
            var iloop3606 = function(i3607) {
              if (arguments.length !== 1) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              if (M1.unsafe_fx_lt_(i3607, n3603) !== false) {
                var ref_i3608 = M1.unsafe_vector_ref(A3594, M1.unsafe_fx_plus_(Alo3601, i3607));
                var jloop3609 = function(j3610) {
                  if (arguments.length !== 1) {
                    throw $rjs_core.racketContractError("arity mismatch");
                  } else {}
                  var ref_j_13611 = M1.unsafe_vector_ref(A3594, M1.unsafe_fx_(j3610, 1));
                  if (M1.unsafe_fx_lt_(Blo3602, j3610) !== false) {
                    if (key3597 !== false) {
                      var if_res2416 = less_than_p3595(key3597(ref_i3608), key3597(ref_j_13611));
                    } else {
                      var if_res2416 = less_than_p3595(ref_i3608, ref_j_13611);
                    }
                    var if_res2417 = if_res2416;
                  } else {
                    var if_res2417 = false;
                  }
                  if (if_res2417 !== false) {
                    M1.unsafe_vector_set_bang_(A3594, j3610, ref_j_13611);
                    var if_res2418 = jloop3609(M1.unsafe_fx_(j3610, 1));
                  } else {
                    M1.unsafe_vector_set_bang_(A3594, j3610, ref_i3608);
                    var if_res2418 = iloop3606(M1.unsafe_fx_plus_(i3607, 1));
                  }
                  return if_res2418;
                };
                var if_res2419 = jloop3609(M1.unsafe_fx_plus_(Blo3602, i3607));
              } else {
                var if_res2419 = M0.rvoid();
              }
              return if_res2419;
            };
            var if_res2427 = iloop3606(1);
          } else {
            var n_by_2_3612 = M1.unsafe_fxrshift(n3603, 1);
            var n_by_2_plus_3613 = M1.unsafe_fx_(n3603, n_by_2_3612);
            var Amid13614 = M1.unsafe_fx_plus_(Alo3601, n_by_2_3612);
            var Amid23615 = M1.unsafe_fx_plus_(Alo3601, n_by_2_plus_3613);
            var Bmid13616 = M1.unsafe_fx_plus_(Blo3602, n_by_2_3612);
            copying_mergesort3600(Amid13614, Bmid13616, n_by_2_plus_3613);
            copying_mergesort3600(Alo3601, Amid23615, n_by_2_3612);
            var b23617 = M1.unsafe_fx_plus_(Blo3602, n3603);
            var loop3618 = function(a13619, b13620, c13621) {
              if (arguments.length !== 3) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              var x3622 = M1.unsafe_vector_ref(A3594, a13619);
              var y3623 = M1.unsafe_vector_ref(A3594, b13620);
              if (true !== false) {
                if (key3597 !== false) {
                  var if_res2420 = less_than_p3595(key3597(y3623), key3597(x3622));
                } else {
                  var if_res2420 = less_than_p3595(y3623, x3622);
                }
                var if_res2422 = M0.not(if_res2420);
              } else {
                if (key3597 !== false) {
                  var if_res2421 = less_than_p3595(key3597(x3622), key3597(y3623));
                } else {
                  var if_res2421 = less_than_p3595(x3622, y3623);
                }
                var if_res2422 = if_res2421;
              }
              if (if_res2422 !== false) {
                M1.unsafe_vector_set_bang_(A3594, c13621, x3622);
                var a13624 = M1.unsafe_fx_plus_(a13619, 1);
                var c13625 = M1.unsafe_fx_plus_(c13621, 1);
                if (M1.unsafe_fx_lt_(c13625, b13620) !== false) {
                  var if_res2423 = loop3618(a13624, b13620, c13625);
                } else {
                  var if_res2423 = M0.rvoid();
                }
                var if_res2426 = if_res2423;
              } else {
                M1.unsafe_vector_set_bang_(A3594, c13621, y3623);
                var b13626 = M1.unsafe_fx_plus_(b13620, 1);
                var c13627 = M1.unsafe_fx_plus_(c13621, 1);
                if (M1.unsafe_fx_lt__eq_(b23617, b13626) !== false) {
                  var loop3628 = function(a13629, c13630) {
                    if (arguments.length !== 2) {
                      throw $rjs_core.racketContractError("arity mismatch");
                    } else {}
                    if (M1.unsafe_fx_lt_(c13630, b13626) !== false) {
                      M1.unsafe_vector_set_bang_(A3594, c13630, M1.unsafe_vector_ref(A3594, a13629));
                      var if_res2424 = loop3628(M1.unsafe_fx_plus_(a13629, 1), M1.unsafe_fx_plus_(c13630, 1));
                    } else {
                      var if_res2424 = M0.rvoid();
                    }
                    return if_res2424;
                  };
                  var if_res2425 = loop3628(a13619, c13627);
                } else {
                  var if_res2425 = loop3618(a13619, b13626, c13627);
                }
                var if_res2426 = if_res2425;
              }
              return if_res2426;
            };
            var if_res2427 = loop3618(Amid23615, Bmid13616, Blo3602);
          }
          var if_res2428 = if_res2427;
        }
        var if_res2429 = if_res2428;
      }
      return if_res2429;
    };
    var Alo3631 = 0;
    var Amid13632 = n_by_2_3598;
    var Amid23633 = n_by_2_plus_3599;
    var Ahi3634 = n3596;
    var B1lo3635 = n3596;
    copying_mergesort3600(Amid13632, B1lo3635, n_by_2_plus_3599);
    if (M0.zero_p(n_by_2_3598) !== false) {
      var if_res2430 = M0.rvoid();
    } else {
      var if_res2430 = copying_mergesort3600(Alo3631, Amid23633, n_by_2_3598);
    }
    if_res2430;
    var b23636 = Ahi3634;
    var loop3637 = function(a13638, b13639, c13640) {
      if (arguments.length !== 3) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var x3641 = M1.unsafe_vector_ref(A3594, a13638);
      var y3642 = M1.unsafe_vector_ref(A3594, b13639);
      if (false !== false) {
        if (key3597 !== false) {
          var if_res2431 = less_than_p3595(key3597(y3642), key3597(x3641));
        } else {
          var if_res2431 = less_than_p3595(y3642, x3641);
        }
        var if_res2433 = M0.not(if_res2431);
      } else {
        if (key3597 !== false) {
          var if_res2432 = less_than_p3595(key3597(x3641), key3597(y3642));
        } else {
          var if_res2432 = less_than_p3595(x3641, y3642);
        }
        var if_res2433 = if_res2432;
      }
      if (if_res2433 !== false) {
        M1.unsafe_vector_set_bang_(A3594, c13640, x3641);
        var a13643 = M1.unsafe_fx_plus_(a13638, 1);
        var c13644 = M1.unsafe_fx_plus_(c13640, 1);
        if (M1.unsafe_fx_lt_(c13644, b13639) !== false) {
          var if_res2434 = loop3637(a13643, b13639, c13644);
        } else {
          var if_res2434 = M0.rvoid();
        }
        var if_res2437 = if_res2434;
      } else {
        M1.unsafe_vector_set_bang_(A3594, c13640, y3642);
        var b13645 = M1.unsafe_fx_plus_(b13639, 1);
        var c13646 = M1.unsafe_fx_plus_(c13640, 1);
        if (M1.unsafe_fx_lt__eq_(b23636, b13645) !== false) {
          var loop3647 = function(a13648, c13649) {
            if (arguments.length !== 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (M1.unsafe_fx_lt_(c13649, b13645) !== false) {
              M1.unsafe_vector_set_bang_(A3594, c13649, M1.unsafe_vector_ref(A3594, a13648));
              var if_res2435 = loop3647(M1.unsafe_fx_plus_(a13648, 1), M1.unsafe_fx_plus_(c13649, 1));
            } else {
              var if_res2435 = M0.rvoid();
            }
            return if_res2435;
          };
          var if_res2436 = loop3647(a13638, c13646);
        } else {
          var if_res2436 = loop3637(a13638, b13645, c13646);
        }
        var if_res2437 = if_res2436;
      }
      return if_res2437;
    };
    return loop3637(B1lo3635, Amid23633, Alo3631);
  };
  var cl2545 = function(lst3650, less_than_p3651) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var n3652 = M0.length(lst3650);
    if (M1.unsafe_fx_eq_(n3652, 0) !== false) {
      var if_res2569 = lst3650;
    } else {
      if (false !== false) {
        var vec3653 = M0.make_vector(n3652 + M0.ceiling(n3652 / 2));
        var loop3654 = function(i3655, lst3656) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M0.pair_p(lst3656) !== false) {
            var x3657 = M0.car(lst3656);
            M1.unsafe_vector_set_bang_(vec3653, i3655, M0.cons(false(x3657), x3657));
            var if_res2549 = loop3654(M1.unsafe_fx_plus_(i3655, 1), M0.cdr(lst3656));
          } else {
            var if_res2549 = M0.rvoid();
          }
          return if_res2549;
        };
        loop3654(0, lst3650);
        generic_sort_by_key3593(vec3653, less_than_p3651, n3652, M1.unsafe_car);
        var loop3658 = function(i3659, r3660) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          var i3661 = M1.unsafe_fx_(i3659, 1);
          if (M1.unsafe_fx_lt_(i3661, 0) !== false) {
            var if_res2550 = r3660;
          } else {
            var if_res2550 = loop3658(i3661, M0.cons(M1.unsafe_cdr(M1.unsafe_vector_ref(vec3653, i3661)), r3660));
          }
          return if_res2550;
        };
        var if_res2568 = loop3658(n3652, $rjs_core.Pair.makeList());
      } else {
        var loop3662 = function(last3663, next3664) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          var or_part3665 = M0.null_p(next3664);
          if (or_part3665 !== false) {
            var if_res2553 = or_part3665;
          } else {
            if (false !== false) {
              var if_res2551 = less_than_p3651(false(M1.unsafe_car(next3664)), false(last3663));
            } else {
              var if_res2551 = less_than_p3651(M1.unsafe_car(next3664), last3663);
            }
            if (M0.not(if_res2551) !== false) {
              var if_res2552 = loop3662(M1.unsafe_car(next3664), M1.unsafe_cdr(next3664));
            } else {
              var if_res2552 = false;
            }
            var if_res2553 = if_res2552;
          }
          return if_res2553;
        };
        if (loop3662(M0.car(lst3650), M0.cdr(lst3650)) !== false) {
          var if_res2567 = lst3650;
        } else {
          if (M1.unsafe_fx_lt__eq_(n3652, 3) !== false) {
            if (M1.unsafe_fx_eq_(n3652, 1) !== false) {
              var if_res2563 = lst3650;
            } else {
              if (M1.unsafe_fx_eq_(n3652, 2) !== false) {
                var if_res2562 = M0.list(M0.cadr(lst3650), M0.car(lst3650));
              } else {
                var a3666 = M0.car(lst3650);
                var b3667 = M0.cadr(lst3650);
                var c3668 = M0.caddr(lst3650);
                if (false !== false) {
                  var if_res2554 = less_than_p3651(false(b3667), false(a3666));
                } else {
                  var if_res2554 = less_than_p3651(b3667, a3666);
                }
                if (if_res2554 !== false) {
                  if (false !== false) {
                    var if_res2555 = less_than_p3651(false(c3668), false(b3667));
                  } else {
                    var if_res2555 = less_than_p3651(c3668, b3667);
                  }
                  if (if_res2555 !== false) {
                    var if_res2558 = M0.list(c3668, b3667, a3666);
                  } else {
                    if (false !== false) {
                      var if_res2556 = less_than_p3651(false(c3668), false(a3666));
                    } else {
                      var if_res2556 = less_than_p3651(c3668, a3666);
                    }
                    if (if_res2556 !== false) {
                      var if_res2557 = M0.list(b3667, c3668, a3666);
                    } else {
                      var if_res2557 = M0.list(b3667, a3666, c3668);
                    }
                    var if_res2558 = if_res2557;
                  }
                  var if_res2561 = if_res2558;
                } else {
                  if (false !== false) {
                    var if_res2559 = less_than_p3651(false(c3668), false(a3666));
                  } else {
                    var if_res2559 = less_than_p3651(c3668, a3666);
                  }
                  if (if_res2559 !== false) {
                    var if_res2560 = M0.list(c3668, a3666, b3667);
                  } else {
                    var if_res2560 = M0.list(a3666, c3668, b3667);
                  }
                  var if_res2561 = if_res2560;
                }
                var if_res2562 = if_res2561;
              }
              var if_res2563 = if_res2562;
            }
            var if_res2566 = if_res2563;
          } else {
            var vec3669 = M0.make_vector(n3652 + M0.ceiling(n3652 / 2));
            var loop3670 = function(i3671, lst3672) {
              if (arguments.length !== 2) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              if (M0.pair_p(lst3672) !== false) {
                M0.vector_set_bang_(vec3669, i3671, M0.car(lst3672));
                var if_res2564 = loop3670(M0.add1(i3671), M0.cdr(lst3672));
              } else {
                var if_res2564 = M0.rvoid();
              }
              return if_res2564;
            };
            loop3670(0, lst3650);
            generic_sort3537(vec3669, less_than_p3651, n3652);
            var loop3673 = function(i3674, r3675) {
              if (arguments.length !== 2) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              var i3676 = M0.sub1(i3674);
              if (M0.__lt_(i3676, 0) !== false) {
                var if_res2565 = r3675;
              } else {
                var if_res2565 = loop3673(i3676, M0.cons(M0.vector_ref(vec3669, i3676), r3675));
              }
              return if_res2565;
            };
            var if_res2566 = loop3673(n3652, $rjs_core.Pair.makeList());
          }
          var if_res2567 = if_res2566;
        }
        var if_res2568 = if_res2567;
      }
      var if_res2569 = if_res2568;
    }
    return if_res2569;
  };
  var cl2546 = function(lst3677, less_than_p3678, getkey3679) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (getkey3679 !== false) {
      var if_res2570 = M0.not(M0.eq_p(M0.values, getkey3679));
    } else {
      var if_res2570 = false;
    }
    if (if_res2570 !== false) {
      var if_res2571 = sort(lst3677, less_than_p3678, getkey3679, false);
    } else {
      var if_res2571 = sort(lst3677, less_than_p3678);
    }
    return if_res2571;
  };
  var cl2547 = function(lst3680, less_than_p3681, getkey3682, cache_keys_p3683) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (getkey3682 !== false) {
      var if_res2572 = M0.not(M0.eq_p(M0.values, getkey3682));
    } else {
      var if_res2572 = false;
    }
    if (if_res2572 !== false) {
      var n3684 = M0.length(lst3680);
      if (M1.unsafe_fx_eq_(n3684, 0) !== false) {
        var if_res2593 = lst3680;
      } else {
        if (cache_keys_p3683 !== false) {
          var vec3685 = M0.make_vector(n3684 + M0.ceiling(n3684 / 2));
          var loop3686 = function(i3687, lst3688) {
            if (arguments.length !== 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (M0.pair_p(lst3688) !== false) {
              var x3689 = M0.car(lst3688);
              M1.unsafe_vector_set_bang_(vec3685, i3687, M0.cons(getkey3682(x3689), x3689));
              var if_res2573 = loop3686(M1.unsafe_fx_plus_(i3687, 1), M0.cdr(lst3688));
            } else {
              var if_res2573 = M0.rvoid();
            }
            return if_res2573;
          };
          loop3686(0, lst3680);
          generic_sort_by_key3593(vec3685, less_than_p3681, n3684, M1.unsafe_car);
          var loop3690 = function(i3691, r3692) {
            if (arguments.length !== 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            var i3693 = M1.unsafe_fx_(i3691, 1);
            if (M1.unsafe_fx_lt_(i3693, 0) !== false) {
              var if_res2574 = r3692;
            } else {
              var if_res2574 = loop3690(i3693, M0.cons(M1.unsafe_cdr(M1.unsafe_vector_ref(vec3685, i3693)), r3692));
            }
            return if_res2574;
          };
          var if_res2592 = loop3690(n3684, $rjs_core.Pair.makeList());
        } else {
          var loop3694 = function(last3695, next3696) {
            if (arguments.length !== 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            var or_part3697 = M0.null_p(next3696);
            if (or_part3697 !== false) {
              var if_res2577 = or_part3697;
            } else {
              if (getkey3682 !== false) {
                var if_res2575 = less_than_p3681(getkey3682(M1.unsafe_car(next3696)), getkey3682(last3695));
              } else {
                var if_res2575 = less_than_p3681(M1.unsafe_car(next3696), last3695);
              }
              if (M0.not(if_res2575) !== false) {
                var if_res2576 = loop3694(M1.unsafe_car(next3696), M1.unsafe_cdr(next3696));
              } else {
                var if_res2576 = false;
              }
              var if_res2577 = if_res2576;
            }
            return if_res2577;
          };
          if (loop3694(M0.car(lst3680), M0.cdr(lst3680)) !== false) {
            var if_res2591 = lst3680;
          } else {
            if (M1.unsafe_fx_lt__eq_(n3684, 3) !== false) {
              if (M1.unsafe_fx_eq_(n3684, 1) !== false) {
                var if_res2587 = lst3680;
              } else {
                if (M1.unsafe_fx_eq_(n3684, 2) !== false) {
                  var if_res2586 = M0.list(M0.cadr(lst3680), M0.car(lst3680));
                } else {
                  var a3698 = M0.car(lst3680);
                  var b3699 = M0.cadr(lst3680);
                  var c3700 = M0.caddr(lst3680);
                  if (getkey3682 !== false) {
                    var if_res2578 = less_than_p3681(getkey3682(b3699), getkey3682(a3698));
                  } else {
                    var if_res2578 = less_than_p3681(b3699, a3698);
                  }
                  if (if_res2578 !== false) {
                    if (getkey3682 !== false) {
                      var if_res2579 = less_than_p3681(getkey3682(c3700), getkey3682(b3699));
                    } else {
                      var if_res2579 = less_than_p3681(c3700, b3699);
                    }
                    if (if_res2579 !== false) {
                      var if_res2582 = M0.list(c3700, b3699, a3698);
                    } else {
                      if (getkey3682 !== false) {
                        var if_res2580 = less_than_p3681(getkey3682(c3700), getkey3682(a3698));
                      } else {
                        var if_res2580 = less_than_p3681(c3700, a3698);
                      }
                      if (if_res2580 !== false) {
                        var if_res2581 = M0.list(b3699, c3700, a3698);
                      } else {
                        var if_res2581 = M0.list(b3699, a3698, c3700);
                      }
                      var if_res2582 = if_res2581;
                    }
                    var if_res2585 = if_res2582;
                  } else {
                    if (getkey3682 !== false) {
                      var if_res2583 = less_than_p3681(getkey3682(c3700), getkey3682(a3698));
                    } else {
                      var if_res2583 = less_than_p3681(c3700, a3698);
                    }
                    if (if_res2583 !== false) {
                      var if_res2584 = M0.list(c3700, a3698, b3699);
                    } else {
                      var if_res2584 = M0.list(a3698, c3700, b3699);
                    }
                    var if_res2585 = if_res2584;
                  }
                  var if_res2586 = if_res2585;
                }
                var if_res2587 = if_res2586;
              }
              var if_res2590 = if_res2587;
            } else {
              var vec3701 = M0.make_vector(n3684 + M0.ceiling(n3684 / 2));
              var loop3702 = function(i3703, lst3704) {
                if (arguments.length !== 2) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                if (M0.pair_p(lst3704) !== false) {
                  M0.vector_set_bang_(vec3701, i3703, M0.car(lst3704));
                  var if_res2588 = loop3702(M0.add1(i3703), M0.cdr(lst3704));
                } else {
                  var if_res2588 = M0.rvoid();
                }
                return if_res2588;
              };
              loop3702(0, lst3680);
              generic_sort_by_key3593(vec3701, less_than_p3681, n3684, getkey3682);
              var loop3705 = function(i3706, r3707) {
                if (arguments.length !== 2) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                var i3708 = M0.sub1(i3706);
                if (M0.__lt_(i3708, 0) !== false) {
                  var if_res2589 = r3707;
                } else {
                  var if_res2589 = loop3705(i3708, M0.cons(M0.vector_ref(vec3701, i3708), r3707));
                }
                return if_res2589;
              };
              var if_res2590 = loop3705(n3684, $rjs_core.Pair.makeList());
            }
            var if_res2591 = if_res2590;
          }
          var if_res2592 = if_res2591;
        }
        var if_res2593 = if_res2592;
      }
      var if_res2594 = if_res2593;
    } else {
      var if_res2594 = sort(lst3680, less_than_p3681);
    }
    return if_res2594;
  };
  var temp2595 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2548 = {
      '2': cl2545,
      '3': cl2546,
      '4': cl2547
    }[arguments.length];
    if (fixed_lam2548 !== undefined) {
      return fixed_lam2548.apply(null, arguments);
    } else {
      return M0.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3, 4]);
  var cl2491 = function(vec3709, less_than_p3710, start3711, end3712) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var n3713 = end3712 - start3711;
    if (true !== false) {
      var if_res2494 = M0.make_vector(n3713);
    } else {
      var if_res2494 = vec3709;
    }
    var dst_vec3714 = if_res2494;
    if (true !== false) {
      var if_res2495 = 0;
    } else {
      var if_res2495 = start3711;
    }
    var dst_start3715 = if_res2495;
    if (M1.unsafe_fx_eq_(n3713, 0) !== false) {
      var if_res2516 = M0.rvoid();
    } else {
      if (false !== false) {
        var work_vec3716 = M0.make_vector(n3713 + M0.ceiling(n3713 / 2), true);
        var loop3717 = function(i3718) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M1.unsafe_fx_lt_(i3718, n3713) !== false) {
            var x3719 = M1.unsafe_vector_ref(vec3709, M1.unsafe_fx_plus_(i3718, start3711));
            M1.unsafe_vector_set_bang_(work_vec3716, i3718, M0.cons(false(x3719), x3719));
            var if_res2496 = loop3717(M1.unsafe_fx_plus_(i3718, 1));
          } else {
            var if_res2496 = M0.rvoid();
          }
          return if_res2496;
        };
        loop3717(0);
        generic_sort_by_key3593(work_vec3716, less_than_p3710, n3713, M1.unsafe_car);
        var loop3720 = function(i3721) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M1.unsafe_fx_lt_(i3721, n3713) !== false) {
            M1.unsafe_vector_set_bang_(dst_vec3714, M1.unsafe_fx_plus_(i3721, dst_start3715), M1.unsafe_cdr(M1.unsafe_vector_ref(work_vec3716, i3721)));
            var if_res2497 = loop3720(M1.unsafe_fx_plus_(i3721, 1));
          } else {
            var if_res2497 = M0.rvoid();
          }
          return if_res2497;
        };
        var if_res2515 = loop3720(0);
      } else {
        var loop3722 = function(prev_val3723, next_index3724) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          var or_part3725 = M1.unsafe_fx_eq_(next_index3724, end3712);
          if (or_part3725 !== false) {
            var if_res2500 = or_part3725;
          } else {
            var next_val3726 = M1.unsafe_vector_ref(vec3709, next_index3724);
            if (false !== false) {
              var if_res2498 = less_than_p3710(false(next_val3726), false(prev_val3723));
            } else {
              var if_res2498 = less_than_p3710(next_val3726, prev_val3723);
            }
            if (M0.not(if_res2498) !== false) {
              var if_res2499 = loop3722(next_val3726, M1.unsafe_fx_plus_(next_index3724, 1));
            } else {
              var if_res2499 = false;
            }
            var if_res2500 = if_res2499;
          }
          return if_res2500;
        };
        if (loop3722(M1.unsafe_vector_ref(vec3709, start3711), M1.unsafe_fx_plus_(start3711, 1)) !== false) {
          if (true !== false) {
            var if_res2501 = M0.__rjs_quoted__.vector_copy_bang_(dst_vec3714, dst_start3715, vec3709, start3711, end3712);
          } else {
            var if_res2501 = M0.rvoid();
          }
          var if_res2514 = if_res2501;
        } else {
          if (M1.unsafe_fx_lt__eq_(n3713, 3) !== false) {
            if (true !== false) {
              var if_res2502 = M0.__rjs_quoted__.vector_copy_bang_(dst_vec3714, dst_start3715, vec3709, start3711, end3712);
            } else {
              var if_res2502 = M0.rvoid();
            }
            if_res2502;
            if (M1.unsafe_fx_eq_(n3713, 1) !== false) {
              var if_res2512 = M0.rvoid();
            } else {
              if (M1.unsafe_fx_eq_(n3713, 2) !== false) {
                var tmp3727 = M1.unsafe_vector_ref(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 0));
                M1.unsafe_vector_set_bang_(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 0), M1.unsafe_vector_ref(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 1)));
                var if_res2511 = M1.unsafe_vector_set_bang_(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 1), tmp3727);
              } else {
                var a3728 = M1.unsafe_vector_ref(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 0));
                var b3729 = M1.unsafe_vector_ref(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 1));
                var c3730 = M1.unsafe_vector_ref(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 2));
                if (false !== false) {
                  var if_res2503 = less_than_p3710(false(b3729), false(a3728));
                } else {
                  var if_res2503 = less_than_p3710(b3729, a3728);
                }
                if (if_res2503 !== false) {
                  if (false !== false) {
                    var if_res2504 = less_than_p3710(false(c3730), false(b3729));
                  } else {
                    var if_res2504 = less_than_p3710(c3730, b3729);
                  }
                  if (if_res2504 !== false) {
                    M1.unsafe_vector_set_bang_(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 0), c3730);
                    var if_res2507 = M1.unsafe_vector_set_bang_(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 2), a3728);
                  } else {
                    if (false !== false) {
                      var if_res2505 = less_than_p3710(false(c3730), false(a3728));
                    } else {
                      var if_res2505 = less_than_p3710(c3730, a3728);
                    }
                    if (if_res2505 !== false) {
                      M1.unsafe_vector_set_bang_(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 0), b3729);
                      M1.unsafe_vector_set_bang_(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 1), c3730);
                      var if_res2506 = M1.unsafe_vector_set_bang_(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 2), a3728);
                    } else {
                      M1.unsafe_vector_set_bang_(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 0), b3729);
                      var if_res2506 = M1.unsafe_vector_set_bang_(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 1), a3728);
                    }
                    var if_res2507 = if_res2506;
                  }
                  var if_res2510 = if_res2507;
                } else {
                  if (false !== false) {
                    var if_res2508 = less_than_p3710(false(c3730), false(a3728));
                  } else {
                    var if_res2508 = less_than_p3710(c3730, a3728);
                  }
                  if (if_res2508 !== false) {
                    M1.unsafe_vector_set_bang_(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 0), c3730);
                    M1.unsafe_vector_set_bang_(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 1), a3728);
                    var if_res2509 = M1.unsafe_vector_set_bang_(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 2), b3729);
                  } else {
                    M1.unsafe_vector_set_bang_(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 1), c3730);
                    var if_res2509 = M1.unsafe_vector_set_bang_(dst_vec3714, M1.unsafe_fx_plus_(dst_start3715, 2), b3729);
                  }
                  var if_res2510 = if_res2509;
                }
                var if_res2511 = if_res2510;
              }
              var if_res2512 = if_res2511;
            }
            var if_res2513 = if_res2512;
          } else {
            var work_vec3731 = M0.make_vector(n3713 + M0.ceiling(n3713 / 2), false);
            M0.__rjs_quoted__.vector_copy_bang_(work_vec3731, 0, vec3709, start3711, end3712);
            generic_sort3537(work_vec3731, less_than_p3710, n3713);
            var if_res2513 = M0.__rjs_quoted__.vector_copy_bang_(dst_vec3714, dst_start3715, work_vec3731, 0, n3713);
          }
          var if_res2514 = if_res2513;
        }
        var if_res2515 = if_res2514;
      }
      var if_res2516 = if_res2515;
    }
    if_res2516;
    if (true !== false) {
      var if_res2517 = dst_vec3714;
    } else {
      var if_res2517 = M0.rvoid();
    }
    return if_res2517;
  };
  var cl2492 = function(vec3732, less_than_p3733, start3734, end3735, getkey3736, cache_keys_p3737) {
    if (arguments.length !== 6) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (getkey3736 !== false) {
      var if_res2518 = M0.not(M0.eq_p(M0.values, getkey3736));
    } else {
      var if_res2518 = false;
    }
    if (if_res2518 !== false) {
      var n3738 = end3735 - start3734;
      if (true !== false) {
        var if_res2519 = M0.make_vector(n3738);
      } else {
        var if_res2519 = vec3732;
      }
      var dst_vec3739 = if_res2519;
      if (true !== false) {
        var if_res2520 = 0;
      } else {
        var if_res2520 = start3734;
      }
      var dst_start3740 = if_res2520;
      if (M1.unsafe_fx_eq_(n3738, 0) !== false) {
        var if_res2541 = M0.rvoid();
      } else {
        if (cache_keys_p3737 !== false) {
          var work_vec3741 = M0.make_vector(n3738 + M0.ceiling(n3738 / 2), true);
          var loop3742 = function(i3743) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (M1.unsafe_fx_lt_(i3743, n3738) !== false) {
              var x3744 = M1.unsafe_vector_ref(vec3732, M1.unsafe_fx_plus_(i3743, start3734));
              M1.unsafe_vector_set_bang_(work_vec3741, i3743, M0.cons(getkey3736(x3744), x3744));
              var if_res2521 = loop3742(M1.unsafe_fx_plus_(i3743, 1));
            } else {
              var if_res2521 = M0.rvoid();
            }
            return if_res2521;
          };
          loop3742(0);
          generic_sort_by_key3593(work_vec3741, less_than_p3733, n3738, M1.unsafe_car);
          var loop3745 = function(i3746) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (M1.unsafe_fx_lt_(i3746, n3738) !== false) {
              M1.unsafe_vector_set_bang_(dst_vec3739, M1.unsafe_fx_plus_(i3746, dst_start3740), M1.unsafe_cdr(M1.unsafe_vector_ref(work_vec3741, i3746)));
              var if_res2522 = loop3745(M1.unsafe_fx_plus_(i3746, 1));
            } else {
              var if_res2522 = M0.rvoid();
            }
            return if_res2522;
          };
          var if_res2540 = loop3745(0);
        } else {
          var loop3747 = function(prev_val3748, next_index3749) {
            if (arguments.length !== 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            var or_part3750 = M1.unsafe_fx_eq_(next_index3749, end3735);
            if (or_part3750 !== false) {
              var if_res2525 = or_part3750;
            } else {
              var next_val3751 = M1.unsafe_vector_ref(vec3732, next_index3749);
              if (getkey3736 !== false) {
                var if_res2523 = less_than_p3733(getkey3736(next_val3751), getkey3736(prev_val3748));
              } else {
                var if_res2523 = less_than_p3733(next_val3751, prev_val3748);
              }
              if (M0.not(if_res2523) !== false) {
                var if_res2524 = loop3747(next_val3751, M1.unsafe_fx_plus_(next_index3749, 1));
              } else {
                var if_res2524 = false;
              }
              var if_res2525 = if_res2524;
            }
            return if_res2525;
          };
          if (loop3747(M1.unsafe_vector_ref(vec3732, start3734), M1.unsafe_fx_plus_(start3734, 1)) !== false) {
            if (true !== false) {
              var if_res2526 = M0.__rjs_quoted__.vector_copy_bang_(dst_vec3739, dst_start3740, vec3732, start3734, end3735);
            } else {
              var if_res2526 = M0.rvoid();
            }
            var if_res2539 = if_res2526;
          } else {
            if (M1.unsafe_fx_lt__eq_(n3738, 3) !== false) {
              if (true !== false) {
                var if_res2527 = M0.__rjs_quoted__.vector_copy_bang_(dst_vec3739, dst_start3740, vec3732, start3734, end3735);
              } else {
                var if_res2527 = M0.rvoid();
              }
              if_res2527;
              if (M1.unsafe_fx_eq_(n3738, 1) !== false) {
                var if_res2537 = M0.rvoid();
              } else {
                if (M1.unsafe_fx_eq_(n3738, 2) !== false) {
                  var tmp3752 = M1.unsafe_vector_ref(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 0));
                  M1.unsafe_vector_set_bang_(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 0), M1.unsafe_vector_ref(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 1)));
                  var if_res2536 = M1.unsafe_vector_set_bang_(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 1), tmp3752);
                } else {
                  var a3753 = M1.unsafe_vector_ref(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 0));
                  var b3754 = M1.unsafe_vector_ref(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 1));
                  var c3755 = M1.unsafe_vector_ref(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 2));
                  if (getkey3736 !== false) {
                    var if_res2528 = less_than_p3733(getkey3736(b3754), getkey3736(a3753));
                  } else {
                    var if_res2528 = less_than_p3733(b3754, a3753);
                  }
                  if (if_res2528 !== false) {
                    if (getkey3736 !== false) {
                      var if_res2529 = less_than_p3733(getkey3736(c3755), getkey3736(b3754));
                    } else {
                      var if_res2529 = less_than_p3733(c3755, b3754);
                    }
                    if (if_res2529 !== false) {
                      M1.unsafe_vector_set_bang_(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 0), c3755);
                      var if_res2532 = M1.unsafe_vector_set_bang_(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 2), a3753);
                    } else {
                      if (getkey3736 !== false) {
                        var if_res2530 = less_than_p3733(getkey3736(c3755), getkey3736(a3753));
                      } else {
                        var if_res2530 = less_than_p3733(c3755, a3753);
                      }
                      if (if_res2530 !== false) {
                        M1.unsafe_vector_set_bang_(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 0), b3754);
                        M1.unsafe_vector_set_bang_(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 1), c3755);
                        var if_res2531 = M1.unsafe_vector_set_bang_(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 2), a3753);
                      } else {
                        M1.unsafe_vector_set_bang_(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 0), b3754);
                        var if_res2531 = M1.unsafe_vector_set_bang_(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 1), a3753);
                      }
                      var if_res2532 = if_res2531;
                    }
                    var if_res2535 = if_res2532;
                  } else {
                    if (getkey3736 !== false) {
                      var if_res2533 = less_than_p3733(getkey3736(c3755), getkey3736(a3753));
                    } else {
                      var if_res2533 = less_than_p3733(c3755, a3753);
                    }
                    if (if_res2533 !== false) {
                      M1.unsafe_vector_set_bang_(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 0), c3755);
                      M1.unsafe_vector_set_bang_(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 1), a3753);
                      var if_res2534 = M1.unsafe_vector_set_bang_(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 2), b3754);
                    } else {
                      M1.unsafe_vector_set_bang_(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 1), c3755);
                      var if_res2534 = M1.unsafe_vector_set_bang_(dst_vec3739, M1.unsafe_fx_plus_(dst_start3740, 2), b3754);
                    }
                    var if_res2535 = if_res2534;
                  }
                  var if_res2536 = if_res2535;
                }
                var if_res2537 = if_res2536;
              }
              var if_res2538 = if_res2537;
            } else {
              var work_vec3756 = M0.make_vector(n3738 + M0.ceiling(n3738 / 2), false);
              M0.__rjs_quoted__.vector_copy_bang_(work_vec3756, 0, vec3732, start3734, end3735);
              generic_sort_by_key3593(work_vec3756, less_than_p3733, n3738, getkey3736);
              var if_res2538 = M0.__rjs_quoted__.vector_copy_bang_(dst_vec3739, dst_start3740, work_vec3756, 0, n3738);
            }
            var if_res2539 = if_res2538;
          }
          var if_res2540 = if_res2539;
        }
        var if_res2541 = if_res2540;
      }
      if_res2541;
      if (true !== false) {
        var if_res2542 = dst_vec3739;
      } else {
        var if_res2542 = M0.rvoid();
      }
      var if_res2543 = if_res2542;
    } else {
      var if_res2543 = vector_sort(vec3732, less_than_p3733, start3734, end3735);
    }
    return if_res2543;
  };
  var temp2544 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2493 = {
      '4': cl2491,
      '6': cl2492
    }[arguments.length];
    if (fixed_lam2493 !== undefined) {
      return fixed_lam2493.apply(null, arguments);
    } else {
      return M0.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [4, 6]);
  var cl2438 = function(vec3757, less_than_p3758, start3759, end3760) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var n3761 = end3760 - start3759;
    if (false !== false) {
      var if_res2441 = M0.make_vector(n3761);
    } else {
      var if_res2441 = vec3757;
    }
    var dst_vec3762 = if_res2441;
    if (false !== false) {
      var if_res2442 = 0;
    } else {
      var if_res2442 = start3759;
    }
    var dst_start3763 = if_res2442;
    if (M1.unsafe_fx_eq_(n3761, 0) !== false) {
      var if_res2463 = M0.rvoid();
    } else {
      if (false !== false) {
        var work_vec3764 = M0.make_vector(n3761 + M0.ceiling(n3761 / 2), true);
        var loop3765 = function(i3766) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M1.unsafe_fx_lt_(i3766, n3761) !== false) {
            var x3767 = M1.unsafe_vector_ref(vec3757, M1.unsafe_fx_plus_(i3766, start3759));
            M1.unsafe_vector_set_bang_(work_vec3764, i3766, M0.cons(false(x3767), x3767));
            var if_res2443 = loop3765(M1.unsafe_fx_plus_(i3766, 1));
          } else {
            var if_res2443 = M0.rvoid();
          }
          return if_res2443;
        };
        loop3765(0);
        generic_sort_by_key3593(work_vec3764, less_than_p3758, n3761, M1.unsafe_car);
        var loop3768 = function(i3769) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M1.unsafe_fx_lt_(i3769, n3761) !== false) {
            M1.unsafe_vector_set_bang_(dst_vec3762, M1.unsafe_fx_plus_(i3769, dst_start3763), M1.unsafe_cdr(M1.unsafe_vector_ref(work_vec3764, i3769)));
            var if_res2444 = loop3768(M1.unsafe_fx_plus_(i3769, 1));
          } else {
            var if_res2444 = M0.rvoid();
          }
          return if_res2444;
        };
        var if_res2462 = loop3768(0);
      } else {
        var loop3770 = function(prev_val3771, next_index3772) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          var or_part3773 = M1.unsafe_fx_eq_(next_index3772, end3760);
          if (or_part3773 !== false) {
            var if_res2447 = or_part3773;
          } else {
            var next_val3774 = M1.unsafe_vector_ref(vec3757, next_index3772);
            if (false !== false) {
              var if_res2445 = less_than_p3758(false(next_val3774), false(prev_val3771));
            } else {
              var if_res2445 = less_than_p3758(next_val3774, prev_val3771);
            }
            if (M0.not(if_res2445) !== false) {
              var if_res2446 = loop3770(next_val3774, M1.unsafe_fx_plus_(next_index3772, 1));
            } else {
              var if_res2446 = false;
            }
            var if_res2447 = if_res2446;
          }
          return if_res2447;
        };
        if (loop3770(M1.unsafe_vector_ref(vec3757, start3759), M1.unsafe_fx_plus_(start3759, 1)) !== false) {
          if (false !== false) {
            var if_res2448 = M0.__rjs_quoted__.vector_copy_bang_(dst_vec3762, dst_start3763, vec3757, start3759, end3760);
          } else {
            var if_res2448 = M0.rvoid();
          }
          var if_res2461 = if_res2448;
        } else {
          if (M1.unsafe_fx_lt__eq_(n3761, 3) !== false) {
            if (false !== false) {
              var if_res2449 = M0.__rjs_quoted__.vector_copy_bang_(dst_vec3762, dst_start3763, vec3757, start3759, end3760);
            } else {
              var if_res2449 = M0.rvoid();
            }
            if_res2449;
            if (M1.unsafe_fx_eq_(n3761, 1) !== false) {
              var if_res2459 = M0.rvoid();
            } else {
              if (M1.unsafe_fx_eq_(n3761, 2) !== false) {
                var tmp3775 = M1.unsafe_vector_ref(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 0));
                M1.unsafe_vector_set_bang_(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 0), M1.unsafe_vector_ref(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 1)));
                var if_res2458 = M1.unsafe_vector_set_bang_(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 1), tmp3775);
              } else {
                var a3776 = M1.unsafe_vector_ref(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 0));
                var b3777 = M1.unsafe_vector_ref(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 1));
                var c3778 = M1.unsafe_vector_ref(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 2));
                if (false !== false) {
                  var if_res2450 = less_than_p3758(false(b3777), false(a3776));
                } else {
                  var if_res2450 = less_than_p3758(b3777, a3776);
                }
                if (if_res2450 !== false) {
                  if (false !== false) {
                    var if_res2451 = less_than_p3758(false(c3778), false(b3777));
                  } else {
                    var if_res2451 = less_than_p3758(c3778, b3777);
                  }
                  if (if_res2451 !== false) {
                    M1.unsafe_vector_set_bang_(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 0), c3778);
                    var if_res2454 = M1.unsafe_vector_set_bang_(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 2), a3776);
                  } else {
                    if (false !== false) {
                      var if_res2452 = less_than_p3758(false(c3778), false(a3776));
                    } else {
                      var if_res2452 = less_than_p3758(c3778, a3776);
                    }
                    if (if_res2452 !== false) {
                      M1.unsafe_vector_set_bang_(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 0), b3777);
                      M1.unsafe_vector_set_bang_(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 1), c3778);
                      var if_res2453 = M1.unsafe_vector_set_bang_(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 2), a3776);
                    } else {
                      M1.unsafe_vector_set_bang_(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 0), b3777);
                      var if_res2453 = M1.unsafe_vector_set_bang_(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 1), a3776);
                    }
                    var if_res2454 = if_res2453;
                  }
                  var if_res2457 = if_res2454;
                } else {
                  if (false !== false) {
                    var if_res2455 = less_than_p3758(false(c3778), false(a3776));
                  } else {
                    var if_res2455 = less_than_p3758(c3778, a3776);
                  }
                  if (if_res2455 !== false) {
                    M1.unsafe_vector_set_bang_(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 0), c3778);
                    M1.unsafe_vector_set_bang_(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 1), a3776);
                    var if_res2456 = M1.unsafe_vector_set_bang_(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 2), b3777);
                  } else {
                    M1.unsafe_vector_set_bang_(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 1), c3778);
                    var if_res2456 = M1.unsafe_vector_set_bang_(dst_vec3762, M1.unsafe_fx_plus_(dst_start3763, 2), b3777);
                  }
                  var if_res2457 = if_res2456;
                }
                var if_res2458 = if_res2457;
              }
              var if_res2459 = if_res2458;
            }
            var if_res2460 = if_res2459;
          } else {
            var work_vec3779 = M0.make_vector(n3761 + M0.ceiling(n3761 / 2), false);
            M0.__rjs_quoted__.vector_copy_bang_(work_vec3779, 0, vec3757, start3759, end3760);
            generic_sort3537(work_vec3779, less_than_p3758, n3761);
            var if_res2460 = M0.__rjs_quoted__.vector_copy_bang_(dst_vec3762, dst_start3763, work_vec3779, 0, n3761);
          }
          var if_res2461 = if_res2460;
        }
        var if_res2462 = if_res2461;
      }
      var if_res2463 = if_res2462;
    }
    if_res2463;
    if (false !== false) {
      var if_res2464 = dst_vec3762;
    } else {
      var if_res2464 = M0.rvoid();
    }
    return if_res2464;
  };
  var cl2439 = function(vec3780, less_than_p3781, start3782, end3783, getkey3784, cache_keys_p3785) {
    if (arguments.length !== 6) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (getkey3784 !== false) {
      var if_res2465 = M0.not(M0.eq_p(M0.values, getkey3784));
    } else {
      var if_res2465 = false;
    }
    if (if_res2465 !== false) {
      var n3786 = end3783 - start3782;
      if (false !== false) {
        var if_res2466 = M0.make_vector(n3786);
      } else {
        var if_res2466 = vec3780;
      }
      var dst_vec3787 = if_res2466;
      if (false !== false) {
        var if_res2467 = 0;
      } else {
        var if_res2467 = start3782;
      }
      var dst_start3788 = if_res2467;
      if (M1.unsafe_fx_eq_(n3786, 0) !== false) {
        var if_res2488 = M0.rvoid();
      } else {
        if (cache_keys_p3785 !== false) {
          var work_vec3789 = M0.make_vector(n3786 + M0.ceiling(n3786 / 2), true);
          var loop3790 = function(i3791) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (M1.unsafe_fx_lt_(i3791, n3786) !== false) {
              var x3792 = M1.unsafe_vector_ref(vec3780, M1.unsafe_fx_plus_(i3791, start3782));
              M1.unsafe_vector_set_bang_(work_vec3789, i3791, M0.cons(getkey3784(x3792), x3792));
              var if_res2468 = loop3790(M1.unsafe_fx_plus_(i3791, 1));
            } else {
              var if_res2468 = M0.rvoid();
            }
            return if_res2468;
          };
          loop3790(0);
          generic_sort_by_key3593(work_vec3789, less_than_p3781, n3786, M1.unsafe_car);
          var loop3793 = function(i3794) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (M1.unsafe_fx_lt_(i3794, n3786) !== false) {
              M1.unsafe_vector_set_bang_(dst_vec3787, M1.unsafe_fx_plus_(i3794, dst_start3788), M1.unsafe_cdr(M1.unsafe_vector_ref(work_vec3789, i3794)));
              var if_res2469 = loop3793(M1.unsafe_fx_plus_(i3794, 1));
            } else {
              var if_res2469 = M0.rvoid();
            }
            return if_res2469;
          };
          var if_res2487 = loop3793(0);
        } else {
          var loop3795 = function(prev_val3796, next_index3797) {
            if (arguments.length !== 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            var or_part3798 = M1.unsafe_fx_eq_(next_index3797, end3783);
            if (or_part3798 !== false) {
              var if_res2472 = or_part3798;
            } else {
              var next_val3799 = M1.unsafe_vector_ref(vec3780, next_index3797);
              if (getkey3784 !== false) {
                var if_res2470 = less_than_p3781(getkey3784(next_val3799), getkey3784(prev_val3796));
              } else {
                var if_res2470 = less_than_p3781(next_val3799, prev_val3796);
              }
              if (M0.not(if_res2470) !== false) {
                var if_res2471 = loop3795(next_val3799, M1.unsafe_fx_plus_(next_index3797, 1));
              } else {
                var if_res2471 = false;
              }
              var if_res2472 = if_res2471;
            }
            return if_res2472;
          };
          if (loop3795(M1.unsafe_vector_ref(vec3780, start3782), M1.unsafe_fx_plus_(start3782, 1)) !== false) {
            if (false !== false) {
              var if_res2473 = M0.__rjs_quoted__.vector_copy_bang_(dst_vec3787, dst_start3788, vec3780, start3782, end3783);
            } else {
              var if_res2473 = M0.rvoid();
            }
            var if_res2486 = if_res2473;
          } else {
            if (M1.unsafe_fx_lt__eq_(n3786, 3) !== false) {
              if (false !== false) {
                var if_res2474 = M0.__rjs_quoted__.vector_copy_bang_(dst_vec3787, dst_start3788, vec3780, start3782, end3783);
              } else {
                var if_res2474 = M0.rvoid();
              }
              if_res2474;
              if (M1.unsafe_fx_eq_(n3786, 1) !== false) {
                var if_res2484 = M0.rvoid();
              } else {
                if (M1.unsafe_fx_eq_(n3786, 2) !== false) {
                  var tmp3800 = M1.unsafe_vector_ref(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 0));
                  M1.unsafe_vector_set_bang_(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 0), M1.unsafe_vector_ref(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 1)));
                  var if_res2483 = M1.unsafe_vector_set_bang_(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 1), tmp3800);
                } else {
                  var a3801 = M1.unsafe_vector_ref(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 0));
                  var b3802 = M1.unsafe_vector_ref(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 1));
                  var c3803 = M1.unsafe_vector_ref(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 2));
                  if (getkey3784 !== false) {
                    var if_res2475 = less_than_p3781(getkey3784(b3802), getkey3784(a3801));
                  } else {
                    var if_res2475 = less_than_p3781(b3802, a3801);
                  }
                  if (if_res2475 !== false) {
                    if (getkey3784 !== false) {
                      var if_res2476 = less_than_p3781(getkey3784(c3803), getkey3784(b3802));
                    } else {
                      var if_res2476 = less_than_p3781(c3803, b3802);
                    }
                    if (if_res2476 !== false) {
                      M1.unsafe_vector_set_bang_(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 0), c3803);
                      var if_res2479 = M1.unsafe_vector_set_bang_(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 2), a3801);
                    } else {
                      if (getkey3784 !== false) {
                        var if_res2477 = less_than_p3781(getkey3784(c3803), getkey3784(a3801));
                      } else {
                        var if_res2477 = less_than_p3781(c3803, a3801);
                      }
                      if (if_res2477 !== false) {
                        M1.unsafe_vector_set_bang_(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 0), b3802);
                        M1.unsafe_vector_set_bang_(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 1), c3803);
                        var if_res2478 = M1.unsafe_vector_set_bang_(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 2), a3801);
                      } else {
                        M1.unsafe_vector_set_bang_(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 0), b3802);
                        var if_res2478 = M1.unsafe_vector_set_bang_(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 1), a3801);
                      }
                      var if_res2479 = if_res2478;
                    }
                    var if_res2482 = if_res2479;
                  } else {
                    if (getkey3784 !== false) {
                      var if_res2480 = less_than_p3781(getkey3784(c3803), getkey3784(a3801));
                    } else {
                      var if_res2480 = less_than_p3781(c3803, a3801);
                    }
                    if (if_res2480 !== false) {
                      M1.unsafe_vector_set_bang_(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 0), c3803);
                      M1.unsafe_vector_set_bang_(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 1), a3801);
                      var if_res2481 = M1.unsafe_vector_set_bang_(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 2), b3802);
                    } else {
                      M1.unsafe_vector_set_bang_(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 1), c3803);
                      var if_res2481 = M1.unsafe_vector_set_bang_(dst_vec3787, M1.unsafe_fx_plus_(dst_start3788, 2), b3802);
                    }
                    var if_res2482 = if_res2481;
                  }
                  var if_res2483 = if_res2482;
                }
                var if_res2484 = if_res2483;
              }
              var if_res2485 = if_res2484;
            } else {
              var work_vec3804 = M0.make_vector(n3786 + M0.ceiling(n3786 / 2), false);
              M0.__rjs_quoted__.vector_copy_bang_(work_vec3804, 0, vec3780, start3782, end3783);
              generic_sort_by_key3593(work_vec3804, less_than_p3781, n3786, getkey3784);
              var if_res2485 = M0.__rjs_quoted__.vector_copy_bang_(dst_vec3787, dst_start3788, work_vec3804, 0, n3786);
            }
            var if_res2486 = if_res2485;
          }
          var if_res2487 = if_res2486;
        }
        var if_res2488 = if_res2487;
      }
      if_res2488;
      if (false !== false) {
        var if_res2489 = dst_vec3787;
      } else {
        var if_res2489 = M0.rvoid();
      }
      var if_res2490 = if_res2489;
    } else {
      var if_res2490 = vector_sort_bang_(vec3780, less_than_p3781, start3782, end3783);
    }
    return if_res2490;
  };
  var let_result2596 = M0.values(temp2595, temp2544, $rjs_core.attachProcedureArity(function() {
    var fixed_lam2440 = {
      '4': cl2438,
      '6': cl2439
    }[arguments.length];
    if (fixed_lam2440 !== undefined) {
      return fixed_lam2440.apply(null, arguments);
    } else {
      return M0.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [4, 6]));
  var sort = let_result2596.getAt(0);
  var vector_sort = let_result2596.getAt(1);
  var vector_sort_bang_ = let_result2596.getAt(2);
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get vector_sort_bang_() {
      return vector_sort_bang_;
    },
    get vector_sort() {
      return vector_sort;
    },
    get sort() {
      return sort;
    }
  };
})();
var $__collects_47_racket_47_private_47_pre_45_base_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/racket/private/pre-base.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__collects_47_racket_47_private_47_kw_46_rkt_46_js__;
  var M1 = $__runtime_47_kernel_46_rkt_46_js__;
  var new_apply_proc = M0.make_keyword_procedure($rjs_core.attachProcedureArity(function(kws1911, kw_args1912, proc1913, args1914) {
    for (var rest19151171 = [],
        $__1 = 4; $__1 < arguments.length; $__1++)
      rest19151171[$__1 - 4] = arguments[$__1];
    if (arguments.length < 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var rest1915 = $rjs_core.Pair.listFromArray(rest19151171);
    return M0.keyword_apply(proc1913, kws1911, kw_args1912, M1.apply(M1.list_times_, args1914, rest1915));
  }), M1.apply);
  var new_keyword_apply = M0.make_keyword_procedure($rjs_core.attachProcedureArity(function(kws1916, kw_args1917, proc1918, orig_kws1919, orig_kw_args1920, args1921) {
    for (var rest19221172 = [],
        $__2 = 6; $__2 < arguments.length; $__2++)
      rest19221172[$__2 - 6] = arguments[$__2];
    if (arguments.length < 6) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var rest1922 = $rjs_core.Pair.listFromArray(rest19221172);
    var loop1925 = function(kws1926, kw_args1927, kws21928, kw_args21929, swapped_p1930) {
      if (arguments.length !== 5) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M1.null_p(kws1926) !== false) {
        var if_res1177 = M1.values(kws21928, kw_args21929);
      } else {
        if (M1.null_p(kws21928) !== false) {
          var if_res1176 = M1.values(kws1926, kw_args1927);
        } else {
          if (M1.keyword_lt__p(M1.car(kws1926), M1.car(kws21928)) !== false) {
            var let_result1173 = loop1925(M1.cdr(kws1926), M1.cdr(kw_args1927), kws21928, kw_args21929, false);
            var res_kws1931 = let_result1173.getAt(0);
            var res_kw_args1932 = let_result1173.getAt(1);
            var if_res1175 = M1.values(M1.cons(M1.car(kws1926), res_kws1931), M1.cons(M1.car(kw_args1927), res_kw_args1932));
          } else {
            if (swapped_p1930 !== false) {
              var if_res1174 = M1.raise_mismatch_error($rjs_core.Symbol.make("keyword-apply"), $rjs_core.UString.make("keyword duplicated in list and direct keyword arguments: "), M1.car(kws1926));
            } else {
              var if_res1174 = loop1925(kws21928, kw_args21929, kws1926, kw_args1927, true);
            }
            var if_res1175 = if_res1174;
          }
          var if_res1176 = if_res1175;
        }
        var if_res1177 = if_res1176;
      }
      return if_res1177;
    };
    var let_result1178 = loop1925(kws1916, kw_args1917, orig_kws1919, orig_kw_args1920, false);
    var kws1923 = let_result1178.getAt(0);
    var kw_args1924 = let_result1178.getAt(1);
    return M0.keyword_apply(proc1918, kws1923, kw_args1924, M1.apply(M1.list_times_, args1921, rest1922));
  }), M0.keyword_apply);
  var double_flonum_p = function(x1933) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M1.__rjs_quoted__.flonum_p(x1933);
  };
  var cl1179 = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M1.random();
  };
  var cl1180 = function(x1935) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M1.random(x1935);
  };
  var cl1181 = function(x1936, y1937) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.exact_integer_p(y1937) !== false) {
      if (M1.exact_integer_p(x1936) !== false) {
        var if_res1184 = M1.rvoid();
      } else {
        var if_res1184 = M1.raise_argument_error($rjs_core.Symbol.make("random"), $rjs_core.UString.make("exact-integer?"), 0, x1936, y1937);
      }
      if_res1184;
      if (M1.__lt_(x1936, y1937) !== false) {
        var if_res1185 = M1.rvoid();
      } else {
        var if_res1185 = M1.raise_argument_error($rjs_core.Symbol.make("random"), M1.string_append($rjs_core.UString.make("(>/c "), M1.number__gt_string(x1936), $rjs_core.UString.make(")")), 1, x1936, y1937);
      }
      if_res1185;
      var d1938 = y1937 - x1936;
      if (M1.__lt__eq_(d1938, 4294967087) !== false) {
        var if_res1186 = M1.rvoid();
      } else {
        var if_res1186 = M1.raise_arguments_error($rjs_core.Symbol.make("random"), $rjs_core.UString.make("difference between arguments is greater than 4294967087"), $rjs_core.UString.make("min"), x1936, $rjs_core.UString.make("max"), y1937);
      }
      if_res1186;
      var if_res1191 = x1936 + M1.random(d1938);
    } else {
      if (M1.__rjs_quoted__.pseudo_random_generator_p(y1937) !== false) {
        if (M1.exact_integer_p(x1936) !== false) {
          var if_res1187 = M1.__lt__eq_(1, x1936, 4294967087);
        } else {
          var if_res1187 = false;
        }
        if (if_res1187 !== false) {
          var if_res1188 = M1.rvoid();
        } else {
          var if_res1188 = M1.raise_argument_error($rjs_core.Symbol.make("random"), $rjs_core.UString.make("(integer-in 1 4294967087)"), 0, x1936, y1937);
        }
        if_res1188;
        var if_res1190 = M1.random(x1936, y1937);
      } else {
        if (M1.exact_integer_p(x1936) !== false) {
          var if_res1189 = M1.rvoid();
        } else {
          var if_res1189 = M1.raise_argument_error($rjs_core.Symbol.make("random"), $rjs_core.UString.make("exact-integer?"), 0, x1936, y1937);
        }
        if_res1189;
        var if_res1190 = M1.raise_argument_error($rjs_core.Symbol.make("random"), $rjs_core.UString.make("(or/c exact-integer? pseudo-random-generator?)"), 1, x1936, y1937);
      }
      var if_res1191 = if_res1190;
    }
    return if_res1191;
  };
  var cl1182 = function(min1939, max1940, prng1941) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.exact_integer_p(min1939) !== false) {
      var if_res1192 = M1.rvoid();
    } else {
      var if_res1192 = M1.raise_argument_error($rjs_core.Symbol.make("random"), $rjs_core.UString.make("exact-integer?"), 0, min1939, max1940, prng1941);
    }
    if_res1192;
    if (M1.exact_integer_p(max1940) !== false) {
      var if_res1193 = M1.rvoid();
    } else {
      var if_res1193 = M1.raise_argument_error($rjs_core.Symbol.make("random"), $rjs_core.UString.make("exact-integer?"), 1, min1939, max1940, prng1941);
    }
    if_res1193;
    if (M1.__lt_(min1939, max1940) !== false) {
      var if_res1194 = M1.rvoid();
    } else {
      var if_res1194 = M1.raise_argument_error($rjs_core.Symbol.make("random"), M1.string_append($rjs_core.UString.make("(>/c "), M1.number__gt_string(min1939), $rjs_core.UString.make(")")), 1, min1939, max1940, prng1941);
    }
    if_res1194;
    var d1942 = max1940 - min1939;
    if (M1.__lt__eq_(d1942, 4294967087) !== false) {
      var if_res1195 = M1.rvoid();
    } else {
      var if_res1195 = M1.raise_arguments_error($rjs_core.Symbol.make("random"), $rjs_core.UString.make("difference between first and second arguments is greater than 4294967087"), $rjs_core.UString.make("min"), min1939, $rjs_core.UString.make("max"), max1940, $rjs_core.UString.make("rand-gen"), prng1941);
    }
    if_res1195;
    if (M1.__rjs_quoted__.pseudo_random_generator_p(prng1941) !== false) {
      var if_res1196 = M1.rvoid();
    } else {
      var if_res1196 = M1.raise_argument_error($rjs_core.Symbol.make("random"), $rjs_core.UString.make("pseudo-random-generator?"), 2, min1939, max1940, prng1941);
    }
    if_res1196;
    return min1939 + M1.random(d1942, prng1941);
  };
  var random1934 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1183 = {
      '0': cl1179,
      '1': cl1180,
      '2': cl1181,
      '3': cl1182
    }[arguments.length];
    if (fixed_lam1183 !== undefined) {
      return fixed_lam1183.apply(null, arguments);
    } else {
      return M1.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [0, 1, 2, 3]);
  var __random = random1934;
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get random() {
      return __random;
    },
    get double_flonum_p() {
      return double_flonum_p;
    },
    get keyword_apply() {
      return new_keyword_apply;
    },
    get new_apply_proc() {
      return new_apply_proc;
    }
  };
})();
var $__collects_47_racket_47_private_47_list_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/racket/private/list.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__collects_47_racket_47_private_47_reverse_46_rkt_46_js__;
  var M1 = $__collects_47_racket_47_private_47_kw_46_rkt_46_js__;
  var M2 = $__collects_47_racket_47_private_47_map_46_rkt_46_js__;
  var M3 = $__collects_47_racket_47_private_47_sort_46_rkt_46_js__;
  var M4 = $__runtime_47_kernel_46_rkt_46_js__;
  var M5 = $__collects_47_racket_47_private_47_pre_45_base_46_rkt_46_js__;
  var M6 = $__runtime_47_unsafe_46_rkt_46_js__;
  var sort7 = function(cache_keys_p22974, key12975, lst52976, less_p62977) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var lst2978 = lst52976;
    var less_p2979 = less_p62977;
    if (false !== false) {
      var if_res1966 = false;
    } else {
      var if_res1966 = key12975;
    }
    var getkey2980 = if_res1966;
    if (false !== false) {
      var if_res1967 = false;
    } else {
      var if_res1967 = cache_keys_p22974;
    }
    var cache_keys_p2981 = if_res1967;
    if (M4.list_p(lst2978) !== false) {
      var if_res1968 = M4.rvoid();
    } else {
      var if_res1968 = M4.raise_argument_error($rjs_core.Symbol.make("sort"), $rjs_core.UString.make("list?"), lst2978);
    }
    if_res1968;
    if (M4.procedure_p(less_p2979) !== false) {
      var if_res1969 = M4.procedure_arity_includes_p(less_p2979, 2);
    } else {
      var if_res1969 = false;
    }
    if (if_res1969 !== false) {
      var if_res1970 = M4.rvoid();
    } else {
      var if_res1970 = M4.raise_argument_error($rjs_core.Symbol.make("sort"), $rjs_core.UString.make("(any/c any/c . -> . any/c)"), less_p2979);
    }
    if_res1970;
    if (getkey2980 !== false) {
      if (M4.procedure_p(getkey2980) !== false) {
        var if_res1971 = M4.procedure_arity_includes_p(getkey2980, 1);
      } else {
        var if_res1971 = false;
      }
      var if_res1972 = M4.not(if_res1971);
    } else {
      var if_res1972 = false;
    }
    if (if_res1972 !== false) {
      var if_res1973 = M4.raise_argument_error($rjs_core.Symbol.make("sort"), $rjs_core.UString.make("(any/c . -> . any/c)"), getkey2980);
    } else {
      var if_res1973 = M4.rvoid();
    }
    if_res1973;
    if (getkey2980 !== false) {
      var if_res1974 = M3.sort(lst2978, less_p2979, getkey2980, cache_keys_p2981);
    } else {
      var if_res1974 = M3.sort(lst2978, less_p2979);
    }
    return if_res1974;
  };
  var unpack8 = function(given_kws2982, given_args2983, lst52984, less_p62985) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.pair_p(given_kws2982) !== false) {
      var if_res1975 = M4.eq_p($rjs_core.Keyword.make("cache-keys?"), M4.car(given_kws2982));
    } else {
      var if_res1975 = false;
    }
    var cache_keys_p42986 = if_res1975;
    if (cache_keys_p42986 !== false) {
      var if_res1976 = M4.car(given_args2983);
    } else {
      var if_res1976 = false;
    }
    var cache_keys_p22987 = if_res1976;
    if (cache_keys_p42986 !== false) {
      var if_res1977 = M4.cdr(given_kws2982);
    } else {
      var if_res1977 = given_kws2982;
    }
    var given_kws2988 = if_res1977;
    if (cache_keys_p42986 !== false) {
      var if_res1978 = M4.cdr(given_args2983);
    } else {
      var if_res1978 = given_args2983;
    }
    var given_args2989 = if_res1978;
    var key32990 = M4.pair_p(given_kws2988);
    if (key32990 !== false) {
      var if_res1979 = M4.car(given_args2989);
    } else {
      var if_res1979 = false;
    }
    var key12991 = if_res1979;
    return sort7(cache_keys_p22987, key12991, lst52984, less_p62985);
  };
  var cl1983 = function(given_kws2998, given_args2999, lst3000, less_p3001) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack8(given_kws2998, given_args2999, lst3000, less_p3001);
  };
  var temp1985 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1984 = {'4': cl1983}[arguments.length];
    if (fixed_lam1984 !== undefined) {
      return fixed_lam1984.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [4]);
  var temp1982 = $rjs_core.Pair.makeList($rjs_core.Keyword.make("cache-keys?"), $rjs_core.Keyword.make("key"));
  var cl1980 = function(lst3003, less_p3004) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack8(M4.rnull, M4.rnull, lst3003, less_p3004);
  };
  var sort3002 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1981 = {'2': cl1980}[arguments.length];
    if (fixed_lam1981 !== undefined) {
      return fixed_lam1981.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2]);
  var sort9 = M1.__rjs_quoted__.make_optional_keyword_procedure(function(given_kws2992, given_argc2993) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.__eq_(given_argc2993, 4) !== false) {
      var l12994 = given_kws2992;
      if (M4.null_p(l12994) !== false) {
        var if_res1987 = l12994;
      } else {
        if (M4.eq_p(M4.car(l12994), $rjs_core.Keyword.make("cache-keys?")) !== false) {
          var if_res1986 = M4.cdr(l12994);
        } else {
          var if_res1986 = l12994;
        }
        var if_res1987 = if_res1986;
      }
      var l12995 = if_res1987;
      var l12996 = l12995;
      if (M4.null_p(l12996) !== false) {
        var if_res1989 = l12996;
      } else {
        if (M4.eq_p(M4.car(l12996), $rjs_core.Keyword.make("key")) !== false) {
          var if_res1988 = M4.cdr(l12996);
        } else {
          var if_res1988 = l12996;
        }
        var if_res1989 = if_res1988;
      }
      var l12997 = if_res1989;
      var if_res1990 = M4.null_p(l12997);
    } else {
      var if_res1990 = false;
    }
    return if_res1990;
  }, temp1985, M4.rnull, temp1982, sort3002);
  var do_remove = function(who3005, item3006, list3007, equal_p3008) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.list_p(list3007) !== false) {
      var if_res1991 = M4.rvoid();
    } else {
      var if_res1991 = M4.raise_argument_error(who3005, $rjs_core.UString.make("list?"), list3007);
    }
    if_res1991;
    var loop3009 = function(list3010) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.null_p(list3010) !== false) {
        var if_res1993 = M4.rnull;
      } else {
        if (equal_p3008(item3006, M4.car(list3010)) !== false) {
          var if_res1992 = M4.cdr(list3010);
        } else {
          var if_res1992 = M4.cons(M4.car(list3010), loop3009(M4.cdr(list3010)));
        }
        var if_res1993 = if_res1992;
      }
      return if_res1993;
    };
    return loop3009(list3007);
  };
  var cl1994 = function(item3011, list3012) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return do_remove($rjs_core.Symbol.make("remove"), item3011, list3012, M4.equal_p);
  };
  var cl1995 = function(item3013, list3014, equal_p3015) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.procedure_p(equal_p3015) !== false) {
      var if_res1997 = M4.procedure_arity_includes_p(equal_p3015, 2);
    } else {
      var if_res1997 = false;
    }
    if (if_res1997 !== false) {
      var if_res1998 = M4.rvoid();
    } else {
      var if_res1998 = M4.raise_argument_error($rjs_core.Symbol.make("remove"), $rjs_core.UString.make("(any/c any/c . -> . any/c)"), equal_p3015);
    }
    if_res1998;
    return do_remove($rjs_core.Symbol.make("remove"), item3013, list3014, equal_p3015);
  };
  var remove = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1996 = {
      '2': cl1994,
      '3': cl1995
    }[arguments.length];
    if (fixed_lam1996 !== undefined) {
      return fixed_lam1996.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var remq = function(item3016, list3017) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return do_remove($rjs_core.Symbol.make("remq"), item3016, list3017, M4.eq_p);
  };
  var remv = function(item3018, list3019) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return do_remove($rjs_core.Symbol.make("remv"), item3018, list3019, M4.eqv_p);
  };
  var do_remove_times_ = function(who3020, l3021, r3022, equal_p3023) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.list_p(l3021) !== false) {
      var if_res1999 = M4.rvoid();
    } else {
      var if_res1999 = M4.raise_argument_error(who3020, $rjs_core.UString.make("list?"), l3021);
    }
    if_res1999;
    if (M4.list_p(r3022) !== false) {
      var if_res2000 = M4.rvoid();
    } else {
      var if_res2000 = M4.raise_argument_error(who3020, $rjs_core.UString.make("list?"), r3022);
    }
    if_res2000;
    var rloop3024 = function(r3025) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.null_p(r3025) !== false) {
        var if_res2003 = M4.rnull;
      } else {
        var first_r3026 = M4.car(r3025);
        var loop3027 = function(l_rest3028) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M4.null_p(l_rest3028) !== false) {
            var if_res2002 = M4.cons(first_r3026, rloop3024(M4.cdr(r3025)));
          } else {
            if (equal_p3023(M4.car(l_rest3028), first_r3026) !== false) {
              var if_res2001 = rloop3024(M4.cdr(r3025));
            } else {
              var if_res2001 = loop3027(M4.cdr(l_rest3028));
            }
            var if_res2002 = if_res2001;
          }
          return if_res2002;
        };
        var if_res2003 = loop3027(l3021);
      }
      return if_res2003;
    };
    return rloop3024(r3022);
  };
  var cl2004 = function(l3029, r3030) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return do_remove_times_($rjs_core.Symbol.make("remove*"), l3029, r3030, M4.equal_p);
  };
  var cl2005 = function(l3031, r3032, equal_p3033) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.procedure_p(equal_p3033) !== false) {
      var if_res2007 = M4.procedure_arity_includes_p(equal_p3033, 2);
    } else {
      var if_res2007 = false;
    }
    if (if_res2007 !== false) {
      var if_res2008 = M4.rvoid();
    } else {
      var if_res2008 = M4.raise_argument_error($rjs_core.Symbol.make("remove*"), $rjs_core.UString.make("(any/c any/c . -> . any/c)"), equal_p3033);
    }
    if_res2008;
    return do_remove_times_($rjs_core.Symbol.make("remove*"), l3031, r3032, equal_p3033);
  };
  var remove_times_ = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2006 = {
      '2': cl2004,
      '3': cl2005
    }[arguments.length];
    if (fixed_lam2006 !== undefined) {
      return fixed_lam2006.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var remq_times_ = function(l3034, r3035) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return do_remove_times_($rjs_core.Symbol.make("remq*"), l3034, r3035, M4.eq_p);
  };
  var remv_times_ = function(l3036, r3037) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return do_remove_times_($rjs_core.Symbol.make("remv*"), l3036, r3037, M4.eqv_p);
  };
  var memf = function(f3038, list3039) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.procedure_p(f3038) !== false) {
      var if_res2009 = M4.procedure_arity_includes_p(f3038, 1);
    } else {
      var if_res2009 = false;
    }
    if (if_res2009 !== false) {
      var if_res2010 = M4.rvoid();
    } else {
      var if_res2010 = M4.raise_argument_error($rjs_core.Symbol.make("memf"), $rjs_core.UString.make("(any/c . -> any/c)"), f3038);
    }
    if_res2010;
    var loop3040 = function(l3041) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.null_p(l3041) !== false) {
        var if_res2013 = false;
      } else {
        if (M4.not(M4.pair_p(l3041)) !== false) {
          var if_res2012 = M4.raise_mismatch_error($rjs_core.Symbol.make("memf"), $rjs_core.UString.make("not a proper list: "), list3039);
        } else {
          if (f3038(M4.car(l3041)) !== false) {
            var if_res2011 = l3041;
          } else {
            var if_res2011 = loop3040(M4.cdr(l3041));
          }
          var if_res2012 = if_res2011;
        }
        var if_res2013 = if_res2012;
      }
      return if_res2013;
    };
    return loop3040(list3039);
  };
  var findf = function(f3042, list3043) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.procedure_p(f3042) !== false) {
      var if_res2014 = M4.procedure_arity_includes_p(f3042, 1);
    } else {
      var if_res2014 = false;
    }
    if (if_res2014 !== false) {
      var if_res2015 = M4.rvoid();
    } else {
      var if_res2015 = M4.raise_argument_error($rjs_core.Symbol.make("findf"), $rjs_core.UString.make("(any/c . -> . any/c)"), f3042);
    }
    if_res2015;
    var loop3044 = function(l3045) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.null_p(l3045) !== false) {
        var if_res2018 = false;
      } else {
        if (M4.not(M4.pair_p(l3045)) !== false) {
          var if_res2017 = M4.raise_mismatch_error($rjs_core.Symbol.make("findf"), $rjs_core.UString.make("not a proper list: "), list3043);
        } else {
          var a3046 = M4.car(l3045);
          if (f3042(a3046) !== false) {
            var if_res2016 = a3046;
          } else {
            var if_res2016 = loop3044(M4.cdr(l3045));
          }
          var if_res2017 = if_res2016;
        }
        var if_res2018 = if_res2017;
      }
      return if_res2018;
    };
    return loop3044(list3043);
  };
  var bad_list = function(who3047, orig_l3048) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.raise_mismatch_error(who3047, $rjs_core.UString.make("not a proper list: "), orig_l3048);
  };
  var bad_item = function(who3049, a3050, orig_l3051) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.raise_mismatch_error(who3049, $rjs_core.UString.make("non-pair found in list: "), a3050, $rjs_core.UString.make(" in "), orig_l3051);
  };
  var assq3052 = function(x3056, l3057) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop3058 = function(l3059, t3060) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.pair_p(l3059) !== false) {
        var a3061 = M6.unsafe_car(l3059);
        if (M4.pair_p(a3061) !== false) {
          if (M4.eq_p(x3056, M6.unsafe_car(a3061)) !== false) {
            var if_res2024 = a3061;
          } else {
            var l3062 = M6.unsafe_cdr(l3059);
            if (M4.pair_p(l3062) !== false) {
              var a3063 = M6.unsafe_car(l3062);
              if (M4.pair_p(a3063) !== false) {
                if (M4.eq_p(x3056, M6.unsafe_car(a3063)) !== false) {
                  var if_res2020 = a3063;
                } else {
                  var t3064 = M6.unsafe_cdr(t3060);
                  var l3065 = M6.unsafe_cdr(l3062);
                  if (M4.eq_p(l3065, t3064) !== false) {
                    var if_res2019 = bad_list($rjs_core.Symbol.make("assq"), l3057);
                  } else {
                    var if_res2019 = loop3058(l3065, t3064);
                  }
                  var if_res2020 = if_res2019;
                }
                var if_res2021 = if_res2020;
              } else {
                var if_res2021 = bad_item($rjs_core.Symbol.make("assq"), a3063, l3057);
              }
              var if_res2023 = if_res2021;
            } else {
              if (M4.null_p(l3062) !== false) {
                var if_res2022 = false;
              } else {
                var if_res2022 = bad_list($rjs_core.Symbol.make("assq"), l3057);
              }
              var if_res2023 = if_res2022;
            }
            var if_res2024 = if_res2023;
          }
          var if_res2025 = if_res2024;
        } else {
          var if_res2025 = bad_item($rjs_core.Symbol.make("assq"), a3061, l3057);
        }
        var if_res2027 = if_res2025;
      } else {
        if (M4.null_p(l3059) !== false) {
          var if_res2026 = false;
        } else {
          var if_res2026 = bad_list($rjs_core.Symbol.make("assq"), l3057);
        }
        var if_res2027 = if_res2026;
      }
      return if_res2027;
    };
    return loop3058(l3057, l3057);
  };
  var assv3053 = function(x3066, l3067) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop3068 = function(l3069, t3070) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.pair_p(l3069) !== false) {
        var a3071 = M6.unsafe_car(l3069);
        if (M4.pair_p(a3071) !== false) {
          if (M4.eqv_p(x3066, M6.unsafe_car(a3071)) !== false) {
            var if_res2033 = a3071;
          } else {
            var l3072 = M6.unsafe_cdr(l3069);
            if (M4.pair_p(l3072) !== false) {
              var a3073 = M6.unsafe_car(l3072);
              if (M4.pair_p(a3073) !== false) {
                if (M4.eqv_p(x3066, M6.unsafe_car(a3073)) !== false) {
                  var if_res2029 = a3073;
                } else {
                  var t3074 = M6.unsafe_cdr(t3070);
                  var l3075 = M6.unsafe_cdr(l3072);
                  if (M4.eq_p(l3075, t3074) !== false) {
                    var if_res2028 = bad_list($rjs_core.Symbol.make("assv"), l3067);
                  } else {
                    var if_res2028 = loop3068(l3075, t3074);
                  }
                  var if_res2029 = if_res2028;
                }
                var if_res2030 = if_res2029;
              } else {
                var if_res2030 = bad_item($rjs_core.Symbol.make("assv"), a3073, l3067);
              }
              var if_res2032 = if_res2030;
            } else {
              if (M4.null_p(l3072) !== false) {
                var if_res2031 = false;
              } else {
                var if_res2031 = bad_list($rjs_core.Symbol.make("assv"), l3067);
              }
              var if_res2032 = if_res2031;
            }
            var if_res2033 = if_res2032;
          }
          var if_res2034 = if_res2033;
        } else {
          var if_res2034 = bad_item($rjs_core.Symbol.make("assv"), a3071, l3067);
        }
        var if_res2036 = if_res2034;
      } else {
        if (M4.null_p(l3069) !== false) {
          var if_res2035 = false;
        } else {
          var if_res2035 = bad_list($rjs_core.Symbol.make("assv"), l3067);
        }
        var if_res2036 = if_res2035;
      }
      return if_res2036;
    };
    return loop3068(l3067, l3067);
  };
  var cl2037 = function(x3076, l3077) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop3078 = function(l3079, t3080) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.pair_p(l3079) !== false) {
        var a3081 = M6.unsafe_car(l3079);
        if (M4.pair_p(a3081) !== false) {
          if (M4.equal_p(x3076, M6.unsafe_car(a3081)) !== false) {
            var if_res2045 = a3081;
          } else {
            var l3082 = M6.unsafe_cdr(l3079);
            if (M4.pair_p(l3082) !== false) {
              var a3083 = M6.unsafe_car(l3082);
              if (M4.pair_p(a3083) !== false) {
                if (M4.equal_p(x3076, M6.unsafe_car(a3083)) !== false) {
                  var if_res2041 = a3083;
                } else {
                  var t3084 = M6.unsafe_cdr(t3080);
                  var l3085 = M6.unsafe_cdr(l3082);
                  if (M4.eq_p(l3085, t3084) !== false) {
                    var if_res2040 = bad_list($rjs_core.Symbol.make("assoc"), l3077);
                  } else {
                    var if_res2040 = loop3078(l3085, t3084);
                  }
                  var if_res2041 = if_res2040;
                }
                var if_res2042 = if_res2041;
              } else {
                var if_res2042 = bad_item($rjs_core.Symbol.make("assoc"), a3083, l3077);
              }
              var if_res2044 = if_res2042;
            } else {
              if (M4.null_p(l3082) !== false) {
                var if_res2043 = false;
              } else {
                var if_res2043 = bad_list($rjs_core.Symbol.make("assoc"), l3077);
              }
              var if_res2044 = if_res2043;
            }
            var if_res2045 = if_res2044;
          }
          var if_res2046 = if_res2045;
        } else {
          var if_res2046 = bad_item($rjs_core.Symbol.make("assoc"), a3081, l3077);
        }
        var if_res2048 = if_res2046;
      } else {
        if (M4.null_p(l3079) !== false) {
          var if_res2047 = false;
        } else {
          var if_res2047 = bad_list($rjs_core.Symbol.make("assoc"), l3077);
        }
        var if_res2048 = if_res2047;
      }
      return if_res2048;
    };
    return loop3078(l3077, l3077);
  };
  var cl2038 = function(x3086, l3087, is_equal_p3088) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.procedure_p(is_equal_p3088) !== false) {
      var if_res2049 = M4.procedure_arity_includes_p(is_equal_p3088, 2);
    } else {
      var if_res2049 = false;
    }
    if (if_res2049 !== false) {
      var if_res2050 = M4.rvoid();
    } else {
      var if_res2050 = M4.raise_argument_error($rjs_core.Symbol.make("assoc"), $rjs_core.UString.make("(any/c any/c . -> . any/c)"), is_equal_p3088);
    }
    if_res2050;
    var loop3089 = function(l3090, t3091) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.pair_p(l3090) !== false) {
        var a3092 = M6.unsafe_car(l3090);
        if (M4.pair_p(a3092) !== false) {
          if (is_equal_p3088(x3086, M6.unsafe_car(a3092)) !== false) {
            var if_res2056 = a3092;
          } else {
            var l3093 = M6.unsafe_cdr(l3090);
            if (M4.pair_p(l3093) !== false) {
              var a3094 = M6.unsafe_car(l3093);
              if (M4.pair_p(a3094) !== false) {
                if (is_equal_p3088(x3086, M6.unsafe_car(a3094)) !== false) {
                  var if_res2052 = a3094;
                } else {
                  var t3095 = M6.unsafe_cdr(t3091);
                  var l3096 = M6.unsafe_cdr(l3093);
                  if (M4.eq_p(l3096, t3095) !== false) {
                    var if_res2051 = bad_list($rjs_core.Symbol.make("assoc"), l3087);
                  } else {
                    var if_res2051 = loop3089(l3096, t3095);
                  }
                  var if_res2052 = if_res2051;
                }
                var if_res2053 = if_res2052;
              } else {
                var if_res2053 = bad_item($rjs_core.Symbol.make("assoc"), a3094, l3087);
              }
              var if_res2055 = if_res2053;
            } else {
              if (M4.null_p(l3093) !== false) {
                var if_res2054 = false;
              } else {
                var if_res2054 = bad_list($rjs_core.Symbol.make("assoc"), l3087);
              }
              var if_res2055 = if_res2054;
            }
            var if_res2056 = if_res2055;
          }
          var if_res2057 = if_res2056;
        } else {
          var if_res2057 = bad_item($rjs_core.Symbol.make("assoc"), a3092, l3087);
        }
        var if_res2059 = if_res2057;
      } else {
        if (M4.null_p(l3090) !== false) {
          var if_res2058 = false;
        } else {
          var if_res2058 = bad_list($rjs_core.Symbol.make("assoc"), l3087);
        }
        var if_res2059 = if_res2058;
      }
      return if_res2059;
    };
    return loop3089(l3087, l3087);
  };
  var assoc3054 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2039 = {
      '2': cl2037,
      '3': cl2038
    }[arguments.length];
    if (fixed_lam2039 !== undefined) {
      return fixed_lam2039.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var assf3055 = function(f3097, l3098) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.procedure_p(f3097) !== false) {
      var if_res2060 = M4.procedure_arity_includes_p(f3097, 1);
    } else {
      var if_res2060 = false;
    }
    if (if_res2060 !== false) {
      var if_res2061 = M4.rvoid();
    } else {
      var if_res2061 = M4.raise_argument_error($rjs_core.Symbol.make("assf"), $rjs_core.UString.make("(any/c . -> . any/c)"), f3097);
    }
    if_res2061;
    var loop3099 = function(l3100, t3101) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.pair_p(l3100) !== false) {
        var a3102 = M6.unsafe_car(l3100);
        if (M4.pair_p(a3102) !== false) {
          if ((function(_3103, a3104) {
            if (arguments.length !== 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return f3097(a3104);
          })(false, M6.unsafe_car(a3102)) !== false) {
            var if_res2067 = a3102;
          } else {
            var l3105 = M6.unsafe_cdr(l3100);
            if (M4.pair_p(l3105) !== false) {
              var a3106 = M6.unsafe_car(l3105);
              if (M4.pair_p(a3106) !== false) {
                if ((function(_3107, a3108) {
                  if (arguments.length !== 2) {
                    throw $rjs_core.racketContractError("arity mismatch");
                  } else {}
                  return f3097(a3108);
                })(false, M6.unsafe_car(a3106)) !== false) {
                  var if_res2063 = a3106;
                } else {
                  var t3109 = M6.unsafe_cdr(t3101);
                  var l3110 = M6.unsafe_cdr(l3105);
                  if (M4.eq_p(l3110, t3109) !== false) {
                    var if_res2062 = bad_list($rjs_core.Symbol.make("assf"), l3098);
                  } else {
                    var if_res2062 = loop3099(l3110, t3109);
                  }
                  var if_res2063 = if_res2062;
                }
                var if_res2064 = if_res2063;
              } else {
                var if_res2064 = bad_item($rjs_core.Symbol.make("assf"), a3106, l3098);
              }
              var if_res2066 = if_res2064;
            } else {
              if (M4.null_p(l3105) !== false) {
                var if_res2065 = false;
              } else {
                var if_res2065 = bad_list($rjs_core.Symbol.make("assf"), l3098);
              }
              var if_res2066 = if_res2065;
            }
            var if_res2067 = if_res2066;
          }
          var if_res2068 = if_res2067;
        } else {
          var if_res2068 = bad_item($rjs_core.Symbol.make("assf"), a3102, l3098);
        }
        var if_res2070 = if_res2068;
      } else {
        if (M4.null_p(l3100) !== false) {
          var if_res2069 = false;
        } else {
          var if_res2069 = bad_list($rjs_core.Symbol.make("assf"), l3098);
        }
        var if_res2070 = if_res2069;
      }
      return if_res2070;
    };
    return loop3099(l3098, l3098);
  };
  var let_result2071 = M4.values(assq3052, assv3053, assoc3054, assf3055);
  var assq = let_result2071.getAt(0);
  var assv = let_result2071.getAt(1);
  var assoc = let_result2071.getAt(2);
  var assf = let_result2071.getAt(3);
  var mapadd = function(f3111, l3112, last3113) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop3114 = function(l3115) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.null_p(l3115) !== false) {
        var if_res2072 = M4.list(last3113);
      } else {
        var if_res2072 = M4.cons(f3111(M4.car(l3115)), loop3114(M4.cdr(l3115)));
      }
      return if_res2072;
    };
    return loop3114(l3112);
  };
  var check_fold = function(name3116, proc3117, init3118, l3119, more3120) {
    if (arguments.length !== 5) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.procedure_p(proc3117) !== false) {
      var if_res2073 = M4.rvoid();
    } else {
      var if_res2073 = M4.apply(M4.raise_argument_error, name3116, $rjs_core.UString.make("procedure?"), 0, proc3117, init3118, l3119, more3120);
    }
    if_res2073;
    if (M4.list_p(l3119) !== false) {
      var if_res2074 = M4.rvoid();
    } else {
      var if_res2074 = M4.apply(M4.raise_argument_error, name3116, $rjs_core.UString.make("list?"), 2, proc3117, init3118, l3119, more3120);
    }
    if_res2074;
    if (M4.null_p(more3120) !== false) {
      if (M4.procedure_arity_includes_p(proc3117, 2) !== false) {
        var if_res2075 = M4.rvoid();
      } else {
        var if_res2075 = M4.raise_mismatch_error(name3116, $rjs_core.UString.make("given procedure does not accept 2 arguments: "), proc3117);
      }
      var if_res2080 = if_res2075;
    } else {
      var len3121 = M4.length(l3119);
      var loop3122 = function(remaining3123, n3124) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M4.null_p(remaining3123) !== false) {
          var if_res2078 = M4.rvoid();
        } else {
          if (M4.list_p(M4.car(remaining3123)) !== false) {
            var if_res2076 = M4.rvoid();
          } else {
            var if_res2076 = M4.apply(M4.raise_argument_error, name3116, $rjs_core.UString.make("list?"), n3124, proc3117, init3118, l3119, more3120);
          }
          if_res2076;
          if (M4.__eq_(len3121, M4.length(M4.car(remaining3123))) !== false) {
            var if_res2077 = M4.rvoid();
          } else {
            var if_res2077 = M4.raise_mismatch_error(name3116, $rjs_core.UString.make("given list does not have the same size as the first list: "), M4.car(remaining3123));
          }
          if_res2077;
          var if_res2078 = loop3122(M4.cdr(remaining3123), M4.add1(n3124));
        }
        return if_res2078;
      };
      loop3122(more3120, 3);
      if (M4.procedure_arity_includes_p(proc3117, 2 + M4.length(more3120)) !== false) {
        var if_res2079 = M4.rvoid();
      } else {
        var if_res2079 = M4.raise_mismatch_error(name3116, M4.format($rjs_core.UString.make("given procedure does not accept ~a arguments: "), 2 + M4.length(more3120)), proc3117);
      }
      var if_res2080 = if_res2079;
    }
    return if_res2080;
  };
  var cl2081 = function(f3125, init3126, l3127) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_fold($rjs_core.Symbol.make("foldl"), f3125, init3126, l3127, M4.rnull);
    var loop3128 = function(init3129, l3130) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.null_p(l3130) !== false) {
        var if_res2085 = init3129;
      } else {
        var if_res2085 = loop3128(f3125(M4.car(l3130), init3129), M4.cdr(l3130));
      }
      return if_res2085;
    };
    return loop3128(init3126, l3127);
  };
  var cl2082 = $rjs_core.attachProcedureArity(function(f3131, init3132, l3133) {
    for (var ls31342086 = [],
        $__1 = 3; $__1 < arguments.length; $__1++)
      ls31342086[$__1 - 3] = arguments[$__1];
    if (arguments.length < 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var ls3134 = $rjs_core.Pair.listFromArray(ls31342086);
    check_fold($rjs_core.Symbol.make("foldl"), f3131, init3132, l3133, ls3134);
    var loop3135 = function(init3136, ls3137) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.pair_p(M4.car(ls3137)) !== false) {
        var if_res2087 = loop3135(M4.apply(f3131, mapadd(M4.car, ls3137, init3136)), M2.map(M4.cdr, ls3137));
      } else {
        var if_res2087 = init3136;
      }
      return if_res2087;
    };
    return loop3135(init3132, M4.cons(l3133, ls3134));
  });
  var foldl = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2083 = {'3': cl2081}[arguments.length];
    if (fixed_lam2083 !== undefined) {
      return fixed_lam2083.apply(null, arguments);
    } else {
      if (M4.__gt__eq_(cl2082.length, 1) !== false) {
        var if_res2084 = cl2082.apply(null, arguments);
      } else {
        var if_res2084 = M4.error($rjs_core.UString.make("case-lambda: invalid case"));
      }
      return if_res2084;
    }
  }, [M4.make_arity_at_least(3)]);
  var cl2088 = function(f3138, init3139, l3140) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_fold($rjs_core.Symbol.make("foldr"), f3138, init3139, l3140, M4.rnull);
    var loop3141 = function(init3142, l3143) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.null_p(l3143) !== false) {
        var if_res2092 = init3142;
      } else {
        var if_res2092 = f3138(M4.car(l3143), loop3141(init3142, M4.cdr(l3143)));
      }
      return if_res2092;
    };
    return loop3141(init3139, l3140);
  };
  var cl2089 = $rjs_core.attachProcedureArity(function(f3144, init3145, l3146) {
    for (var ls31472093 = [],
        $__2 = 3; $__2 < arguments.length; $__2++)
      ls31472093[$__2 - 3] = arguments[$__2];
    if (arguments.length < 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var ls3147 = $rjs_core.Pair.listFromArray(ls31472093);
    check_fold($rjs_core.Symbol.make("foldr"), f3144, init3145, l3146, ls3147);
    var loop3148 = function(ls3149) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.pair_p(M4.car(ls3149)) !== false) {
        var if_res2094 = M4.apply(f3144, mapadd(M4.car, ls3149, loop3148(M2.map(M4.cdr, ls3149))));
      } else {
        var if_res2094 = init3145;
      }
      return if_res2094;
    };
    return loop3148(M4.cons(l3146, ls3147));
  });
  var foldr = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2090 = {'3': cl2088}[arguments.length];
    if (fixed_lam2090 !== undefined) {
      return fixed_lam2090.apply(null, arguments);
    } else {
      if (M4.__gt__eq_(cl2089.length, 1) !== false) {
        var if_res2091 = cl2089.apply(null, arguments);
      } else {
        var if_res2091 = M4.error($rjs_core.UString.make("case-lambda: invalid case"));
      }
      return if_res2091;
    }
  }, [M4.make_arity_at_least(3)]);
  var filter = function(f3150, list3151) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.procedure_p(f3150) !== false) {
      var if_res2095 = M4.procedure_arity_includes_p(f3150, 1);
    } else {
      var if_res2095 = false;
    }
    if (if_res2095 !== false) {
      var if_res2096 = M4.rvoid();
    } else {
      var if_res2096 = M4.raise_argument_error($rjs_core.Symbol.make("filter"), $rjs_core.UString.make("(any/c . -> . any/c)"), f3150);
    }
    if_res2096;
    if (M4.list_p(list3151) !== false) {
      var if_res2097 = M4.rvoid();
    } else {
      var if_res2097 = M4.raise_argument_error($rjs_core.Symbol.make("filter"), $rjs_core.UString.make("list?"), list3151);
    }
    if_res2097;
    var loop3152 = function(l3153, result3154) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.null_p(l3153) !== false) {
        var if_res2100 = M0.alt_reverse(result3154);
      } else {
        var temp2099 = M4.cdr(l3153);
        if (f3150(M4.car(l3153)) !== false) {
          var if_res2098 = M4.cons(M4.car(l3153), result3154);
        } else {
          var if_res2098 = result3154;
        }
        var if_res2100 = loop3152(temp2099, if_res2098);
      }
      return if_res2100;
    };
    return loop3152(list3151, M4.rnull);
  };
  var build_vector = function(n3155, fcn3156) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.exact_nonnegative_integer_p(n3155) !== false) {
      var if_res2101 = M4.rvoid();
    } else {
      var if_res2101 = M4.raise_argument_error($rjs_core.Symbol.make("build-vector"), $rjs_core.UString.make("exact-nonnegative-integer?"), n3155);
    }
    if_res2101;
    if (M4.procedure_p(fcn3156) !== false) {
      var if_res2102 = M4.procedure_arity_includes_p(fcn3156, 1);
    } else {
      var if_res2102 = false;
    }
    if (if_res2102 !== false) {
      var if_res2103 = M4.rvoid();
    } else {
      var if_res2103 = M4.raise_argument_error($rjs_core.Symbol.make("build-vector"), $rjs_core.UString.make("(exact-nonnegative-integer? . -> . any/c)"), fcn3156);
    }
    if_res2103;
    var vec3157 = M4.make_vector(n3155);
    var loop3158 = function(i3159) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.__eq_(i3159, n3155) !== false) {
        var if_res2104 = vec3157;
      } else {
        M4.vector_set_bang_(vec3157, i3159, fcn3156(i3159));
        var if_res2104 = loop3158(M4.add1(i3159));
      }
      return if_res2104;
    };
    return loop3158(0);
  };
  var build_string = function(n3160, fcn3161) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.exact_nonnegative_integer_p(n3160) !== false) {
      var if_res2105 = M4.rvoid();
    } else {
      var if_res2105 = M4.raise_argument_error($rjs_core.Symbol.make("build-string"), $rjs_core.UString.make("exact-nonnegative-integer?"), n3160);
    }
    if_res2105;
    if (M4.procedure_p(fcn3161) !== false) {
      var if_res2106 = M4.procedure_arity_includes_p(fcn3161, 1);
    } else {
      var if_res2106 = false;
    }
    if (if_res2106 !== false) {
      var if_res2107 = M4.rvoid();
    } else {
      var if_res2107 = M4.raise_argument_error($rjs_core.Symbol.make("build-string"), $rjs_core.UString.make("(exact-nonnegative-integer? . -> . char?)"), fcn3161);
    }
    if_res2107;
    var str3162 = M4.make_string(n3160);
    var loop3163 = function(i3164) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.__eq_(i3164, n3160) !== false) {
        var if_res2108 = str3162;
      } else {
        M4.string_set_bang_(str3162, i3164, fcn3161(i3164));
        var if_res2108 = loop3163(M4.add1(i3164));
      }
      return if_res2108;
    };
    return loop3163(0);
  };
  var build_list = function(n3165, fcn3166) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.exact_nonnegative_integer_p(n3165) !== false) {
      var if_res2109 = M4.rvoid();
    } else {
      var if_res2109 = M4.raise_argument_error($rjs_core.Symbol.make("build-list"), $rjs_core.UString.make("exact-nonnegative-integer?"), n3165);
    }
    if_res2109;
    if (M4.procedure_p(fcn3166) !== false) {
      var if_res2110 = M4.procedure_arity_includes_p(fcn3166, 1);
    } else {
      var if_res2110 = false;
    }
    if (if_res2110 !== false) {
      var if_res2111 = M4.rvoid();
    } else {
      var if_res2111 = M4.raise_argument_error($rjs_core.Symbol.make("build-list"), $rjs_core.UString.make("(exact-nonnegative-integer? . -> . any/c)"), fcn3166);
    }
    if_res2111;
    var recr3167 = function(j3168, i3169) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.zero_p(i3169) !== false) {
        var if_res2112 = M4.rnull;
      } else {
        var if_res2112 = M4.cons(fcn3166(j3168), recr3167(M4.add1(j3168), M4.sub1(i3169)));
      }
      return if_res2112;
    };
    return recr3167(0, n3165);
  };
  var pipeline13170 = function(f3171, rfuns3172) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return function(x3173) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var loop3174 = function(x3175, f3176, rfuns3177) {
        if (arguments.length !== 3) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M4.null_p(rfuns3177) !== false) {
          var if_res2113 = f3176(x3175);
        } else {
          var if_res2113 = loop3174(f3176(x3175), M4.car(rfuns3177), M4.cdr(rfuns3177));
        }
        return if_res2113;
      };
      return loop3174(x3173, f3171, rfuns3172);
    };
  };
  var pipeline_times_3178 = function(f3179, rfuns3180) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.eqv_p(1, M4.procedure_arity(f3179)) !== false) {
      var loop3181 = function(f3182, rfuns3183) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M4.null_p(rfuns3183) !== false) {
          var if_res2115 = f3182;
        } else {
          var fst3184 = M4.car(rfuns3183);
          if (M4.eqv_p(1, M4.procedure_arity(fst3184)) !== false) {
            var if_res2114 = function(x3185) {
              if (arguments.length !== 1) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              return fst3184(f3182(x3185));
            };
          } else {
            var if_res2114 = function(x3186) {
              if (arguments.length !== 1) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              return M4.call_with_values(function() {
                if (arguments.length !== 0) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                return f3182(x3186);
              }, fst3184);
            };
          }
          var if_res2115 = loop3181(if_res2114, M4.cdr(rfuns3183));
        }
        return if_res2115;
      };
      var if_res2122 = loop3181(f3179, rfuns3180);
    } else {
      var funs3187 = M0.alt_reverse(M4.cons(f3179, rfuns3180));
      var loop3188 = function(f3189, funs3190) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M4.null_p(funs3190) !== false) {
          var if_res2121 = f3189;
        } else {
          var fst3191 = M4.car(funs3190);
          if (M4.eqv_p(1, M4.procedure_arity(f3189)) !== false) {
            if (M4.eqv_p(1, M4.procedure_arity(fst3191)) !== false) {
              var if_res2117 = function(x3192) {
                if (arguments.length !== 1) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                return f3189(fst3191(x3192));
              };
            } else {
              var if_res2117 = $rjs_core.attachProcedureArity(function() {
                for (var xs31932116 = [],
                    $__3 = 0; $__3 < arguments.length; $__3++)
                  xs31932116[$__3] = arguments[$__3];
                var xs3193 = $rjs_core.Pair.listFromArray(xs31932116);
                return f3189(M4.apply(fst3191, xs3193));
              });
            }
            var if_res2120 = if_res2117;
          } else {
            if (M4.eqv_p(1, M4.procedure_arity(fst3191)) !== false) {
              var if_res2119 = function(x3194) {
                if (arguments.length !== 1) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                return M4.call_with_values(function() {
                  if (arguments.length !== 0) {
                    throw $rjs_core.racketContractError("arity mismatch");
                  } else {}
                  return fst3191(x3194);
                }, f3189);
              };
            } else {
              var if_res2119 = $rjs_core.attachProcedureArity(function() {
                for (var xs31952118 = [],
                    $__4 = 0; $__4 < arguments.length; $__4++)
                  xs31952118[$__4] = arguments[$__4];
                var xs3195 = $rjs_core.Pair.listFromArray(xs31952118);
                return M4.call_with_values(function() {
                  if (arguments.length !== 0) {
                    throw $rjs_core.racketContractError("arity mismatch");
                  } else {}
                  return M4.apply(fst3191, xs3195);
                }, f3189);
              });
            }
            var if_res2120 = if_res2119;
          }
          var if_res2121 = loop3188(if_res2120, M4.cdr(funs3190));
        }
        return if_res2121;
      };
      var if_res2122 = loop3188(M4.car(funs3187), M4.cdr(funs3187));
    }
    return if_res2122;
  };
  var simple_compose3197 = function(f3198, g3199) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var arity3200 = M4.procedure_arity(g3199);
    var let_result2123 = M1.procedure_keywords(g3199);
    var required_kwds3201 = let_result2123.getAt(0);
    var allowed_kwds3202 = let_result2123.getAt(1);
    if (M4.eq_p(1, arity3200) !== false) {
      var if_res2130 = function(x3204) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return f3198(g3199(x3204));
      };
    } else {
      var cl2124 = function(x3205) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return f3198(g3199(x3205));
      };
      var cl2125 = function(x3206, y3207) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return f3198(g3199(x3206, y3207));
      };
      var cl2126 = $rjs_core.attachProcedureArity(function() {
        for (var args32082129 = [],
            $__3 = 0; $__3 < arguments.length; $__3++)
          args32082129[$__3] = arguments[$__3];
        var args3208 = $rjs_core.Pair.listFromArray(args32082129);
        return f3198(M4.apply(g3199, args3208));
      });
      var if_res2130 = $rjs_core.attachProcedureArity(function() {
        var fixed_lam2127 = {
          '1': cl2124,
          '2': cl2125
        }[arguments.length];
        if (fixed_lam2127 !== undefined) {
          return fixed_lam2127.apply(null, arguments);
        } else {
          if (true !== false) {
            var if_res2128 = cl2126.apply(null, arguments);
          } else {
            var if_res2128 = M4.error($rjs_core.UString.make("case-lambda: invalid case"));
          }
          return if_res2128;
        }
      }, [M4.make_arity_at_least(0)]);
    }
    var composed3203 = if_res2130;
    if (M4.null_p(allowed_kwds3202) !== false) {
      var if_res2132 = composed3203;
    } else {
      var if_res2132 = M1.make_keyword_procedure($rjs_core.attachProcedureArity(function(kws3209, kw_args3210) {
        for (var xs32112131 = [],
            $__4 = 2; $__4 < arguments.length; $__4++)
          xs32112131[$__4 - 2] = arguments[$__4];
        if (arguments.length < 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        var xs3211 = $rjs_core.Pair.listFromArray(xs32112131);
        return f3198(M5.keyword_apply(g3199, kws3209, kw_args3210, xs3211));
      }), composed3203);
    }
    return if_res2132;
  };
  var cl2133 = function(f3212) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.procedure_p(f3212) !== false) {
      var if_res2139 = f3212;
    } else {
      var if_res2139 = M4.raise_argument_error($rjs_core.Symbol.make("compose1"), $rjs_core.UString.make("procedure?"), 0, f3212);
    }
    return if_res2139;
  };
  var cl2134 = function(f3213, g3214) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.procedure_p(f3213) !== false) {
      var if_res2140 = M4.rvoid();
    } else {
      var if_res2140 = M4.raise_argument_error($rjs_core.Symbol.make("compose1"), $rjs_core.UString.make("procedure?"), 0, f3213, g3214);
    }
    if_res2140;
    if (M4.procedure_p(g3214) !== false) {
      var if_res2141 = M4.rvoid();
    } else {
      var if_res2141 = M4.raise_argument_error($rjs_core.Symbol.make("compose1"), $rjs_core.UString.make("procedure?"), 1, f3213, g3214);
    }
    if_res2141;
    if (M4.procedure_arity_includes_p(f3213, 1) !== false) {
      var if_res2142 = M4.rvoid();
    } else {
      var if_res2142 = M4.apply(M4.raise_argument_error, $rjs_core.Symbol.make("compose1"), $rjs_core.UString.make("(any/c . -> . any/c)"), 0, f3213, $rjs_core.Pair.makeList());
    }
    if_res2142;
    var let_result2143 = M1.procedure_keywords(f3213);
    var req3215 = let_result2143.getAt(0);
    var _3216 = let_result2143.getAt(1);
    if (M4.null_p(req3215) !== false) {
      var if_res2144 = M4.rvoid();
    } else {
      var if_res2144 = M4.apply(M4.raise_argument_error, $rjs_core.Symbol.make("compose1"), $rjs_core.UString.make("procedure-with-no-required-keywords?"), 0, f3213, $rjs_core.Pair.makeList());
    }
    if_res2144;
    return simple_compose3197(f3213, g3214);
  };
  var cl2135 = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.values;
  };
  var cl2136 = $rjs_core.attachProcedureArity(function(f03217) {
    for (var fs032182145 = [],
        $__3 = 1; $__3 < arguments.length; $__3++)
      fs032182145[$__3 - 1] = arguments[$__3];
    if (arguments.length < 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var fs03218 = $rjs_core.Pair.listFromArray(fs032182145);
    var loop3219 = function(f3220, fs3221, i3222, rfuns3223) {
      if (arguments.length !== 4) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.procedure_p(f3220) !== false) {
        var if_res2146 = M4.rvoid();
      } else {
        var if_res2146 = M4.apply(M4.raise_argument_error, $rjs_core.Symbol.make("compose1"), $rjs_core.UString.make("procedure?"), i3222, f03217, fs03218);
      }
      if_res2146;
      if (M4.pair_p(fs3221) !== false) {
        if (M4.procedure_arity_includes_p(f3220, 1) !== false) {
          var if_res2147 = M4.rvoid();
        } else {
          var if_res2147 = M4.apply(M4.raise_argument_error, $rjs_core.Symbol.make("compose1"), $rjs_core.UString.make("(any/c . -> . any/c)"), i3222, f03217, fs03218);
        }
        if_res2147;
        var let_result2148 = M1.procedure_keywords(f3220);
        var req3224 = let_result2148.getAt(0);
        var _3225 = let_result2148.getAt(1);
        if (M4.null_p(req3224) !== false) {
          var if_res2149 = M4.rvoid();
        } else {
          var if_res2149 = M4.apply(M4.raise_argument_error, $rjs_core.Symbol.make("compose1"), $rjs_core.UString.make("procedure-with-no-required-keywords?"), i3222, f03217, fs03218);
        }
        if_res2149;
        var if_res2150 = loop3219(M4.car(fs3221), M4.cdr(fs3221), M4.add1(i3222), M4.cons(f3220, rfuns3223));
      } else {
        var if_res2150 = simple_compose3197(pipeline13170(M4.car(rfuns3223), M4.cdr(rfuns3223)), f3220);
      }
      return if_res2150;
    };
    return loop3219(f03217, fs03218, 0, $rjs_core.Pair.makeList());
  });
  var compose13196 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2137 = {
      '1': cl2133,
      '2': cl2134,
      '0': cl2135
    }[arguments.length];
    if (fixed_lam2137 !== undefined) {
      return fixed_lam2137.apply(null, arguments);
    } else {
      if (M4.__gt__eq_(cl2136.length, 1) !== false) {
        var if_res2138 = cl2136.apply(null, arguments);
      } else {
        var if_res2138 = M4.error($rjs_core.UString.make("case-lambda: invalid case"));
      }
      return if_res2138;
    }
  }, [0, M4.make_arity_at_least(1)]);
  var simple_compose3227 = function(f3228, g3229) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.eqv_p(1, M4.procedure_arity(f3228)) !== false) {
      var arity3230 = M4.procedure_arity(g3229);
      var let_result2151 = M1.procedure_keywords(g3229);
      var required_kwds3231 = let_result2151.getAt(0);
      var allowed_kwds3232 = let_result2151.getAt(1);
      if (M4.eq_p(1, arity3230) !== false) {
        var if_res2158 = function(x3234) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return f3228(g3229(x3234));
        };
      } else {
        var cl2152 = function(x3235) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return f3228(g3229(x3235));
        };
        var cl2153 = function(x3236, y3237) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return f3228(g3229(x3236, y3237));
        };
        var cl2154 = $rjs_core.attachProcedureArity(function() {
          for (var args32382157 = [],
              $__4 = 0; $__4 < arguments.length; $__4++)
            args32382157[$__4] = arguments[$__4];
          var args3238 = $rjs_core.Pair.listFromArray(args32382157);
          return f3228(M4.apply(g3229, args3238));
        });
        var if_res2158 = $rjs_core.attachProcedureArity(function() {
          var fixed_lam2155 = {
            '1': cl2152,
            '2': cl2153
          }[arguments.length];
          if (fixed_lam2155 !== undefined) {
            return fixed_lam2155.apply(null, arguments);
          } else {
            if (true !== false) {
              var if_res2156 = cl2154.apply(null, arguments);
            } else {
              var if_res2156 = M4.error($rjs_core.UString.make("case-lambda: invalid case"));
            }
            return if_res2156;
          }
        }, [M4.make_arity_at_least(0)]);
      }
      var composed3233 = if_res2158;
      if (M4.null_p(allowed_kwds3232) !== false) {
        var if_res2160 = composed3233;
      } else {
        var if_res2160 = M1.make_keyword_procedure($rjs_core.attachProcedureArity(function(kws3239, kw_args3240) {
          for (var xs32412159 = [],
              $__5 = 2; $__5 < arguments.length; $__5++)
            xs32412159[$__5 - 2] = arguments[$__5];
          if (arguments.length < 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          var xs3241 = $rjs_core.Pair.listFromArray(xs32412159);
          return f3228(M5.keyword_apply(g3229, kws3239, kw_args3240, xs3241));
        }), composed3233);
      }
      var if_res2171 = if_res2160;
    } else {
      var arity3242 = M4.procedure_arity(g3229);
      var let_result2161 = M1.procedure_keywords(g3229);
      var required_kwds3243 = let_result2161.getAt(0);
      var allowed_kwds3244 = let_result2161.getAt(1);
      if (M4.eq_p(1, arity3242) !== false) {
        var if_res2168 = function(x3246) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return M4.call_with_values(function() {
            if (arguments.length !== 0) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return g3229(x3246);
          }, f3228);
        };
      } else {
        var cl2162 = function(x3247) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return M4.call_with_values(function() {
            if (arguments.length !== 0) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return g3229(x3247);
          }, f3228);
        };
        var cl2163 = function(x3248, y3249) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return M4.call_with_values(function() {
            if (arguments.length !== 0) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return g3229(x3248, y3249);
          }, f3228);
        };
        var cl2164 = $rjs_core.attachProcedureArity(function() {
          for (var args32502167 = [],
              $__6 = 0; $__6 < arguments.length; $__6++)
            args32502167[$__6] = arguments[$__6];
          var args3250 = $rjs_core.Pair.listFromArray(args32502167);
          return M4.call_with_values(function() {
            if (arguments.length !== 0) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return M4.apply(g3229, args3250);
          }, f3228);
        });
        var if_res2168 = $rjs_core.attachProcedureArity(function() {
          var fixed_lam2165 = {
            '1': cl2162,
            '2': cl2163
          }[arguments.length];
          if (fixed_lam2165 !== undefined) {
            return fixed_lam2165.apply(null, arguments);
          } else {
            if (true !== false) {
              var if_res2166 = cl2164.apply(null, arguments);
            } else {
              var if_res2166 = M4.error($rjs_core.UString.make("case-lambda: invalid case"));
            }
            return if_res2166;
          }
        }, [M4.make_arity_at_least(0)]);
      }
      var composed3245 = if_res2168;
      if (M4.null_p(allowed_kwds3244) !== false) {
        var if_res2170 = composed3245;
      } else {
        var if_res2170 = M1.make_keyword_procedure($rjs_core.attachProcedureArity(function(kws3251, kw_args3252) {
          for (var xs32532169 = [],
              $__7 = 2; $__7 < arguments.length; $__7++)
            xs32532169[$__7 - 2] = arguments[$__7];
          if (arguments.length < 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          var xs3253 = $rjs_core.Pair.listFromArray(xs32532169);
          return M4.call_with_values(function() {
            if (arguments.length !== 0) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return M5.keyword_apply(g3229, kws3251, kw_args3252, xs3253);
          }, f3228);
        }), composed3245);
      }
      var if_res2171 = if_res2170;
    }
    return if_res2171;
  };
  var cl2172 = function(f3254) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.procedure_p(f3254) !== false) {
      var if_res2178 = f3254;
    } else {
      var if_res2178 = M4.raise_argument_error($rjs_core.Symbol.make("compose"), $rjs_core.UString.make("procedure?"), 0, f3254);
    }
    return if_res2178;
  };
  var cl2173 = function(f3255, g3256) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.procedure_p(f3255) !== false) {
      var if_res2179 = M4.rvoid();
    } else {
      var if_res2179 = M4.raise_argument_error($rjs_core.Symbol.make("compose"), $rjs_core.UString.make("procedure?"), 0, f3255, g3256);
    }
    if_res2179;
    if (M4.procedure_p(g3256) !== false) {
      var if_res2180 = M4.rvoid();
    } else {
      var if_res2180 = M4.raise_argument_error($rjs_core.Symbol.make("compose"), $rjs_core.UString.make("procedure?"), 1, f3255, g3256);
    }
    if_res2180;
    var let_result2181 = M1.procedure_keywords(f3255);
    var req3257 = let_result2181.getAt(0);
    var _3258 = let_result2181.getAt(1);
    if (M4.null_p(req3257) !== false) {
      var if_res2182 = M4.rvoid();
    } else {
      var if_res2182 = M4.apply(M4.raise_argument_error, $rjs_core.Symbol.make("compose"), $rjs_core.UString.make("procedure-with-no-required-keywords?"), 0, f3255, $rjs_core.Pair.makeList());
    }
    if_res2182;
    return simple_compose3227(f3255, g3256);
  };
  var cl2174 = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.values;
  };
  var cl2175 = $rjs_core.attachProcedureArity(function(f03259) {
    for (var fs032602183 = [],
        $__4 = 1; $__4 < arguments.length; $__4++)
      fs032602183[$__4 - 1] = arguments[$__4];
    if (arguments.length < 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var fs03260 = $rjs_core.Pair.listFromArray(fs032602183);
    var loop3261 = function(f3262, fs3263, i3264, rfuns3265) {
      if (arguments.length !== 4) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.procedure_p(f3262) !== false) {
        var if_res2184 = M4.rvoid();
      } else {
        var if_res2184 = M4.apply(M4.raise_argument_error, $rjs_core.Symbol.make("compose"), $rjs_core.UString.make("procedure?"), i3264, f03259, fs03260);
      }
      if_res2184;
      if (M4.pair_p(fs3263) !== false) {
        var let_result2185 = M1.procedure_keywords(f3262);
        var req3266 = let_result2185.getAt(0);
        var _3267 = let_result2185.getAt(1);
        if (M4.null_p(req3266) !== false) {
          var if_res2186 = M4.rvoid();
        } else {
          var if_res2186 = M4.apply(M4.raise_argument_error, $rjs_core.Symbol.make("compose"), $rjs_core.UString.make("procedure-with-no-required-keywords?"), i3264, f03259, fs03260);
        }
        if_res2186;
        var if_res2187 = loop3261(M4.car(fs3263), M4.cdr(fs3263), M4.add1(i3264), M4.cons(f3262, rfuns3265));
      } else {
        var if_res2187 = simple_compose3227(pipeline_times_3178(M4.car(rfuns3265), M4.cdr(rfuns3265)), f3262);
      }
      return if_res2187;
    };
    return loop3261(f03259, fs03260, 0, $rjs_core.Pair.makeList());
  });
  var compose3226 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2176 = {
      '1': cl2172,
      '2': cl2173,
      '0': cl2174
    }[arguments.length];
    if (fixed_lam2176 !== undefined) {
      return fixed_lam2176.apply(null, arguments);
    } else {
      if (M4.__gt__eq_(cl2175.length, 1) !== false) {
        var if_res2177 = cl2175.apply(null, arguments);
      } else {
        var if_res2177 = M4.error($rjs_core.UString.make("case-lambda: invalid case"));
      }
      return if_res2177;
    }
  }, [0, M4.make_arity_at_least(1)]);
  var let_result2188 = M4.values(compose13196, compose3226);
  var compose1 = let_result2188.getAt(0);
  var compose = let_result2188.getAt(1);
  var __rjs_quoted__ = {};
  __rjs_quoted__.sort7 = sort7;
  __rjs_quoted__.sort9 = sort9;
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get compose1() {
      return compose1;
    },
    get compose() {
      return compose;
    },
    get build_list() {
      return build_list;
    },
    get build_string() {
      return build_string;
    },
    get build_vector() {
      return build_vector;
    },
    get filter() {
      return filter;
    },
    get assoc() {
      return assoc;
    },
    get assv() {
      return assv;
    },
    get assq() {
      return assq;
    },
    get findf() {
      return findf;
    },
    get assf() {
      return assf;
    },
    get memf() {
      return memf;
    },
    get remove_times_() {
      return remove_times_;
    },
    get remq_times_() {
      return remq_times_;
    },
    get remv_times_() {
      return remv_times_;
    },
    get remove() {
      return remove;
    },
    get remq() {
      return remq;
    },
    get remv() {
      return remv;
    },
    get foldr() {
      return foldr;
    },
    get foldl() {
      return foldl;
    }
  };
})();
var $__runtime_47_paramz_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/paramz.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var Paramz = $__runtime_47_paramz_46_js__;
  var parameterization_key = Paramz.ParameterizationKey;
  var extend_parameterization = Paramz.extendParameterization;
  var exception_handler_key = Paramz.ExceptionHandlerKey;
  var check_for_break = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return undefined;
  };
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get parameterization_key() {
      return parameterization_key;
    },
    get extend_parameterization() {
      return extend_parameterization;
    },
    get exception_handler_key() {
      return exception_handler_key;
    },
    get check_for_break() {
      return check_for_break;
    }
  };
})();
var $__collects_47_racket_47_private_47_more_45_scheme_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/racket/private/more-scheme.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__runtime_47_paramz_46_rkt_46_js__;
  var M1 = $__runtime_47_kernel_46_rkt_46_js__;
  var M2 = $__runtime_47_core_46_rkt_46_js__;
  var current_parameterization = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M1.continuation_mark_set_first(false, M0.parameterization_key);
  };
  var call_with_parameterization = function(paramz2919, thunk2920) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.__rjs_quoted__.parameterization_p(paramz2919) !== false) {
      var if_res1894 = M1.rvoid();
    } else {
      var if_res1894 = M1.raise_argument_error($rjs_core.Symbol.make("call-with-parameterization"), $rjs_core.UString.make("parameterization?"), 0, paramz2919, thunk2920);
    }
    if_res1894;
    if (M1.procedure_p(thunk2920) !== false) {
      var if_res1895 = M1.procedure_arity_includes_p(thunk2920, 0);
    } else {
      var if_res1895 = false;
    }
    if (if_res1895 !== false) {
      var if_res1896 = M1.rvoid();
    } else {
      var if_res1896 = M1.raise_argument_error($rjs_core.Symbol.make("call-with-parameterization"), $rjs_core.UString.make("(-> any)"), 1, paramz2919, thunk2920);
    }
    if_res1896;
    var __context1897 = $rjs_core.Marks.getFrames();
    var __context1898;
    try {
      __context1898 = $rjs_core.Marks.enterFrame();
      $rjs_core.Marks.setMark(M0.parameterization_key, paramz2919);
      var __wcm_result1899 = thunk2920();
    } finally {
      $rjs_core.Marks.updateFrame(__context1897, __context1898);
    }
    return __wcm_result1899;
  };
  var let_result1901 = M1.make_struct_type($rjs_core.Symbol.make("break-parameterization"), false, 1, 0, false);
  var struct_break_paramz = let_result1901.getAt(0);
  var make_break_paramz = let_result1901.getAt(1);
  var break_paramz_p = let_result1901.getAt(2);
  var break_paramz_ref = let_result1901.getAt(3);
  var break_paramz_set_bang_ = let_result1901.getAt(4);
  var let_result1902 = M1.make_struct_type($rjs_core.Symbol.make("break-parameterization"), false, 1, 0, false, M1.rnull, M1.current_inspector());
  var type2921 = let_result1902.getAt(0);
  var maker2922 = let_result1902.getAt(1);
  var pred2923 = let_result1902.getAt(2);
  var access2924 = let_result1902.getAt(3);
  var mutate2925 = let_result1902.getAt(4);
  var let_result1903 = M1.values(type2921, maker2922, pred2923, M1.make_struct_field_accessor(access2924, 0, $rjs_core.Symbol.make("cell")), M1.make_struct_field_mutator(mutate2925, 0, $rjs_core.Symbol.make("cell")));
  var struct_break_parameterization = let_result1903.getAt(0);
  var make_break_parameterization = let_result1903.getAt(1);
  var break_parameterization_p = let_result1903.getAt(2);
  var break_parameterization_cell = let_result1903.getAt(3);
  var set_break_parameterization_cell_bang_ = let_result1903.getAt(4);
  var current_break_parameterization = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return make_break_paramz(M1.continuation_mark_set_first(false, M0.__rjs_quoted__.break_enabled_key));
  };
  var call_with_break_parameterization = function(paramz2926, thunk2927) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (break_paramz_p(paramz2926) !== false) {
      var if_res1904 = M1.rvoid();
    } else {
      var if_res1904 = M1.raise_argument_error($rjs_core.Symbol.make("call-with-break-parameterization"), $rjs_core.UString.make("break-parameterization?"), 0, paramz2926, thunk2927);
    }
    if_res1904;
    if (M1.procedure_p(thunk2927) !== false) {
      var if_res1905 = M1.procedure_arity_includes_p(thunk2927, 0);
    } else {
      var if_res1905 = false;
    }
    if (if_res1905 !== false) {
      var if_res1906 = M1.rvoid();
    } else {
      var if_res1906 = M1.raise_argument_error($rjs_core.Symbol.make("call-with-parameterization"), $rjs_core.UString.make("(-> any)"), 1, paramz2926, thunk2927);
    }
    if_res1906;
    var __context1908 = $rjs_core.Marks.getFrames();
    var __context1909;
    try {
      __context1909 = $rjs_core.Marks.enterFrame();
      $rjs_core.Marks.setMark(M0.__rjs_quoted__.break_enabled_key, break_paramz_ref(paramz2926, 0));
      M0.check_for_break();
      var __wcm_result1910 = thunk2927();
    } finally {
      $rjs_core.Marks.updateFrame(__context1908, __context1909);
    }
    var begin_res1907 = __wcm_result1910;
    M0.check_for_break();
    return begin_res1907;
  };
  var select_handler_by_no_breaks = function(e2928, bpz2929, l2930) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var __context1919 = $rjs_core.Marks.getFrames();
    var __context1920;
    try {
      __context1920 = $rjs_core.Marks.enterFrame();
      $rjs_core.Marks.setMark(M0.__rjs_quoted__.break_enabled_key, M1.make_thread_cell(false));
      var loop2931 = function(l2932) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M1.null_p(l2932) !== false) {
          var if_res1918 = M1.raise(e2928);
        } else {
          if (M1.caar(l2932)(e2928) !== false) {
            var begin_res1912 = M1.cdar(l2932)(e2928);
            var __context1913 = $rjs_core.Marks.getFrames();
            var __context1914;
            try {
              __context1914 = $rjs_core.Marks.enterFrame();
              $rjs_core.Marks.setMark(M0.__rjs_quoted__.break_enabled_key, bpz2929);
              var __wcm_result1915 = M0.check_for_break();
            } finally {
              $rjs_core.Marks.updateFrame(__context1913, __context1914);
            }
            __wcm_result1915;
            var if_res1917 = begin_res1912;
          } else {
            var if_res1917 = loop2931(M1.cdr(l2932));
          }
          var if_res1918 = if_res1917;
        }
        return if_res1918;
      };
      var __wcm_result1921 = loop2931(l2930);
    } finally {
      $rjs_core.Marks.updateFrame(__context1919, __context1920);
    }
    return __wcm_result1921;
  };
  var select_handler_by_breaks_as_is = function(e2933, bpz2934, l2935) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.null_p(l2935) !== false) {
      var if_res1928 = M1.raise(e2933);
    } else {
      if (M1.caar(l2935)(e2933) !== false) {
        var __context1923 = $rjs_core.Marks.getFrames();
        var __context1924;
        try {
          __context1924 = $rjs_core.Marks.enterFrame();
          $rjs_core.Marks.setMark(M0.__rjs_quoted__.break_enabled_key, bpz2934);
          M0.check_for_break();
          var __wcm_result1925 = M1.cdar(l2935)(e2933);
        } finally {
          $rjs_core.Marks.updateFrame(__context1923, __context1924);
        }
        var if_res1927 = __wcm_result1925;
      } else {
        var if_res1927 = select_handler_by_breaks_as_is(e2933, bpz2934, M1.cdr(l2935));
      }
      var if_res1928 = if_res1927;
    }
    return if_res1928;
  };
  var false_thread_cell = M1.make_thread_cell(false);
  var check_with_handlers_in_context = function(handler_prompt_key2936) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.__rjs_quoted__.continuation_prompt_available_p(handler_prompt_key2936) !== false) {
      var if_res1929 = M1.rvoid();
    } else {
      var if_res1929 = M1.error($rjs_core.Symbol.make("with-handlers"), $rjs_core.UString.make("exception handler used out of context"));
    }
    return if_res1929;
  };
  var handler_prompt_key = M1.make_continuation_prompt_tag($rjs_core.Symbol.make("handler-prompt-tag"));
  var call_handled_body = function(bpz2937, handle_proc2938, body_thunk2939) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var __context1938 = $rjs_core.Marks.getFrames();
    var __context1939;
    try {
      __context1939 = $rjs_core.Marks.enterFrame();
      $rjs_core.Marks.setMark(M0.__rjs_quoted__.break_enabled_key, false_thread_cell);
      var __wcm_result1940 = M1.call_with_continuation_prompt(function(bpz2940, body_thunk2941) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        var __context1934 = $rjs_core.Marks.getFrames();
        var __context1935;
        try {
          __context1935 = $rjs_core.Marks.enterFrame();
          $rjs_core.Marks.setMark(M0.__rjs_quoted__.break_enabled_key, bpz2940);
          var __context1930 = $rjs_core.Marks.getFrames();
          var __context1931;
          try {
            __context1931 = __context1930;
            $rjs_core.Marks.setMark(M0.exception_handler_key, function(e2942) {
              if (arguments.length !== 1) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              return M1.abort_current_continuation(handler_prompt_key, e2942);
            });
            var __wcm_result1932 = body_thunk2941();
          } finally {
            $rjs_core.Marks.updateFrame(__context1930, __context1931);
          }
          var __wcm_result1936 = __wcm_result1932;
        } finally {
          $rjs_core.Marks.updateFrame(__context1934, __context1935);
        }
        return __wcm_result1936;
      }, handler_prompt_key, handle_proc2938, bpz2937, body_thunk2939);
    } finally {
      $rjs_core.Marks.updateFrame(__context1938, __context1939);
    }
    return __wcm_result1940;
  };
  var call_with_exception_handler = function(exnh2943, thunk2944) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var __context1943 = $rjs_core.Marks.getFrames();
    var __context1944;
    try {
      __context1944 = $rjs_core.Marks.enterFrame();
      $rjs_core.Marks.setMark(M0.exception_handler_key, exnh2943);
      var __wcm_result1945 = thunk2944();
    } finally {
      $rjs_core.Marks.updateFrame(__context1943, __context1944);
    }
    var begin_res1942 = __wcm_result1945;
    M1.rvoid();
    return begin_res1942;
  };
  var call_by_cc = M1.__rjs_quoted__.call_with_current_continuation;
  var not_there = M1.gensym();
  var do_hash_update = function(who2945, mut_p2946, set2947, ht2948, key2949, xform2950, default2951) {
    if (arguments.length !== 7) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.variable_reference_from_unsafe_p(M2.__rjs_quoted__.___variable_reference) !== false) {
      var if_res1953 = M1.rvoid();
    } else {
      if (M1.hash_p(ht2948) !== false) {
        if (mut_p2946 !== false) {
          var if_res1947 = M1.not(M1.immutable_p(ht2948));
        } else {
          var if_res1947 = M1.immutable_p(ht2948);
        }
        var if_res1948 = if_res1947;
      } else {
        var if_res1948 = false;
      }
      if (if_res1948 !== false) {
        var if_res1950 = M1.rvoid();
      } else {
        if (mut_p2946 !== false) {
          var if_res1949 = $rjs_core.UString.make("(and/c hash? (not/c immutable?))");
        } else {
          var if_res1949 = $rjs_core.UString.make("(and/c hash? immutable?)");
        }
        var if_res1950 = M1.raise_argument_error(who2945, if_res1949, ht2948);
      }
      if_res1950;
      if (M1.procedure_p(xform2950) !== false) {
        var if_res1951 = M1.procedure_arity_includes_p(xform2950, 1);
      } else {
        var if_res1951 = false;
      }
      if (if_res1951 !== false) {
        var if_res1952 = M1.rvoid();
      } else {
        var if_res1952 = M1.raise_argument_error(who2945, $rjs_core.UString.make("(any/c . -> . any/c)"), xform2950);
      }
      var if_res1953 = if_res1952;
    }
    if_res1953;
    var v2952 = M1.hash_ref(ht2948, key2949, default2951);
    if (M1.eq_p(v2952, not_there) !== false) {
      var if_res1954 = M1.raise_mismatch_error(who2945, $rjs_core.UString.make("no value found for key: "), key2949);
    } else {
      var if_res1954 = set2947(ht2948, key2949, xform2950(v2952));
    }
    return if_res1954;
  };
  var cl1955 = function(ht2953, key2954, xform2955, default2956) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return do_hash_update($rjs_core.Symbol.make("hash-update"), false, M1.hash_set, ht2953, key2954, xform2955, default2956);
  };
  var cl1956 = function(ht2957, key2958, xform2959) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return hash_update(ht2957, key2958, xform2959, not_there);
  };
  var hash_update = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1957 = {
      '4': cl1955,
      '3': cl1956
    }[arguments.length];
    if (fixed_lam1957 !== undefined) {
      return fixed_lam1957.apply(null, arguments);
    } else {
      return M1.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [3, 4]);
  var cl1958 = function(ht2960, key2961, xform2962, default2963) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return do_hash_update($rjs_core.Symbol.make("hash-update!"), true, M1.hash_set_bang_, ht2960, key2961, xform2962, default2963);
  };
  var cl1959 = function(ht2964, key2965, xform2966) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return hash_update_bang_(ht2964, key2965, xform2966, not_there);
  };
  var hash_update_bang_ = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1960 = {
      '4': cl1958,
      '3': cl1959
    }[arguments.length];
    if (fixed_lam1960 !== undefined) {
      return fixed_lam1960.apply(null, arguments);
    } else {
      return M1.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [3, 4]);
  var hash_has_key_p = function(ht2967, key2968) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.hash_p(ht2967) !== false) {
      var if_res1961 = M1.rvoid();
    } else {
      var if_res1961 = M1.raise_argument_error($rjs_core.Symbol.make("hash-has-key?"), $rjs_core.UString.make("hash?"), 0, ht2967, key2968);
    }
    if_res1961;
    return M1.not(M1.eq_p(not_there, M1.hash_ref(ht2967, key2968, not_there)));
  };
  var hash_ref_bang_ = function(ht2969, key2970, new2971) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M1.hash_p(ht2969) !== false) {
      var if_res1962 = M1.not(M1.immutable_p(ht2969));
    } else {
      var if_res1962 = false;
    }
    if (if_res1962 !== false) {
      var if_res1963 = M1.rvoid();
    } else {
      var if_res1963 = M1.raise_argument_error($rjs_core.Symbol.make("hash-ref!"), $rjs_core.UString.make("(and/c hash? (not/c immutable?))"), 0, ht2969, key2970, new2971);
    }
    if_res1963;
    var v2972 = M1.hash_ref(ht2969, key2970, not_there);
    if (M1.eq_p(not_there, v2972) !== false) {
      if (M1.procedure_p(new2971) !== false) {
        var if_res1964 = new2971();
      } else {
        var if_res1964 = new2971;
      }
      var n2973 = if_res1964;
      M1.hash_set_bang_(ht2969, key2970, n2973);
      var if_res1965 = n2973;
    } else {
      var if_res1965 = v2972;
    }
    return if_res1965;
  };
  var __rjs_quoted__ = {};
  __rjs_quoted__.select_handler_by_breaks_as_is = select_handler_by_breaks_as_is;
  __rjs_quoted__.call_by_cc = call_by_cc;
  __rjs_quoted__.select_handler_by_no_breaks = select_handler_by_no_breaks;
  __rjs_quoted__.call_handled_body = call_handled_body;
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get hash_update_bang_() {
      return hash_update_bang_;
    },
    get hash_update() {
      return hash_update;
    },
    get hash_has_key_p() {
      return hash_has_key_p;
    },
    get hash_ref_bang_() {
      return hash_ref_bang_;
    },
    get call_by_cc() {
      return call_by_cc;
    },
    get call_with_exception_handler() {
      return call_with_exception_handler;
    },
    get break_parameterization_p() {
      return break_paramz_p;
    },
    get call_with_break_parameterization() {
      return call_with_break_parameterization;
    },
    get current_break_parameterization() {
      return current_break_parameterization;
    },
    get call_with_parameterization() {
      return call_with_parameterization;
    },
    get current_parameterization() {
      return current_parameterization;
    }
  };
})();
var $__collects_47_racket_47_private_47_qq_45_and_45_or_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/racket/private/qq-and-or.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__runtime_47_kernel_46_rkt_46_js__;
  var qq_append = function(a2559, b2560) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M0.list_p(a2559) !== false) {
      var if_res1597 = M0.append(a2559, b2560);
    } else {
      var if_res1597 = M0.raise_argument_error($rjs_core.Symbol.make("unquote-splicing"), $rjs_core.UString.make("list?"), a2559);
    }
    return if_res1597;
  };
  var __rjs_quoted__ = {};
  __rjs_quoted__.qq_append = qq_append;
  ;
  return {get __rjs_quoted__() {
      return __rjs_quoted__;
    }};
})();
var $__collects_47_racket_47_private_47_member_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/racket/private/member.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__runtime_47_kernel_46_rkt_46_js__;
  var bad_list = function(who2530, orig_l2531) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.raise_mismatch_error(who2530, $rjs_core.UString.make("not a proper list: "), orig_l2531);
  };
  var memq2532 = function(v2533, orig_l2534) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop2535 = function(ls2536) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M0.null_p(ls2536) !== false) {
        var if_res1595 = false;
      } else {
        if (M0.not(M0.pair_p(ls2536)) !== false) {
          var if_res1594 = bad_list($rjs_core.Symbol.make("memq"), orig_l2534);
        } else {
          if (M0.eq_p(v2533, M0.car(ls2536)) !== false) {
            var if_res1593 = ls2536;
          } else {
            var if_res1593 = loop2535(M0.cdr(ls2536));
          }
          var if_res1594 = if_res1593;
        }
        var if_res1595 = if_res1594;
      }
      return if_res1595;
    };
    return loop2535(orig_l2534);
  };
  var memv2537 = function(v2538, orig_l2539) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop2540 = function(ls2541) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M0.null_p(ls2541) !== false) {
        var if_res1592 = false;
      } else {
        if (M0.not(M0.pair_p(ls2541)) !== false) {
          var if_res1591 = bad_list($rjs_core.Symbol.make("memv"), orig_l2539);
        } else {
          if (M0.eqv_p(v2538, M0.car(ls2541)) !== false) {
            var if_res1590 = ls2541;
          } else {
            var if_res1590 = loop2540(M0.cdr(ls2541));
          }
          var if_res1591 = if_res1590;
        }
        var if_res1592 = if_res1591;
      }
      return if_res1592;
    };
    return loop2540(orig_l2539);
  };
  var member2543 = function(v2544, orig_l2545) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop2546 = function(ls2547) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M0.null_p(ls2547) !== false) {
        var if_res1581 = false;
      } else {
        if (M0.not(M0.pair_p(ls2547)) !== false) {
          var if_res1580 = bad_list($rjs_core.Symbol.make("member"), orig_l2545);
        } else {
          if (M0.equal_p(v2544, M0.car(ls2547)) !== false) {
            var if_res1579 = ls2547;
          } else {
            var if_res1579 = loop2546(M0.cdr(ls2547));
          }
          var if_res1580 = if_res1579;
        }
        var if_res1581 = if_res1580;
      }
      return if_res1581;
    };
    return loop2546(orig_l2545);
  };
  var default2542 = member2543;
  var cl1582 = function(v2549, orig_l2550) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return default2542(v2549, orig_l2550);
  };
  var cl1583 = function(v2551, orig_l2552, eq_p2553) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M0.procedure_p(eq_p2553) !== false) {
      var if_res1585 = M0.procedure_arity_includes_p(eq_p2553, 2);
    } else {
      var if_res1585 = false;
    }
    if (if_res1585 !== false) {
      var if_res1586 = M0.rvoid();
    } else {
      var if_res1586 = M0.raise_argument_error($rjs_core.Symbol.make("member"), $rjs_core.UString.make("(procedure-arity-includes/c 2)"), eq_p2553);
    }
    if_res1586;
    var member2554 = function(v2555, orig_l2556) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var loop2557 = function(ls2558) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M0.null_p(ls2558) !== false) {
          var if_res1589 = false;
        } else {
          if (M0.not(M0.pair_p(ls2558)) !== false) {
            var if_res1588 = bad_list($rjs_core.Symbol.make("member"), orig_l2556);
          } else {
            if (eq_p2553(v2555, M0.car(ls2558)) !== false) {
              var if_res1587 = ls2558;
            } else {
              var if_res1587 = loop2557(M0.cdr(ls2558));
            }
            var if_res1588 = if_res1587;
          }
          var if_res1589 = if_res1588;
        }
        return if_res1589;
      };
      return loop2557(orig_l2556);
    };
    return member2554(v2551, orig_l2552);
  };
  var member2548 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1584 = {
      '2': cl1582,
      '3': cl1583
    }[arguments.length];
    if (fixed_lam1584 !== undefined) {
      return fixed_lam1584.apply(null, arguments);
    } else {
      return M0.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var let_result1596 = M0.values(memq2532, memv2537, member2548);
  var memq = let_result1596.getAt(0);
  var memv = let_result1596.getAt(1);
  var member = let_result1596.getAt(2);
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get member() {
      return member;
    },
    get memv() {
      return memv;
    },
    get memq() {
      return memq;
    }
  };
})();
var $__runtime_47_flfxnum_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/flfxnum.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var __rjs_quoted__ = {};
  ;
  return {get __rjs_quoted__() {
      return __rjs_quoted__;
    }};
})();
var $__runtime_47_read_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "runtime/read.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var __rjs_quoted__ = {};
  ;
  return {get __rjs_quoted__() {
      return __rjs_quoted__;
    }};
})();
var $__collects_47_racket_47_private_47_for_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/racket/private/for.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__collects_47_racket_47_private_47_reverse_46_rkt_46_js__;
  var M1 = $__runtime_47_flfxnum_46_rkt_46_js__;
  var M2 = $__collects_47_racket_47_private_47_sort_46_rkt_46_js__;
  var M3 = $__collects_47_racket_47_private_47_member_46_rkt_46_js__;
  var M4 = $__runtime_47_kernel_46_rkt_46_js__;
  var M5 = $__runtime_47_read_46_rkt_46_js__;
  var M6 = $__runtime_47_unsafe_46_rkt_46_js__;
  var let_result1197 = M4.make_struct_type($rjs_core.Symbol.make("sequence"), false, 1, 0, false);
  var struct_do_sequence = let_result1197.getAt(0);
  var make_do_sequence = let_result1197.getAt(1);
  var do_sequence_p = let_result1197.getAt(2);
  var do_sequence_ref = let_result1197.getAt(3);
  var do_sequence_set_bang_ = let_result1197.getAt(4);
  var let_result1206 = M4.make_struct_type_property($rjs_core.Symbol.make("stream"), function(v1943, si1944) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.vector_p(v1943) !== false) {
      if (M4.__eq_(3, M4.vector_length(v1943)) !== false) {
        if (M4.procedure_p(M4.vector_ref(v1943, 0)) !== false) {
          if (M4.procedure_arity_includes_p(M4.vector_ref(v1943, 0), 1) !== false) {
            if (M4.procedure_p(M4.vector_ref(v1943, 1)) !== false) {
              if (M4.procedure_arity_includes_p(M4.vector_ref(v1943, 1), 1) !== false) {
                if (M4.procedure_p(M4.vector_ref(v1943, 2)) !== false) {
                  var if_res1198 = M4.procedure_arity_includes_p(M4.vector_ref(v1943, 2), 1);
                } else {
                  var if_res1198 = false;
                }
                var if_res1199 = if_res1198;
              } else {
                var if_res1199 = false;
              }
              var if_res1200 = if_res1199;
            } else {
              var if_res1200 = false;
            }
            var if_res1201 = if_res1200;
          } else {
            var if_res1201 = false;
          }
          var if_res1202 = if_res1201;
        } else {
          var if_res1202 = false;
        }
        var if_res1203 = if_res1202;
      } else {
        var if_res1203 = false;
      }
      var if_res1204 = if_res1203;
    } else {
      var if_res1204 = false;
    }
    if (if_res1204 !== false) {
      var if_res1205 = M4.rvoid();
    } else {
      var if_res1205 = M4.raise_argument_error($rjs_core.Symbol.make("guard-for-prop:stream"), M4.string_append($rjs_core.UString.make("(vector/c (procedure-arity-includes/c 1)\n"), $rjs_core.UString.make("          (procedure-arity-includes/c 1)\n"), $rjs_core.UString.make("          (procedure-arity-includes/c 1))")), v1943);
    }
    if_res1205;
    return M4.vector__gt_immutable_vector(v1943);
  }, $rjs_core.Pair.makeList(), true);
  var prop_stream = let_result1206.getAt(0);
  var stream_via_prop_p = let_result1206.getAt(1);
  var stream_ref = let_result1206.getAt(2);
  var let_result1209 = M4.make_struct_type_property($rjs_core.Symbol.make("sequence"), function(v1945, si1946) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.procedure_p(v1945) !== false) {
      var if_res1207 = M4.procedure_arity_includes_p(v1945, 1);
    } else {
      var if_res1207 = false;
    }
    if (if_res1207 !== false) {
      var if_res1208 = M4.rvoid();
    } else {
      var if_res1208 = M4.raise_argument_error($rjs_core.Symbol.make("guard-for-prop:sequence"), $rjs_core.UString.make("(procedure-arity-includes/c 1)"), v1945);
    }
    if_res1208;
    return v1945;
  });
  var prop_gen_sequence = let_result1209.getAt(0);
  var sequence_via_prop_p = let_result1209.getAt(1);
  var sequence_ref = let_result1209.getAt(2);
  var let_result1213 = M4.make_struct_type_property($rjs_core.Symbol.make("sequence"), function(v1947, sinfo1948) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.procedure_p(v1947) !== false) {
      var if_res1210 = M4.procedure_arity_includes_p(v1947, 1);
    } else {
      var if_res1210 = false;
    }
    if (if_res1210 !== false) {
      var if_res1211 = M4.rvoid();
    } else {
      var if_res1211 = M4.raise_argument_error($rjs_core.Symbol.make("sequence-property-guard"), $rjs_core.UString.make("(procedure-arity-includes/c 1)"), v1947);
    }
    if_res1211;
    return function(self1949) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var s1950 = v1947(self1949);
      if (sequence_p(s1950) !== false) {
        var if_res1212 = M4.rvoid();
      } else {
        var if_res1212 = M4.raise_mismatch_error($rjs_core.Symbol.make("sequence-generate"), $rjs_core.UString.make("procedure (value of prop:sequence) produced a non-sequence: "), s1950);
      }
      if_res1212;
      return s1950;
    };
  });
  var prop_sequence = let_result1213.getAt(0);
  var __sequence_p = let_result1213.getAt(1);
  var __sequence_ref = let_result1213.getAt(2);
  var stream_p = function(v1951) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var or_part1952 = M4.list_p(v1951);
    if (or_part1952 !== false) {
      var if_res1214 = or_part1952;
    } else {
      var if_res1214 = stream_via_prop_p(v1951);
    }
    return if_res1214;
  };
  var unsafe_stream_not_empty_p = function(v1953) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.null_p(v1953) !== false) {
      var if_res1216 = false;
    } else {
      var or_part1954 = M4.pair_p(v1953);
      if (or_part1954 !== false) {
        var if_res1215 = or_part1954;
      } else {
        var if_res1215 = M4.not(M6.unsafe_vector_ref(stream_ref(v1953), 0)(v1953));
      }
      var if_res1216 = if_res1215;
    }
    return if_res1216;
  };
  var stream_empty_p = function(v1955) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var or_part1956 = M4.null_p(v1955);
    if (or_part1956 !== false) {
      var if_res1219 = or_part1956;
    } else {
      if (stream_p(v1955) !== false) {
        if (M4.pair_p(v1955) !== false) {
          var if_res1217 = false;
        } else {
          var if_res1217 = M6.unsafe_vector_ref(stream_ref(v1955), 0)(v1955);
        }
        var if_res1218 = if_res1217;
      } else {
        var if_res1218 = M4.raise_argument_error($rjs_core.Symbol.make("stream-empty?"), $rjs_core.UString.make("stream?"), v1955);
      }
      var if_res1219 = if_res1218;
    }
    return if_res1219;
  };
  var unsafe_stream_first = function(v1957) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.pair_p(v1957) !== false) {
      var if_res1220 = M4.car(v1957);
    } else {
      var if_res1220 = M6.unsafe_vector_ref(stream_ref(v1957), 1)(v1957);
    }
    return if_res1220;
  };
  var stream_first = function(v1958) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (stream_p(v1958) !== false) {
      var if_res1221 = M4.not(stream_empty_p(v1958));
    } else {
      var if_res1221 = false;
    }
    if (if_res1221 !== false) {
      var if_res1222 = unsafe_stream_first(v1958);
    } else {
      var if_res1222 = M4.raise_argument_error($rjs_core.Symbol.make("stream-first"), $rjs_core.UString.make("(and/c stream? (not/c stream-empty?))"), v1958);
    }
    return if_res1222;
  };
  var unsafe_stream_rest = function(v1959) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.pair_p(v1959) !== false) {
      var if_res1224 = M4.cdr(v1959);
    } else {
      var r1960 = M6.unsafe_vector_ref(stream_ref(v1959), 2)(v1959);
      if (stream_p(r1960) !== false) {
        var if_res1223 = M4.rvoid();
      } else {
        var if_res1223 = M4.raise_mismatch_error($rjs_core.Symbol.make("stream-rest-guard"), $rjs_core.UString.make("result is not a stream: "), r1960);
      }
      if_res1223;
      var if_res1224 = r1960;
    }
    return if_res1224;
  };
  var stream_rest = function(v1961) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (stream_p(v1961) !== false) {
      var if_res1225 = M4.not(stream_empty_p(v1961));
    } else {
      var if_res1225 = false;
    }
    if (if_res1225 !== false) {
      var if_res1226 = unsafe_stream_rest(v1961);
    } else {
      var if_res1226 = M4.raise_argument_error($rjs_core.Symbol.make("stream-rest"), $rjs_core.UString.make("(and/c stream? (not/c stream-empty?))"), v1961);
    }
    return if_res1226;
  };
  var sequence_p = function(v1962) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var or_part1963 = M4.exact_nonnegative_integer_p(v1962);
    if (or_part1963 !== false) {
      var if_res1239 = or_part1963;
    } else {
      var or_part1964 = do_sequence_p(v1962);
      if (or_part1964 !== false) {
        var if_res1238 = or_part1964;
      } else {
        var or_part1965 = sequence_via_prop_p(v1962);
        if (or_part1965 !== false) {
          var if_res1237 = or_part1965;
        } else {
          var or_part1966 = stream_p(v1962);
          if (or_part1966 !== false) {
            var if_res1236 = or_part1966;
          } else {
            var or_part1967 = M4.mpair_p(v1962);
            if (or_part1967 !== false) {
              var if_res1235 = or_part1967;
            } else {
              var or_part1968 = M4.vector_p(v1962);
              if (or_part1968 !== false) {
                var if_res1234 = or_part1968;
              } else {
                var or_part1969 = M1.__rjs_quoted__.flvector_p(v1962);
                if (or_part1969 !== false) {
                  var if_res1233 = or_part1969;
                } else {
                  var or_part1970 = M1.__rjs_quoted__.fxvector_p(v1962);
                  if (or_part1970 !== false) {
                    var if_res1232 = or_part1970;
                  } else {
                    var or_part1971 = M4.string_p(v1962);
                    if (or_part1971 !== false) {
                      var if_res1231 = or_part1971;
                    } else {
                      var or_part1972 = M4.bytes_p(v1962);
                      if (or_part1972 !== false) {
                        var if_res1230 = or_part1972;
                      } else {
                        var or_part1973 = M4.input_port_p(v1962);
                        if (or_part1973 !== false) {
                          var if_res1229 = or_part1973;
                        } else {
                          var or_part1974 = M4.hash_p(v1962);
                          if (or_part1974 !== false) {
                            var if_res1228 = or_part1974;
                          } else {
                            if (__sequence_p(v1962) !== false) {
                              var if_res1227 = M4.not(M4.struct_type_p(v1962));
                            } else {
                              var if_res1227 = false;
                            }
                            var if_res1228 = if_res1227;
                          }
                          var if_res1229 = if_res1228;
                        }
                        var if_res1230 = if_res1229;
                      }
                      var if_res1231 = if_res1230;
                    }
                    var if_res1232 = if_res1231;
                  }
                  var if_res1233 = if_res1232;
                }
                var if_res1234 = if_res1233;
              }
              var if_res1235 = if_res1234;
            }
            var if_res1236 = if_res1235;
          }
          var if_res1237 = if_res1236;
        }
        var if_res1238 = if_res1237;
      }
      var if_res1239 = if_res1238;
    }
    return if_res1239;
  };
  var make_sequence = function(who1975, v1976) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.exact_nonnegative_integer_p(v1976) !== false) {
      var if_res1258 = __integer_gen(v1976);
    } else {
      if (do_sequence_p(v1976) !== false) {
        var cl1240 = function(pos__gt_vals1977, pos_next1978, init1979, pos_cont_p1980, val_cont_p1981, all_cont_p1982) {
          if (arguments.length !== 6) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return M4.values(pos__gt_vals1977, false, pos_next1978, init1979, pos_cont_p1980, val_cont_p1981, all_cont_p1982);
        };
        var cl1241 = function(pos__gt_vals1983, pre_pos_next1984, pos_next1985, init1986, pos_cont_p1987, val_cont_p1988, all_cont_p1989) {
          if (arguments.length !== 7) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return M4.values(pos__gt_vals1983, pre_pos_next1984, pos_next1985, init1986, pos_cont_p1987, val_cont_p1988, all_cont_p1989);
        };
        var if_res1257 = M4.call_with_values(function() {
          if (arguments.length !== 0) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return do_sequence_ref(v1976, 0)();
        }, $rjs_core.attachProcedureArity(function() {
          var fixed_lam1242 = {
            '6': cl1240,
            '7': cl1241
          }[arguments.length];
          if (fixed_lam1242 !== undefined) {
            return fixed_lam1242.apply(null, arguments);
          } else {
            return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
          }
        }, [6, 7]));
      } else {
        if (M4.mpair_p(v1976) !== false) {
          var if_res1256 = __mlist_gen(v1976);
        } else {
          if (M4.list_p(v1976) !== false) {
            var if_res1255 = __list_gen(v1976);
          } else {
            if (M4.vector_p(v1976) !== false) {
              var if_res1254 = __vector_gen(v1976, 0, M4.vector_length(v1976), 1);
            } else {
              if (M1.__rjs_quoted__.flvector_p(v1976) !== false) {
                var if_res1253 = __flvector_gen(v1976, 0, M1.__rjs_quoted__.flvector_length(v1976), 1);
              } else {
                if (M1.__rjs_quoted__.fxvector_p(v1976) !== false) {
                  var if_res1252 = __fxvector_gen(v1976, 0, M1.__rjs_quoted__.fxvector_length(v1976), 1);
                } else {
                  if (M4.string_p(v1976) !== false) {
                    var if_res1251 = __string_gen(v1976, 0, M4.string_length(v1976), 1);
                  } else {
                    if (M4.bytes_p(v1976) !== false) {
                      var if_res1250 = __bytes_gen(v1976, 0, M4.__rjs_quoted__.bytes_length(v1976), 1);
                    } else {
                      if (M4.input_port_p(v1976) !== false) {
                        var if_res1249 = __input_port_gen(v1976);
                      } else {
                        if (M4.hash_p(v1976) !== false) {
                          var if_res1248 = __hash_gen(v1976, M4.hash_iterate_key_plus_value, M4.hash_iterate_first, M4.hash_iterate_next);
                        } else {
                          if (sequence_via_prop_p(v1976) !== false) {
                            var if_res1247 = sequence_ref(v1976)(v1976);
                          } else {
                            if (__sequence_p(v1976) !== false) {
                              var if_res1246 = make_sequence(who1975, __sequence_ref(v1976)(v1976));
                            } else {
                              if (stream_p(v1976) !== false) {
                                var if_res1245 = __stream_gen(v1976);
                              } else {
                                var temp1244 = $rjs_core.UString.make("for: expected a sequence for ~a, got something else: ~v");
                                if (M4.__eq_(1, M4.length(who1975)) !== false) {
                                  var if_res1243 = M4.car(who1975);
                                } else {
                                  var if_res1243 = who1975;
                                }
                                var if_res1245 = M4.raise(M4.__rjs_quoted__.exn_fail_contract(M4.format(temp1244, if_res1243, v1976), M4.current_continuation_marks()));
                              }
                              var if_res1246 = if_res1245;
                            }
                            var if_res1247 = if_res1246;
                          }
                          var if_res1248 = if_res1247;
                        }
                        var if_res1249 = if_res1248;
                      }
                      var if_res1250 = if_res1249;
                    }
                    var if_res1251 = if_res1250;
                  }
                  var if_res1252 = if_res1251;
                }
                var if_res1253 = if_res1252;
              }
              var if_res1254 = if_res1253;
            }
            var if_res1255 = if_res1254;
          }
          var if_res1256 = if_res1255;
        }
        var if_res1257 = if_res1256;
      }
      var if_res1258 = if_res1257;
    }
    return if_res1258;
  };
  var let_result1260 = M4.make_struct_type($rjs_core.Symbol.make("stream"), false, 3, 0, false, M4.list(M4.cons(prop_stream, M4.vector(function(v1990) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var cont_p1991 = range_ref(v1990, 2);
    if (cont_p1991 !== false) {
      var if_res1259 = M4.not(cont_p1991(range_ref(v1990, 0)));
    } else {
      var if_res1259 = false;
    }
    return if_res1259;
  }, function(v1992) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return range_ref(v1992, 0);
  }, function(v1993) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return make_range(range_ref(v1993, 1)(range_ref(v1993, 0)), range_ref(v1993, 1), range_ref(v1993, 2));
  })), M4.cons(prop_gen_sequence, function(v1994) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.values(M4.values, false, range_ref(v1994, 1), range_ref(v1994, 0), range_ref(v1994, 2), false, false);
  })));
  var struct_range = let_result1260.getAt(0);
  var make_range = let_result1260.getAt(1);
  var range_p = let_result1260.getAt(2);
  var range_ref = let_result1260.getAt(3);
  var range_set_bang_ = let_result1260.getAt(4);
  var check_range = function(a1995, b1996, step1997) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.real_p(a1995) !== false) {
      var if_res1261 = M4.rvoid();
    } else {
      var if_res1261 = M4.raise_argument_error($rjs_core.Symbol.make("in-range"), $rjs_core.UString.make("real?"), a1995);
    }
    if_res1261;
    if (M4.real_p(b1996) !== false) {
      var if_res1262 = M4.rvoid();
    } else {
      var if_res1262 = M4.raise_argument_error($rjs_core.Symbol.make("in-range"), $rjs_core.UString.make("real?"), b1996);
    }
    if_res1262;
    if (M4.real_p(step1997) !== false) {
      var if_res1263 = M4.rvoid();
    } else {
      var if_res1263 = M4.raise_argument_error($rjs_core.Symbol.make("in-range"), $rjs_core.UString.make("real?"), step1997);
    }
    return if_res1263;
  };
  var cl1264 = function(b1998) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_range(0, b1998, 1);
  };
  var cl1265 = function(a1999, b2000) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_range(a1999, b2000, 1);
  };
  var cl1266 = function(a2001, b2002, step2003) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_range(a2001, b2002, step2003);
    if (M4.__gt__eq_(step2003, 0) !== false) {
      var if_res1268 = function(x2005) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.__lt_(x2005, b2002);
      };
    } else {
      var if_res1268 = function(x2006) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.__gt_(x2006, b2002);
      };
    }
    var cont_p2004 = if_res1268;
    var inc2007 = function(x2008) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return x2008 + step2003;
    };
    return make_range(a2001, inc2007, cont_p2004);
  };
  var in_range = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1267 = {
      '1': cl1264,
      '2': cl1265,
      '3': cl1266
    }[arguments.length];
    if (fixed_lam1267 !== undefined) {
      return fixed_lam1267.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2, 3]);
  var __integer_gen = function(v2009) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.values(M4.values, false, M4.add1, 0, function(i2010) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.__lt_(i2010, v2009);
    }, false, false);
  };
  var check_naturals = function(n2011) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.integer_p(n2011) !== false) {
      if (M4.exact_p(n2011) !== false) {
        var if_res1269 = M4.__gt__eq_(n2011, 0);
      } else {
        var if_res1269 = false;
      }
      var if_res1270 = if_res1269;
    } else {
      var if_res1270 = false;
    }
    if (if_res1270 !== false) {
      var if_res1271 = M4.rvoid();
    } else {
      var if_res1271 = M4.raise_argument_error($rjs_core.Symbol.make("in-naturals"), $rjs_core.UString.make("exact-nonnegative-integer?"), n2011);
    }
    return if_res1271;
  };
  var cl1272 = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_naturals(0);
  };
  var cl1273 = function(n2012) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_naturals(n2012);
    return make_range(n2012, M4.add1, false);
  };
  var in_naturals = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1274 = {
      '0': cl1272,
      '1': cl1273
    }[arguments.length];
    if (fixed_lam1274 !== undefined) {
      return fixed_lam1274.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [0, 1]);
  var let_result1275 = M4.make_struct_type($rjs_core.Symbol.make("stream"), false, 1, 0, false, M4.list(M4.cons(prop_stream, M4.vector(function(v2013) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.not(M4.pair_p(list_stream_ref(v2013, 0)));
  }, function(v2014) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.car(list_stream_ref(v2014, 0));
  }, function(v2015) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return make_list_stream(M4.cdr(list_stream_ref(v2015, 0)));
  })), M4.cons(prop_gen_sequence, function(v2016) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.values(M4.car, M4.cdr, M4.values, list_stream_ref(v2016, 0), M4.pair_p, false, false);
  })));
  var struct_list_stream = let_result1275.getAt(0);
  var make_list_stream = let_result1275.getAt(1);
  var list_stream_p = let_result1275.getAt(2);
  var list_stream_ref = let_result1275.getAt(3);
  var list_stream_set_bang_ = let_result1275.getAt(4);
  var check_list = function(l2017) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.list_p(l2017) !== false) {
      var if_res1276 = M4.rvoid();
    } else {
      var if_res1276 = M4.raise_argument_error($rjs_core.Symbol.make("in-list"), $rjs_core.UString.make("list?"), l2017);
    }
    return if_res1276;
  };
  var in_list = function(l2018) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_list(l2018);
    return make_list_stream(l2018);
  };
  var __list_gen = function(l2019) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.values(M4.car, M4.cdr, M4.values, l2019, M4.pair_p, false, false);
  };
  var in_mlist = function(l2020) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.mpair_p(l2020) !== false) {
      var if_res1277 = M4.rvoid();
    } else {
      var if_res1277 = M4.raise_argument_error($rjs_core.Symbol.make("in-mlist"), $rjs_core.UString.make("mpair?"), l2020);
    }
    if_res1277;
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __mlist_gen(l2020);
    });
  };
  var __mlist_gen = function(l2021) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.values(M4.mcar, false, M4.mcdr, l2021, M4.mpair_p, false, false);
  };
  var in_input_port_bytes = function(p2022) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.input_port_p(p2022) !== false) {
      var if_res1278 = M4.rvoid();
    } else {
      var if_res1278 = M4.raise_argument_error($rjs_core.Symbol.make("in-input-port-bytes"), $rjs_core.UString.make("input-port?"), p2022);
    }
    if_res1278;
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __input_port_gen(p2022);
    });
  };
  var __input_port_gen = function(p2023) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.values(M4.__rjs_quoted__.read_byte, false, M4.values, p2023, false, function(x2024) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.not(M4.__rjs_quoted__.eof_object_p(x2024));
    }, false);
  };
  var in_input_port_chars = function(p2025) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.input_port_p(p2025) !== false) {
      var if_res1279 = M4.rvoid();
    } else {
      var if_res1279 = M4.raise_argument_error($rjs_core.Symbol.make("in-input-port-chars"), $rjs_core.UString.make("input-port?"), p2025);
    }
    if_res1279;
    return in_producer(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.__rjs_quoted__.read_char(p2025);
    }, M4.__rjs_quoted__.eof);
  };
  var check_in_port = function(r2026, p2027) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.procedure_p(r2026) !== false) {
      var if_res1280 = M4.procedure_arity_includes_p(r2026, 1);
    } else {
      var if_res1280 = false;
    }
    if (if_res1280 !== false) {
      var if_res1281 = M4.rvoid();
    } else {
      var if_res1281 = M4.raise_argument_error($rjs_core.Symbol.make("in-port"), $rjs_core.UString.make("(procedure-arity-includes/c 1)"), r2026);
    }
    if_res1281;
    if (M4.input_port_p(p2027) !== false) {
      var if_res1282 = M4.rvoid();
    } else {
      var if_res1282 = M4.raise_argument_error($rjs_core.Symbol.make("in-port"), $rjs_core.UString.make("input-port?"), p2027);
    }
    return if_res1282;
  };
  var cl1283 = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_port(M5.__rjs_quoted__.read, M4.__rjs_quoted__.current_input_port());
  };
  var cl1284 = function(r2028) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_port(r2028, M4.__rjs_quoted__.current_input_port());
  };
  var cl1285 = function(r2029, p2030) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_port(r2029, p2030);
    return in_producer(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return r2029(p2030);
    }, M4.__rjs_quoted__.eof);
  };
  var in_port = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1286 = {
      '0': cl1283,
      '1': cl1284,
      '2': cl1285
    }[arguments.length];
    if (fixed_lam1286 !== undefined) {
      return fixed_lam1286.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [0, 1, 2]);
  var check_in_lines = function(p2031, mode2032) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.input_port_p(p2031) !== false) {
      var if_res1287 = M4.rvoid();
    } else {
      var if_res1287 = M4.raise_argument_error($rjs_core.Symbol.make("in-lines"), $rjs_core.UString.make("input-port?"), p2031);
    }
    if_res1287;
    if (M3.memq(mode2032, $rjs_core.Pair.makeList($rjs_core.Symbol.make("linefeed"), $rjs_core.Symbol.make("return"), $rjs_core.Symbol.make("return-linefeed"), $rjs_core.Symbol.make("any"), $rjs_core.Symbol.make("any-one"))) !== false) {
      var if_res1288 = M4.rvoid();
    } else {
      var if_res1288 = M4.raise_argument_error($rjs_core.Symbol.make("in-lines"), $rjs_core.UString.make("(or/c 'linefeed 'return 'return-linefeed 'any 'any-one)"), mode2032);
    }
    return if_res1288;
  };
  var cl1289 = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_lines(M4.__rjs_quoted__.current_input_port(), $rjs_core.Symbol.make("any"));
  };
  var cl1290 = function(p2033) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_lines(p2033, $rjs_core.Symbol.make("any"));
  };
  var cl1291 = function(p2034, mode2035) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_lines(p2034, mode2035);
    return in_producer(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.__rjs_quoted__.read_line(p2034, mode2035);
    }, M4.__rjs_quoted__.eof);
  };
  var in_lines = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1292 = {
      '0': cl1289,
      '1': cl1290,
      '2': cl1291
    }[arguments.length];
    if (fixed_lam1292 !== undefined) {
      return fixed_lam1292.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [0, 1, 2]);
  var check_in_bytes_lines = function(p2036, mode2037) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.input_port_p(p2036) !== false) {
      var if_res1293 = M4.rvoid();
    } else {
      var if_res1293 = M4.raise_argument_error($rjs_core.Symbol.make("in-bytes-lines"), $rjs_core.UString.make("input-port"), p2036);
    }
    if_res1293;
    if (M3.memq(mode2037, $rjs_core.Pair.makeList($rjs_core.Symbol.make("linefeed"), $rjs_core.Symbol.make("return"), $rjs_core.Symbol.make("return-linefeed"), $rjs_core.Symbol.make("any"), $rjs_core.Symbol.make("any-one"))) !== false) {
      var if_res1294 = M4.rvoid();
    } else {
      var if_res1294 = M4.raise_argument_error($rjs_core.Symbol.make("in-bytes-lines"), $rjs_core.UString.make("(or/c 'linefeed 'return 'return-linefeed 'any 'any-one)"), mode2037);
    }
    return if_res1294;
  };
  var cl1295 = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_bytes_lines(M4.__rjs_quoted__.current_input_port(), $rjs_core.Symbol.make("any"));
  };
  var cl1296 = function(p2038) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_bytes_lines(p2038, $rjs_core.Symbol.make("any"));
  };
  var cl1297 = function(p2039, mode2040) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_bytes_lines(p2039, mode2040);
    return in_producer(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.__rjs_quoted__.read_bytes_line(p2039, mode2040);
    }, M4.__rjs_quoted__.eof);
  };
  var in_bytes_lines = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1298 = {
      '0': cl1295,
      '1': cl1296,
      '2': cl1297
    }[arguments.length];
    if (fixed_lam1298 !== undefined) {
      return fixed_lam1298.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [0, 1, 2]);
  var in_stream = function(l2041) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (stream_p(l2041) !== false) {
      var if_res1299 = M4.rvoid();
    } else {
      var if_res1299 = M4.raise_argument_error($rjs_core.Symbol.make("in-stream"), $rjs_core.UString.make("stream?"), l2041);
    }
    if_res1299;
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __stream_gen(l2041);
    });
  };
  var __stream_gen = function(l2042) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.values(unsafe_stream_first, unsafe_stream_rest, M4.values, l2042, unsafe_stream_not_empty_p, false, false);
  };
  var cl1300 = function(ht2043, __get2044, __first2045, __next2046) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.values(function(pos2047) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __get2044(ht2043, pos2047);
    }, false, function(pos2048) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __next2046(ht2043, pos2048);
    }, __first2045(ht2043), function(pos2049) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return pos2049;
    }, false, false);
  };
  var cl1301 = function(ht2050, __get2051, __first2052, __next2053, bad_v2054) {
    if (arguments.length !== 5) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.values(function(pos2055) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __get2051(ht2050, pos2055, bad_v2054);
    }, false, function(pos2056) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __next2053(ht2050, pos2056);
    }, __first2052(ht2050), function(pos2057) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return pos2057;
    }, false, false);
  };
  var __hash_gen = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1302 = {
      '4': cl1300,
      '5': cl1301
    }[arguments.length];
    if (fixed_lam1302 !== undefined) {
      return fixed_lam1302.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [4, 5]);
  var mutable_p = function(ht2058) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.not(M4.immutable_p(ht2058));
  };
  var not_weak_p = function(ht2059) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.not(M4.hash_weak_p(ht2059));
  };
  var check_in_hash = function(ht2060) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2061) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.hash_p(ht2061);
    })(ht2060) !== false) {
      var if_res1303 = M4.rvoid();
    } else {
      var if_res1303 = M4.raise_argument_error($rjs_core.Symbol.make("in-hash"), $rjs_core.UString.make("hash?"), ht2060);
    }
    return if_res1303;
  };
  var cl1304 = function(ht2063) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_hash(ht2063);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2063, M4.hash_iterate_key_plus_value, M4.hash_iterate_first, M4.hash_iterate_next);
    });
  };
  var cl1305 = function(ht2064, bad_v2065) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_hash(ht2064);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2064, M4.hash_iterate_key_plus_value, M4.hash_iterate_first, M4.hash_iterate_next, bad_v2065);
    });
  };
  var in_hash2062 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1306 = {
      '1': cl1304,
      '2': cl1305
    }[arguments.length];
    if (fixed_lam1306 !== undefined) {
      return fixed_lam1306.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_hash = in_hash2062;
  var check_in_mutable_hash = function(ht2066) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2067) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.hash_p(ht2067) !== false) {
        if (mutable_p(ht2067) !== false) {
          var if_res1307 = not_weak_p(ht2067);
        } else {
          var if_res1307 = false;
        }
        var if_res1308 = if_res1307;
      } else {
        var if_res1308 = false;
      }
      return if_res1308;
    })(ht2066) !== false) {
      var if_res1309 = M4.rvoid();
    } else {
      var if_res1309 = M4.raise_argument_error($rjs_core.Symbol.make("in-mutable-hash"), $rjs_core.UString.make("(and/c hash? mutable? not-weak?)"), ht2066);
    }
    return if_res1309;
  };
  var cl1310 = function(ht2069) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_mutable_hash(ht2069);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2069, M6.unsafe_mutable_hash_iterate_key_plus_value, M6.unsafe_mutable_hash_iterate_first, M6.unsafe_mutable_hash_iterate_next);
    });
  };
  var cl1311 = function(ht2070, bad_v2071) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_mutable_hash(ht2070);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2070, M6.unsafe_mutable_hash_iterate_key_plus_value, M6.unsafe_mutable_hash_iterate_first, M6.unsafe_mutable_hash_iterate_next, bad_v2071);
    });
  };
  var in_mutable_hash2068 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1312 = {
      '1': cl1310,
      '2': cl1311
    }[arguments.length];
    if (fixed_lam1312 !== undefined) {
      return fixed_lam1312.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_mutable_hash = in_mutable_hash2068;
  var check_in_immutable_hash = function(ht2072) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2073) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.hash_p(ht2073) !== false) {
        var if_res1313 = M4.immutable_p(ht2073);
      } else {
        var if_res1313 = false;
      }
      return if_res1313;
    })(ht2072) !== false) {
      var if_res1314 = M4.rvoid();
    } else {
      var if_res1314 = M4.raise_argument_error($rjs_core.Symbol.make("in-immutable-hash"), $rjs_core.UString.make("(and/c hash? immutable?)"), ht2072);
    }
    return if_res1314;
  };
  var cl1315 = function(ht2075) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_immutable_hash(ht2075);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2075, M6.unsafe_immutable_hash_iterate_key_plus_value, M6.unsafe_immutable_hash_iterate_first, M6.unsafe_immutable_hash_iterate_next);
    });
  };
  var cl1316 = function(ht2076, bad_v2077) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_immutable_hash(ht2076);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2076, M6.unsafe_immutable_hash_iterate_key_plus_value, M6.unsafe_immutable_hash_iterate_first, M6.unsafe_immutable_hash_iterate_next, bad_v2077);
    });
  };
  var in_immutable_hash2074 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1317 = {
      '1': cl1315,
      '2': cl1316
    }[arguments.length];
    if (fixed_lam1317 !== undefined) {
      return fixed_lam1317.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_immutable_hash = in_immutable_hash2074;
  var check_in_weak_hash = function(ht2078) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2079) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.hash_p(ht2079) !== false) {
        var if_res1318 = M4.hash_weak_p(ht2079);
      } else {
        var if_res1318 = false;
      }
      return if_res1318;
    })(ht2078) !== false) {
      var if_res1319 = M4.rvoid();
    } else {
      var if_res1319 = M4.raise_argument_error($rjs_core.Symbol.make("in-weak-hash"), $rjs_core.UString.make("(and/c hash? hash-weak?)"), ht2078);
    }
    return if_res1319;
  };
  var cl1320 = function(ht2081) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_weak_hash(ht2081);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2081, M6.__rjs_quoted__.unsafe_weak_hash_iterate_key_plus_value, M6.__rjs_quoted__.unsafe_weak_hash_iterate_first, M6.__rjs_quoted__.unsafe_weak_hash_iterate_next);
    });
  };
  var cl1321 = function(ht2082, bad_v2083) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_weak_hash(ht2082);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2082, M6.__rjs_quoted__.unsafe_weak_hash_iterate_key_plus_value, M6.__rjs_quoted__.unsafe_weak_hash_iterate_first, M6.__rjs_quoted__.unsafe_weak_hash_iterate_next, bad_v2083);
    });
  };
  var in_weak_hash2080 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1322 = {
      '1': cl1320,
      '2': cl1321
    }[arguments.length];
    if (fixed_lam1322 !== undefined) {
      return fixed_lam1322.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_weak_hash = in_weak_hash2080;
  var check_in_hash_keys = function(ht2084) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2085) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.hash_p(ht2085);
    })(ht2084) !== false) {
      var if_res1323 = M4.rvoid();
    } else {
      var if_res1323 = M4.raise_argument_error($rjs_core.Symbol.make("in-hash-keys"), $rjs_core.UString.make("hash?"), ht2084);
    }
    return if_res1323;
  };
  var cl1324 = function(ht2087) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_hash_keys(ht2087);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2087, M4.hash_iterate_key, M4.hash_iterate_first, M4.hash_iterate_next);
    });
  };
  var cl1325 = function(ht2088, bad_v2089) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_hash_keys(ht2088);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2088, M4.hash_iterate_key, M4.hash_iterate_first, M4.hash_iterate_next, bad_v2089);
    });
  };
  var in_hash_keys2086 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1326 = {
      '1': cl1324,
      '2': cl1325
    }[arguments.length];
    if (fixed_lam1326 !== undefined) {
      return fixed_lam1326.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_hash_keys = in_hash_keys2086;
  var check_in_mutable_hash_keys = function(ht2090) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2091) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.hash_p(ht2091) !== false) {
        if (mutable_p(ht2091) !== false) {
          var if_res1327 = not_weak_p(ht2091);
        } else {
          var if_res1327 = false;
        }
        var if_res1328 = if_res1327;
      } else {
        var if_res1328 = false;
      }
      return if_res1328;
    })(ht2090) !== false) {
      var if_res1329 = M4.rvoid();
    } else {
      var if_res1329 = M4.raise_argument_error($rjs_core.Symbol.make("in-mutable-hash-keys"), $rjs_core.UString.make("(and/c hash? mutable? not-weak?)"), ht2090);
    }
    return if_res1329;
  };
  var cl1330 = function(ht2093) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_mutable_hash_keys(ht2093);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2093, M6.unsafe_mutable_hash_iterate_key, M6.unsafe_mutable_hash_iterate_first, M6.unsafe_mutable_hash_iterate_next);
    });
  };
  var cl1331 = function(ht2094, bad_v2095) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_mutable_hash_keys(ht2094);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2094, M6.unsafe_mutable_hash_iterate_key, M6.unsafe_mutable_hash_iterate_first, M6.unsafe_mutable_hash_iterate_next, bad_v2095);
    });
  };
  var in_mutable_hash_keys2092 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1332 = {
      '1': cl1330,
      '2': cl1331
    }[arguments.length];
    if (fixed_lam1332 !== undefined) {
      return fixed_lam1332.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_mutable_hash_keys = in_mutable_hash_keys2092;
  var check_in_immutable_hash_keys = function(ht2096) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2097) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.hash_p(ht2097) !== false) {
        var if_res1333 = M4.immutable_p(ht2097);
      } else {
        var if_res1333 = false;
      }
      return if_res1333;
    })(ht2096) !== false) {
      var if_res1334 = M4.rvoid();
    } else {
      var if_res1334 = M4.raise_argument_error($rjs_core.Symbol.make("in-immutable-hash-keys"), $rjs_core.UString.make("(and/c hash? immutable?)"), ht2096);
    }
    return if_res1334;
  };
  var cl1335 = function(ht2099) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_immutable_hash_keys(ht2099);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2099, M6.unsafe_immutable_hash_iterate_key, M6.unsafe_immutable_hash_iterate_first, M6.unsafe_immutable_hash_iterate_next);
    });
  };
  var cl1336 = function(ht2100, bad_v2101) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_immutable_hash_keys(ht2100);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2100, M6.unsafe_immutable_hash_iterate_key, M6.unsafe_immutable_hash_iterate_first, M6.unsafe_immutable_hash_iterate_next, bad_v2101);
    });
  };
  var in_immutable_hash_keys2098 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1337 = {
      '1': cl1335,
      '2': cl1336
    }[arguments.length];
    if (fixed_lam1337 !== undefined) {
      return fixed_lam1337.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_immutable_hash_keys = in_immutable_hash_keys2098;
  var check_in_weak_hash_keys = function(ht2102) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2103) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.hash_p(ht2103) !== false) {
        var if_res1338 = M4.hash_weak_p(ht2103);
      } else {
        var if_res1338 = false;
      }
      return if_res1338;
    })(ht2102) !== false) {
      var if_res1339 = M4.rvoid();
    } else {
      var if_res1339 = M4.raise_argument_error($rjs_core.Symbol.make("in-weak-hash-keys"), $rjs_core.UString.make("(and/c hash? hash-weak?)"), ht2102);
    }
    return if_res1339;
  };
  var cl1340 = function(ht2105) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_weak_hash_keys(ht2105);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2105, M6.__rjs_quoted__.unsafe_weak_hash_iterate_key, M6.__rjs_quoted__.unsafe_weak_hash_iterate_first, M6.__rjs_quoted__.unsafe_weak_hash_iterate_next);
    });
  };
  var cl1341 = function(ht2106, bad_v2107) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_weak_hash_keys(ht2106);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2106, M6.__rjs_quoted__.unsafe_weak_hash_iterate_key, M6.__rjs_quoted__.unsafe_weak_hash_iterate_first, M6.__rjs_quoted__.unsafe_weak_hash_iterate_next, bad_v2107);
    });
  };
  var in_weak_hash_keys2104 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1342 = {
      '1': cl1340,
      '2': cl1341
    }[arguments.length];
    if (fixed_lam1342 !== undefined) {
      return fixed_lam1342.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_weak_hash_keys = in_weak_hash_keys2104;
  var check_in_hash_values = function(ht2108) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2109) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.hash_p(ht2109);
    })(ht2108) !== false) {
      var if_res1343 = M4.rvoid();
    } else {
      var if_res1343 = M4.raise_argument_error($rjs_core.Symbol.make("in-hash-values"), $rjs_core.UString.make("hash?"), ht2108);
    }
    return if_res1343;
  };
  var cl1344 = function(ht2111) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_hash_values(ht2111);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2111, M4.hash_iterate_value, M4.hash_iterate_first, M4.hash_iterate_next);
    });
  };
  var cl1345 = function(ht2112, bad_v2113) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_hash_values(ht2112);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2112, M4.hash_iterate_value, M4.hash_iterate_first, M4.hash_iterate_next, bad_v2113);
    });
  };
  var in_hash_values2110 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1346 = {
      '1': cl1344,
      '2': cl1345
    }[arguments.length];
    if (fixed_lam1346 !== undefined) {
      return fixed_lam1346.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_hash_values = in_hash_values2110;
  var check_in_mutable_hash_values = function(ht2114) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2115) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.hash_p(ht2115) !== false) {
        if (mutable_p(ht2115) !== false) {
          var if_res1347 = not_weak_p(ht2115);
        } else {
          var if_res1347 = false;
        }
        var if_res1348 = if_res1347;
      } else {
        var if_res1348 = false;
      }
      return if_res1348;
    })(ht2114) !== false) {
      var if_res1349 = M4.rvoid();
    } else {
      var if_res1349 = M4.raise_argument_error($rjs_core.Symbol.make("in-mutable-hash-values"), $rjs_core.UString.make("(and/c hash? mutable? not-weak?)"), ht2114);
    }
    return if_res1349;
  };
  var cl1350 = function(ht2117) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_mutable_hash_values(ht2117);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2117, M6.unsafe_mutable_hash_iterate_value, M6.unsafe_mutable_hash_iterate_first, M6.unsafe_mutable_hash_iterate_next);
    });
  };
  var cl1351 = function(ht2118, bad_v2119) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_mutable_hash_values(ht2118);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2118, M6.unsafe_mutable_hash_iterate_value, M6.unsafe_mutable_hash_iterate_first, M6.unsafe_mutable_hash_iterate_next, bad_v2119);
    });
  };
  var in_mutable_hash_values2116 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1352 = {
      '1': cl1350,
      '2': cl1351
    }[arguments.length];
    if (fixed_lam1352 !== undefined) {
      return fixed_lam1352.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_mutable_hash_values = in_mutable_hash_values2116;
  var check_in_immutable_hash_values = function(ht2120) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2121) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.hash_p(ht2121) !== false) {
        var if_res1353 = M4.immutable_p(ht2121);
      } else {
        var if_res1353 = false;
      }
      return if_res1353;
    })(ht2120) !== false) {
      var if_res1354 = M4.rvoid();
    } else {
      var if_res1354 = M4.raise_argument_error($rjs_core.Symbol.make("in-immutable-hash-values"), $rjs_core.UString.make("(and/c hash? immutable?)"), ht2120);
    }
    return if_res1354;
  };
  var cl1355 = function(ht2123) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_immutable_hash_values(ht2123);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2123, M6.unsafe_immutable_hash_iterate_value, M6.unsafe_immutable_hash_iterate_first, M6.unsafe_immutable_hash_iterate_next);
    });
  };
  var cl1356 = function(ht2124, bad_v2125) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_immutable_hash_values(ht2124);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2124, M6.unsafe_immutable_hash_iterate_value, M6.unsafe_immutable_hash_iterate_first, M6.unsafe_immutable_hash_iterate_next, bad_v2125);
    });
  };
  var in_immutable_hash_values2122 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1357 = {
      '1': cl1355,
      '2': cl1356
    }[arguments.length];
    if (fixed_lam1357 !== undefined) {
      return fixed_lam1357.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_immutable_hash_values = in_immutable_hash_values2122;
  var check_in_weak_hash_values = function(ht2126) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2127) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.hash_p(ht2127) !== false) {
        var if_res1358 = M4.hash_weak_p(ht2127);
      } else {
        var if_res1358 = false;
      }
      return if_res1358;
    })(ht2126) !== false) {
      var if_res1359 = M4.rvoid();
    } else {
      var if_res1359 = M4.raise_argument_error($rjs_core.Symbol.make("in-weak-hash-values"), $rjs_core.UString.make("(and/c hash? hash-weak?)"), ht2126);
    }
    return if_res1359;
  };
  var cl1360 = function(ht2129) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_weak_hash_values(ht2129);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2129, M6.__rjs_quoted__.unsafe_weak_hash_iterate_value, M6.__rjs_quoted__.unsafe_weak_hash_iterate_first, M6.__rjs_quoted__.unsafe_weak_hash_iterate_next);
    });
  };
  var cl1361 = function(ht2130, bad_v2131) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_weak_hash_values(ht2130);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2130, M6.__rjs_quoted__.unsafe_weak_hash_iterate_value, M6.__rjs_quoted__.unsafe_weak_hash_iterate_first, M6.__rjs_quoted__.unsafe_weak_hash_iterate_next, bad_v2131);
    });
  };
  var in_weak_hash_values2128 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1362 = {
      '1': cl1360,
      '2': cl1361
    }[arguments.length];
    if (fixed_lam1362 !== undefined) {
      return fixed_lam1362.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_weak_hash_values = in_weak_hash_values2128;
  var check_in_hash_pairs = function(ht2132) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2133) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.hash_p(ht2133);
    })(ht2132) !== false) {
      var if_res1363 = M4.rvoid();
    } else {
      var if_res1363 = M4.raise_argument_error($rjs_core.Symbol.make("in-hash-pairs"), $rjs_core.UString.make("hash?"), ht2132);
    }
    return if_res1363;
  };
  var cl1364 = function(ht2135) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_hash_pairs(ht2135);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2135, M4.hash_iterate_pair, M4.hash_iterate_first, M4.hash_iterate_next);
    });
  };
  var cl1365 = function(ht2136, bad_v2137) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_hash_pairs(ht2136);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2136, M4.hash_iterate_pair, M4.hash_iterate_first, M4.hash_iterate_next, bad_v2137);
    });
  };
  var in_hash_pairs2134 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1366 = {
      '1': cl1364,
      '2': cl1365
    }[arguments.length];
    if (fixed_lam1366 !== undefined) {
      return fixed_lam1366.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_hash_pairs = in_hash_pairs2134;
  var check_in_mutable_hash_pairs = function(ht2138) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2139) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.hash_p(ht2139) !== false) {
        if (mutable_p(ht2139) !== false) {
          var if_res1367 = not_weak_p(ht2139);
        } else {
          var if_res1367 = false;
        }
        var if_res1368 = if_res1367;
      } else {
        var if_res1368 = false;
      }
      return if_res1368;
    })(ht2138) !== false) {
      var if_res1369 = M4.rvoid();
    } else {
      var if_res1369 = M4.raise_argument_error($rjs_core.Symbol.make("in-mutable-hash-pairs"), $rjs_core.UString.make("(and/c hash? mutable? not-weak?)"), ht2138);
    }
    return if_res1369;
  };
  var cl1370 = function(ht2141) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_mutable_hash_pairs(ht2141);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2141, M6.unsafe_mutable_hash_iterate_pair, M6.unsafe_mutable_hash_iterate_first, M6.unsafe_mutable_hash_iterate_next);
    });
  };
  var cl1371 = function(ht2142, bad_v2143) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_mutable_hash_pairs(ht2142);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2142, M6.unsafe_mutable_hash_iterate_pair, M6.unsafe_mutable_hash_iterate_first, M6.unsafe_mutable_hash_iterate_next, bad_v2143);
    });
  };
  var in_mutable_hash_pairs2140 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1372 = {
      '1': cl1370,
      '2': cl1371
    }[arguments.length];
    if (fixed_lam1372 !== undefined) {
      return fixed_lam1372.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_mutable_hash_pairs = in_mutable_hash_pairs2140;
  var check_in_immutable_hash_pairs = function(ht2144) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2145) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.hash_p(ht2145) !== false) {
        var if_res1373 = M4.immutable_p(ht2145);
      } else {
        var if_res1373 = false;
      }
      return if_res1373;
    })(ht2144) !== false) {
      var if_res1374 = M4.rvoid();
    } else {
      var if_res1374 = M4.raise_argument_error($rjs_core.Symbol.make("in-immutable-hash-pairs"), $rjs_core.UString.make("(and/c hash? immutable?)"), ht2144);
    }
    return if_res1374;
  };
  var cl1375 = function(ht2147) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_immutable_hash_pairs(ht2147);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2147, M6.unsafe_immutable_hash_iterate_pair, M6.unsafe_immutable_hash_iterate_first, M6.unsafe_immutable_hash_iterate_next);
    });
  };
  var cl1376 = function(ht2148, bad_v2149) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_immutable_hash_pairs(ht2148);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2148, M6.unsafe_immutable_hash_iterate_pair, M6.unsafe_immutable_hash_iterate_first, M6.unsafe_immutable_hash_iterate_next, bad_v2149);
    });
  };
  var in_immutable_hash_pairs2146 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1377 = {
      '1': cl1375,
      '2': cl1376
    }[arguments.length];
    if (fixed_lam1377 !== undefined) {
      return fixed_lam1377.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_immutable_hash_pairs = in_immutable_hash_pairs2146;
  var check_in_weak_hash_pairs = function(ht2150) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if ((function(ht2151) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.hash_p(ht2151) !== false) {
        var if_res1378 = M4.hash_weak_p(ht2151);
      } else {
        var if_res1378 = false;
      }
      return if_res1378;
    })(ht2150) !== false) {
      var if_res1379 = M4.rvoid();
    } else {
      var if_res1379 = M4.raise_argument_error($rjs_core.Symbol.make("in-weak-hash-pairs"), $rjs_core.UString.make("(and/c hash? hash-weak?)"), ht2150);
    }
    return if_res1379;
  };
  var cl1380 = function(ht2153) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_weak_hash_pairs(ht2153);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2153, M6.__rjs_quoted__.unsafe_weak_hash_iterate_pair, M6.__rjs_quoted__.unsafe_weak_hash_iterate_first, M6.__rjs_quoted__.unsafe_weak_hash_iterate_next);
    });
  };
  var cl1381 = function(ht2154, bad_v2155) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    check_in_weak_hash_pairs(ht2154);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __hash_gen(ht2154, M6.__rjs_quoted__.unsafe_weak_hash_iterate_pair, M6.__rjs_quoted__.unsafe_weak_hash_iterate_first, M6.__rjs_quoted__.unsafe_weak_hash_iterate_next, bad_v2155);
    });
  };
  var in_weak_hash_pairs2152 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1382 = {
      '1': cl1380,
      '2': cl1381
    }[arguments.length];
    if (fixed_lam1382 !== undefined) {
      return fixed_lam1382.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var default_in_weak_hash_pairs = in_weak_hash_pairs2152;
  var check_ranges = function(who2156, vec2157, start2158, stop2159, step2160, len2161) {
    if (arguments.length !== 6) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.exact_nonnegative_integer_p(start2158) !== false) {
      var or_part2162 = M4.__lt_(start2158, len2161);
      if (or_part2162 !== false) {
        var if_res1383 = or_part2162;
      } else {
        var if_res1383 = M4.__eq_(len2161, start2158, stop2159);
      }
      var if_res1384 = if_res1383;
    } else {
      var if_res1384 = false;
    }
    if (if_res1384 !== false) {
      var if_res1385 = M4.rvoid();
    } else {
      var if_res1385 = M4.__rjs_quoted__.raise_range_error(who2156, $rjs_core.UString.make("vector"), $rjs_core.UString.make("starting "), start2158, vec2157, 0, M4.sub1(len2161));
    }
    if_res1385;
    if (M4.exact_integer_p(stop2159) !== false) {
      if (M4.__lt__eq_(-1, stop2159) !== false) {
        var if_res1386 = M4.__lt__eq_(stop2159, len2161);
      } else {
        var if_res1386 = false;
      }
      var if_res1387 = if_res1386;
    } else {
      var if_res1387 = false;
    }
    if (if_res1387 !== false) {
      var if_res1388 = M4.rvoid();
    } else {
      var if_res1388 = M4.__rjs_quoted__.raise_range_error(who2156, $rjs_core.UString.make("vector"), $rjs_core.UString.make("stopping "), stop2159, vec2157, -1, len2161);
    }
    if_res1388;
    if (M4.exact_integer_p(step2160) !== false) {
      var if_res1389 = M4.not(M4.zero_p(step2160));
    } else {
      var if_res1389 = false;
    }
    if (if_res1389 !== false) {
      var if_res1390 = M4.rvoid();
    } else {
      var if_res1390 = M4.raise_argument_error(who2156, $rjs_core.UString.make("(and/c exact-integer? (not/c zero?))"), step2160);
    }
    if_res1390;
    if (M4.__lt_(start2158, stop2159) !== false) {
      var if_res1391 = M4.__lt_(step2160, 0);
    } else {
      var if_res1391 = false;
    }
    if (if_res1391 !== false) {
      var if_res1392 = M4.raise_arguments_error(who2156, $rjs_core.UString.make("starting index less than stopping index, but given a negative step"), $rjs_core.UString.make("starting index"), start2158, $rjs_core.UString.make("stopping index"), stop2159, $rjs_core.UString.make("step"), step2160);
    } else {
      var if_res1392 = M4.rvoid();
    }
    if_res1392;
    if (M4.__lt_(stop2159, start2158) !== false) {
      var if_res1393 = M4.__gt_(step2160, 0);
    } else {
      var if_res1393 = false;
    }
    if (if_res1393 !== false) {
      var if_res1394 = M4.raise_arguments_error(who2156, $rjs_core.UString.make("starting index more than stopping index, but given a positive step"), $rjs_core.UString.make("starting index"), start2158, $rjs_core.UString.make("stopping index"), stop2159, $rjs_core.UString.make("step"), step2160);
    } else {
      var if_res1394 = M4.rvoid();
    }
    return if_res1394;
  };
  var normalise_inputs = function(who2163, type_name2164, vector_p2165, unsafe_vector_length2166, vec2167, start2168, stop2169, step2170) {
    if (arguments.length !== 8) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (vector_p2165(vec2167) !== false) {
      var if_res1395 = M4.rvoid();
    } else {
      var if_res1395 = M4.raise_argument_error(who2163, type_name2164, vec2167);
    }
    if_res1395;
    var len2171 = unsafe_vector_length2166(vec2167);
    if (stop2169 !== false) {
      var if_res1396 = stop2169;
    } else {
      var if_res1396 = len2171;
    }
    var stop_times_2172 = if_res1396;
    check_ranges(who2163, vec2167, start2168, stop_times_2172, step2170, len2171);
    return M4.values(vec2167, start2168, stop_times_2172, step2170);
  };
  var __vector_gen = function(v2173, start2174, stop2175, step2176) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.__eq_(step2176, 1) !== false) {
      var if_res1398 = M4.add1;
    } else {
      var if_res1398 = function(i2178) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return i2178 + step2176;
      };
    }
    if (M4.__gt_(step2176, 0) !== false) {
      var if_res1397 = function(i2179) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.__lt_(i2179, stop2175);
      };
    } else {
      var if_res1397 = function(i2180) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.__gt_(i2180, stop2175);
      };
    }
    return M4.values(function(i2177) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M6.unsafe_vector_ref(v2173, i2177);
    }, false, if_res1398, start2174, if_res1397, false, false);
  };
  var cl1399 = function(v2181) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_vector(v2181, 0, false, 1);
  };
  var cl1400 = function(v2182, start2183) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_vector(v2182, start2183, false, 1);
  };
  var cl1401 = function(v2184, start2185, stop2186) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_vector(v2184, start2185, stop2186, 1);
  };
  var cl1402 = function(v2187, start2188, stop2189, step2190) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var let_result1404 = normalise_inputs($rjs_core.Symbol.make("in-vector"), $rjs_core.UString.make("vector"), M4.vector_p, M4.vector_length, v2187, start2188, stop2189, step2190);
    var v2191 = let_result1404.getAt(0);
    var start2192 = let_result1404.getAt(1);
    var stop2193 = let_result1404.getAt(2);
    var step2194 = let_result1404.getAt(3);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __vector_gen(v2191, start2192, stop2193, step2194);
    });
  };
  var in_vector = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1403 = {
      '1': cl1399,
      '2': cl1400,
      '3': cl1401,
      '4': cl1402
    }[arguments.length];
    if (fixed_lam1403 !== undefined) {
      return fixed_lam1403.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2, 3, 4]);
  var check_vector = function(v2195) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.vector_p(v2195) !== false) {
      var if_res1405 = M4.rvoid();
    } else {
      var if_res1405 = M4.raise_argument_error($rjs_core.Symbol.make("in-vector"), $rjs_core.UString.make("vector"), v2195);
    }
    return if_res1405;
  };
  var __string_gen = function(v2196, start2197, stop2198, step2199) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.__eq_(step2199, 1) !== false) {
      var if_res1407 = M4.add1;
    } else {
      var if_res1407 = function(i2201) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return i2201 + step2199;
      };
    }
    if (M4.__gt_(step2199, 0) !== false) {
      var if_res1406 = function(i2202) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.__lt_(i2202, stop2198);
      };
    } else {
      var if_res1406 = function(i2203) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.__gt_(i2203, stop2198);
      };
    }
    return M4.values(function(i2200) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.string_ref(v2196, i2200);
    }, false, if_res1407, start2197, if_res1406, false, false);
  };
  var cl1408 = function(v2204) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_string(v2204, 0, false, 1);
  };
  var cl1409 = function(v2205, start2206) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_string(v2205, start2206, false, 1);
  };
  var cl1410 = function(v2207, start2208, stop2209) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_string(v2207, start2208, stop2209, 1);
  };
  var cl1411 = function(v2210, start2211, stop2212, step2213) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var let_result1413 = normalise_inputs($rjs_core.Symbol.make("in-string"), $rjs_core.UString.make("string"), M4.string_p, M4.string_length, v2210, start2211, stop2212, step2213);
    var v2214 = let_result1413.getAt(0);
    var start2215 = let_result1413.getAt(1);
    var stop2216 = let_result1413.getAt(2);
    var step2217 = let_result1413.getAt(3);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __string_gen(v2214, start2215, stop2216, step2217);
    });
  };
  var in_string = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1412 = {
      '1': cl1408,
      '2': cl1409,
      '3': cl1410,
      '4': cl1411
    }[arguments.length];
    if (fixed_lam1412 !== undefined) {
      return fixed_lam1412.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2, 3, 4]);
  var check_string = function(v2218) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.string_p(v2218) !== false) {
      var if_res1414 = M4.rvoid();
    } else {
      var if_res1414 = M4.raise_argument_error($rjs_core.Symbol.make("in-string"), $rjs_core.UString.make("string"), v2218);
    }
    return if_res1414;
  };
  var __bytes_gen = function(v2219, start2220, stop2221, step2222) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.__eq_(step2222, 1) !== false) {
      var if_res1416 = M4.add1;
    } else {
      var if_res1416 = function(i2224) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return i2224 + step2222;
      };
    }
    if (M4.__gt_(step2222, 0) !== false) {
      var if_res1415 = function(i2225) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.__lt_(i2225, stop2221);
      };
    } else {
      var if_res1415 = function(i2226) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.__gt_(i2226, stop2221);
      };
    }
    return M4.values(function(i2223) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M6.__rjs_quoted__.unsafe_bytes_ref(v2219, i2223);
    }, false, if_res1416, start2220, if_res1415, false, false);
  };
  var cl1417 = function(v2227) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_bytes(v2227, 0, false, 1);
  };
  var cl1418 = function(v2228, start2229) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_bytes(v2228, start2229, false, 1);
  };
  var cl1419 = function(v2230, start2231, stop2232) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_bytes(v2230, start2231, stop2232, 1);
  };
  var cl1420 = function(v2233, start2234, stop2235, step2236) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var let_result1422 = normalise_inputs($rjs_core.Symbol.make("in-bytes"), $rjs_core.UString.make("bytes"), M4.bytes_p, M4.__rjs_quoted__.bytes_length, v2233, start2234, stop2235, step2236);
    var v2237 = let_result1422.getAt(0);
    var start2238 = let_result1422.getAt(1);
    var stop2239 = let_result1422.getAt(2);
    var step2240 = let_result1422.getAt(3);
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return __bytes_gen(v2237, start2238, stop2239, step2240);
    });
  };
  var in_bytes = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1421 = {
      '1': cl1417,
      '2': cl1418,
      '3': cl1419,
      '4': cl1420
    }[arguments.length];
    if (fixed_lam1421 !== undefined) {
      return fixed_lam1421.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2, 3, 4]);
  var check_bytes = function(v2241) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.bytes_p(v2241) !== false) {
      var if_res1423 = M4.rvoid();
    } else {
      var if_res1423 = M4.raise_argument_error($rjs_core.Symbol.make("in-bytes"), $rjs_core.UString.make("bytes"), v2241);
    }
    return if_res1423;
  };
  var __flvector_gen = function(v2242, start2243, stop2244, step2245) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.__eq_(step2245, 1) !== false) {
      var if_res1425 = M4.add1;
    } else {
      var if_res1425 = function(i2247) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return i2247 + step2245;
      };
    }
    if (M4.__gt_(step2245, 0) !== false) {
      var if_res1424 = function(i2248) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.__lt_(i2248, stop2244);
      };
    } else {
      var if_res1424 = function(i2249) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.__gt_(i2249, stop2244);
      };
    }
    return M4.values(function(i2246) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M6.__rjs_quoted__.unsafe_flvector_ref(v2242, i2246);
    }, false, if_res1425, start2243, if_res1424, false, false);
  };
  var __fxvector_gen = function(v2250, start2251, stop2252, step2253) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.__eq_(step2253, 1) !== false) {
      var if_res1427 = M4.add1;
    } else {
      var if_res1427 = function(i2255) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return i2255 + step2253;
      };
    }
    if (M4.__gt_(step2253, 0) !== false) {
      var if_res1426 = function(i2256) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.__lt_(i2256, stop2252);
      };
    } else {
      var if_res1426 = function(i2257) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.__gt_(i2257, stop2252);
      };
    }
    return M4.values(function(i2254) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M6.__rjs_quoted__.unsafe_fxvector_ref(v2250, i2254);
    }, false, if_res1427, start2251, if_res1426, false, false);
  };
  var stop_before = function(g2258, pred2259) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (sequence_p(g2258) !== false) {
      var if_res1428 = M4.rvoid();
    } else {
      var if_res1428 = M4.raise_argument_error($rjs_core.Symbol.make("stop-before"), $rjs_core.UString.make("sequence?"), g2258);
    }
    if_res1428;
    if (M4.procedure_p(pred2259) !== false) {
      var if_res1429 = M4.procedure_arity_includes_p(pred2259, 1);
    } else {
      var if_res1429 = false;
    }
    if (if_res1429 !== false) {
      var if_res1430 = M4.rvoid();
    } else {
      var if_res1430 = M4.raise_argument_error($rjs_core.Symbol.make("stop-before"), $rjs_core.UString.make("(procedure-arity-includes/c 1)"), pred2259);
    }
    if_res1430;
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var let_result1431 = make_sequence(false, g2258);
      var pos__gt_val2260 = let_result1431.getAt(0);
      var pre_pos_next2261 = let_result1431.getAt(1);
      var pos_next2262 = let_result1431.getAt(2);
      var init2263 = let_result1431.getAt(3);
      var pos_cont_p2264 = let_result1431.getAt(4);
      var pre_cont_p2265 = let_result1431.getAt(5);
      var post_cont_p2266 = let_result1431.getAt(6);
      var cl1432 = function(val2267) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (pre_cont_p2265 !== false) {
          var if_res1436 = pre_cont_p2265(val2267);
        } else {
          var if_res1436 = true;
        }
        if (if_res1436 !== false) {
          var if_res1437 = M4.not(pred2259(val2267));
        } else {
          var if_res1437 = false;
        }
        return if_res1437;
      };
      var cl1433 = $rjs_core.attachProcedureArity(function() {
        for (var vals22681438 = [],
            $__1 = 0; $__1 < arguments.length; $__1++)
          vals22681438[$__1] = arguments[$__1];
        var vals2268 = $rjs_core.Pair.listFromArray(vals22681438);
        if (pre_cont_p2265 !== false) {
          var if_res1439 = M4.apply(pre_cont_p2265, vals2268);
        } else {
          var if_res1439 = true;
        }
        if (if_res1439 !== false) {
          var if_res1440 = M4.not(M4.apply(pred2259, vals2268));
        } else {
          var if_res1440 = false;
        }
        return if_res1440;
      });
      return M4.values(pos__gt_val2260, pre_pos_next2261, pos_next2262, init2263, pos_cont_p2264, $rjs_core.attachProcedureArity(function() {
        var fixed_lam1434 = {'1': cl1432}[arguments.length];
        if (fixed_lam1434 !== undefined) {
          return fixed_lam1434.apply(null, arguments);
        } else {
          if (true !== false) {
            var if_res1435 = cl1433.apply(null, arguments);
          } else {
            var if_res1435 = M4.error($rjs_core.UString.make("case-lambda: invalid case"));
          }
          return if_res1435;
        }
      }, [M4.make_arity_at_least(0)]), post_cont_p2266);
    });
  };
  var stop_after = function(g2269, pred2270) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (sequence_p(g2269) !== false) {
      var if_res1441 = M4.rvoid();
    } else {
      var if_res1441 = M4.raise_argument_error($rjs_core.Symbol.make("stop-after"), $rjs_core.UString.make("sequence?"), g2269);
    }
    if_res1441;
    if (M4.procedure_p(pred2270) !== false) {
      var if_res1442 = M4.procedure_arity_includes_p(pred2270, 1);
    } else {
      var if_res1442 = false;
    }
    if (if_res1442 !== false) {
      var if_res1443 = M4.rvoid();
    } else {
      var if_res1443 = M4.raise_argument_error($rjs_core.Symbol.make("stop-after"), $rjs_core.UString.make("(procedure-arity-includes/c 1)"), pred2270);
    }
    if_res1443;
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var let_result1444 = make_sequence(false, g2269);
      var pos__gt_val2271 = let_result1444.getAt(0);
      var pre_pos_next2272 = let_result1444.getAt(1);
      var pos_next2273 = let_result1444.getAt(2);
      var init2274 = let_result1444.getAt(3);
      var pos_cont_p2275 = let_result1444.getAt(4);
      var pre_cont_p2276 = let_result1444.getAt(5);
      var post_cont_p2277 = let_result1444.getAt(6);
      var cl1445 = function(pos2278, val2279) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (post_cont_p2277 !== false) {
          var if_res1449 = post_cont_p2277(pos2278, val2279);
        } else {
          var if_res1449 = true;
        }
        if (if_res1449 !== false) {
          var if_res1450 = M4.not(pred2270(val2279));
        } else {
          var if_res1450 = false;
        }
        return if_res1450;
      };
      var cl1446 = $rjs_core.attachProcedureArity(function(pos2280) {
        for (var vals22811451 = [],
            $__1 = 1; $__1 < arguments.length; $__1++)
          vals22811451[$__1 - 1] = arguments[$__1];
        if (arguments.length < 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        var vals2281 = $rjs_core.Pair.listFromArray(vals22811451);
        if (post_cont_p2277 !== false) {
          var if_res1452 = M4.apply(post_cont_p2277, pos2280, vals2281);
        } else {
          var if_res1452 = true;
        }
        if (if_res1452 !== false) {
          var if_res1453 = M4.not(M4.apply(pred2270, vals2281));
        } else {
          var if_res1453 = false;
        }
        return if_res1453;
      });
      return M4.values(pos__gt_val2271, pre_pos_next2272, pos_next2273, init2274, pos_cont_p2275, pre_cont_p2276, $rjs_core.attachProcedureArity(function() {
        var fixed_lam1447 = {'2': cl1445}[arguments.length];
        if (fixed_lam1447 !== undefined) {
          return fixed_lam1447.apply(null, arguments);
        } else {
          if (M4.__gt__eq_(cl1446.length, 1) !== false) {
            var if_res1448 = cl1446.apply(null, arguments);
          } else {
            var if_res1448 = M4.error($rjs_core.UString.make("case-lambda: invalid case"));
          }
          return if_res1448;
        }
      }, [M4.make_arity_at_least(1)]));
    });
  };
  var in_indexed = function(g2282) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (sequence_p(g2282) !== false) {
      var if_res1454 = M4.rvoid();
    } else {
      var if_res1454 = M4.raise_argument_error($rjs_core.Symbol.make("in-indexed"), $rjs_core.UString.make("sequence?"), g2282);
    }
    if_res1454;
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var let_result1455 = make_sequence(false, g2282);
      var pos__gt_val2283 = let_result1455.getAt(0);
      var pre_pos_next2284 = let_result1455.getAt(1);
      var pos_next2285 = let_result1455.getAt(2);
      var init2286 = let_result1455.getAt(3);
      var pos_cont_p2287 = let_result1455.getAt(4);
      var pre_cont_p2288 = let_result1455.getAt(5);
      var post_cont_p2289 = let_result1455.getAt(6);
      if (pre_pos_next2284 !== false) {
        var if_res1460 = function(pos2291) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return M4.cons(pre_pos_next2284(M4.car(pos2291)), M4.cdr(pos2291));
        };
      } else {
        var if_res1460 = false;
      }
      var temp1459 = M4.cons(init2286, 0);
      if (pos_cont_p2287 !== false) {
        var if_res1458 = function(pos2293) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return pos_cont_p2287(M4.car(pos2293));
        };
      } else {
        var if_res1458 = false;
      }
      if (pre_cont_p2288 !== false) {
        var if_res1457 = function(val2294, idx2295) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return pre_cont_p2288(val2294);
        };
      } else {
        var if_res1457 = false;
      }
      if (post_cont_p2289 !== false) {
        var if_res1456 = function(pos2296, val2297, idx2298) {
          if (arguments.length !== 3) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return post_cont_p2289(M4.car(pos2296), val2297);
        };
      } else {
        var if_res1456 = false;
      }
      return M4.values(function(pos2290) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.values(pos__gt_val2283(M4.car(pos2290)), M4.cdr(pos2290));
      }, if_res1460, function(pos2292) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.cons(pos_next2285(M4.car(pos2292)), M4.add1(M4.cdr(pos2292)));
      }, temp1459, if_res1458, if_res1457, if_res1456);
    });
  };
  var in_value = function(v2299) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.values(function(pos2300) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return v2299;
      }, function(pos2301) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return false;
      }, true, function(pos2302) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return pos2302;
      }, false, false);
    });
  };
  var in_values_sequence = function(g2303) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (sequence_p(g2303) !== false) {
      var if_res1461 = M4.rvoid();
    } else {
      var if_res1461 = M4.raise_argument_error($rjs_core.Symbol.make("in-values-sequence"), $rjs_core.UString.make("sequence?"), g2303);
    }
    if_res1461;
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var let_result1462 = make_sequence(false, g2303);
      var pos__gt_val2304 = let_result1462.getAt(0);
      var pre_pos_next2305 = let_result1462.getAt(1);
      var pos_next2306 = let_result1462.getAt(2);
      var init2307 = let_result1462.getAt(3);
      var pos_cont_p2308 = let_result1462.getAt(4);
      var pre_cont_p2309 = let_result1462.getAt(5);
      var post_cont_p2310 = let_result1462.getAt(6);
      if (pre_cont_p2309 !== false) {
        var if_res1464 = function(vals2312) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return M4.apply(pre_cont_p2309, vals2312);
        };
      } else {
        var if_res1464 = false;
      }
      if (post_cont_p2310 !== false) {
        var if_res1463 = function(pos2313, vals2314) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return M4.apply(post_cont_p2310, pos2313, vals2314);
        };
      } else {
        var if_res1463 = false;
      }
      return M4.values(function(pos2311) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.call_with_values(function() {
          if (arguments.length !== 0) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return pos__gt_val2304(pos2311);
        }, M4.list);
      }, pre_pos_next2305, pos_next2306, init2307, pos_cont_p2308, if_res1464, if_res1463);
    });
  };
  var in_values_times__sequence = function(g2315) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (sequence_p(g2315) !== false) {
      var if_res1465 = M4.rvoid();
    } else {
      var if_res1465 = M4.raise_argument_error($rjs_core.Symbol.make("in-values-sequence"), $rjs_core.UString.make("sequence?"), g2315);
    }
    if_res1465;
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var let_result1466 = make_sequence(false, g2315);
      var pos__gt_val2316 = let_result1466.getAt(0);
      var pre_pos_next2317 = let_result1466.getAt(1);
      var pos_next2318 = let_result1466.getAt(2);
      var init2319 = let_result1466.getAt(3);
      var pos_cont_p2320 = let_result1466.getAt(4);
      var pre_cont_p2321 = let_result1466.getAt(5);
      var post_cont_p2322 = let_result1466.getAt(6);
      if (pre_cont_p2321 !== false) {
        var if_res1470 = function(vals2326) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M4.list_p(vals2326) !== false) {
            var if_res1469 = M4.apply(pre_cont_p2321, vals2326);
          } else {
            var if_res1469 = pre_cont_p2321(vals2326);
          }
          return if_res1469;
        };
      } else {
        var if_res1470 = false;
      }
      if (post_cont_p2322 !== false) {
        var if_res1468 = function(pos2327, vals2328) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M4.list_p(vals2328) !== false) {
            var if_res1467 = M4.apply(post_cont_p2322, pos2327, vals2328);
          } else {
            var if_res1467 = post_cont_p2322(pos2327, vals2328);
          }
          return if_res1467;
        };
      } else {
        var if_res1468 = false;
      }
      return M4.values(function(pos2323) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        var cl1471 = function(v2324) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M4.list_p(v2324) !== false) {
            var if_res1475 = M4.list(v2324);
          } else {
            var if_res1475 = v2324;
          }
          return if_res1475;
        };
        var cl1472 = $rjs_core.attachProcedureArity(function() {
          for (var vs23251476 = [],
              $__1 = 0; $__1 < arguments.length; $__1++)
            vs23251476[$__1] = arguments[$__1];
          var vs2325 = $rjs_core.Pair.listFromArray(vs23251476);
          return vs2325;
        });
        return M4.call_with_values(function() {
          if (arguments.length !== 0) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return pos__gt_val2316(pos2323);
        }, $rjs_core.attachProcedureArity(function() {
          var fixed_lam1473 = {'1': cl1471}[arguments.length];
          if (fixed_lam1473 !== undefined) {
            return fixed_lam1473.apply(null, arguments);
          } else {
            if (true !== false) {
              var if_res1474 = cl1472.apply(null, arguments);
            } else {
              var if_res1474 = M4.error($rjs_core.UString.make("case-lambda: invalid case"));
            }
            return if_res1474;
          }
        }, [M4.make_arity_at_least(0)]));
      }, pre_pos_next2317, pos_next2318, init2319, pos_cont_p2320, if_res1470, if_res1468);
    });
  };
  var append_sequences = function(sequences2329, cyclic_p2330) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var seqs__gt_m_plus_g_plus_r2331 = function(seqs2332) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.pair_p(seqs2332) !== false) {
        var let_result1477 = sequence_generate(M4.car(seqs2332));
        var more_p2333 = let_result1477.getAt(0);
        var get2334 = let_result1477.getAt(1);
        var seqs2335 = M4.cdr(seqs2332);
        if (more_p2333() !== false) {
          var if_res1478 = M4.list_times_(more_p2333, get2334, seqs2335);
        } else {
          var if_res1478 = seqs__gt_m_plus_g_plus_r2331(seqs2335);
        }
        var if_res1480 = if_res1478;
      } else {
        if (cyclic_p2330 !== false) {
          var if_res1479 = seqs__gt_m_plus_g_plus_r2331(sequences2329);
        } else {
          var if_res1479 = false;
        }
        var if_res1480 = if_res1479;
      }
      return if_res1480;
    };
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.values(function(m_plus_g_plus_r2336) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.cadr(m_plus_g_plus_r2336)();
      }, function(m_plus_g_plus_r2337) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M4.pair_p(m_plus_g_plus_r2337) !== false) {
          var if_res1481 = M4.not(M4.car(m_plus_g_plus_r2337)());
        } else {
          var if_res1481 = false;
        }
        if (if_res1481 !== false) {
          var if_res1482 = seqs__gt_m_plus_g_plus_r2331(M4.cddr(m_plus_g_plus_r2337));
        } else {
          var if_res1482 = m_plus_g_plus_r2337;
        }
        return if_res1482;
      }, seqs__gt_m_plus_g_plus_r2331(sequences2329), M4.values, false, false);
    });
  };
  var check_sequences = function(who2338, sequences2339) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.for_each(function(g2340) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (sequence_p(g2340) !== false) {
        var if_res1483 = M4.rvoid();
      } else {
        var if_res1483 = M4.raise_argument_error(who2338, $rjs_core.UString.make("sequence?"), g2340);
      }
      return if_res1483;
    }, sequences2339);
  };
  var in_sequences = $rjs_core.attachProcedureArity(function() {
    for (var sequences23411484 = [],
        $__1 = 0; $__1 < arguments.length; $__1++)
      sequences23411484[$__1] = arguments[$__1];
    var sequences2341 = $rjs_core.Pair.listFromArray(sequences23411484);
    check_sequences($rjs_core.Symbol.make("in-sequences"), sequences2341);
    if (M4.pair_p(sequences2341) !== false) {
      var if_res1485 = M4.null_p(M4.cdr(sequences2341));
    } else {
      var if_res1485 = false;
    }
    if (if_res1485 !== false) {
      var if_res1486 = M4.car(sequences2341);
    } else {
      var if_res1486 = append_sequences(sequences2341, false);
    }
    return if_res1486;
  });
  var in_cycle = $rjs_core.attachProcedureArity(function() {
    for (var sequences23421487 = [],
        $__2 = 0; $__2 < arguments.length; $__2++)
      sequences23421487[$__2] = arguments[$__2];
    var sequences2342 = $rjs_core.Pair.listFromArray(sequences23421487);
    check_sequences($rjs_core.Symbol.make("in-cycle"), sequences2342);
    return append_sequences(sequences2342, true);
  });
  var in_parallel = $rjs_core.attachProcedureArity(function() {
    for (var sequences23431488 = [],
        $__3 = 0; $__3 < arguments.length; $__3++)
      sequences23431488[$__3] = arguments[$__3];
    var sequences2343 = $rjs_core.Pair.listFromArray(sequences23431488);
    check_sequences($rjs_core.Symbol.make("in-parallel"), sequences2343);
    if (M4.__eq_(1, M4.length(sequences2343)) !== false) {
      var if_res1515 = M4.car(sequences2343);
    } else {
      var if_res1515 = make_do_sequence(function() {
        if (arguments.length !== 0) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        var let_result1489 = make_sequence($rjs_core.Pair.makeList($rjs_core.Symbol.make("g")), sequences2343);
        var pos__gt_vals2358 = let_result1489.getAt(0);
        var pos_pre_inc2359 = let_result1489.getAt(1);
        var pos_next2360 = let_result1489.getAt(2);
        var init2361 = let_result1489.getAt(3);
        var pos_cont_p2362 = let_result1489.getAt(4);
        var val_cont_p2363 = let_result1489.getAt(5);
        var all_cont_p2364 = let_result1489.getAt(6);
        M4.rvoid();
        var for_loop2365 = function(p__gt_v2366, p_p_n2367, p_n2368, i2369, ps_p2370, pr_p2371, po_p2372, pos2373) {
          if (arguments.length !== 8) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (pos_cont_p2362 !== false) {
            var if_res1490 = pos_cont_p2362(pos2373);
          } else {
            var if_res1490 = true;
          }
          if (if_res1490 !== false) {
            var g2377 = pos__gt_vals2358(pos2373);
            if (all_cont_p2364 !== false) {
              var if_res1491 = function(pos2378) {
                if (arguments.length !== 1) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                return all_cont_p2364(pos2378, g2377);
              };
            } else {
              var if_res1491 = false;
            }
            var let_result1492 = M4.values(g2377, if_res1491);
            var g2374 = let_result1492.getAt(0);
            var all_cont_p_by_pos2375 = let_result1492.getAt(1);
            if (pos_pre_inc2359 !== false) {
              var if_res1493 = pos_pre_inc2359(pos2373);
            } else {
              var if_res1493 = pos2373;
            }
            var pos2376 = if_res1493;
            if (val_cont_p2363 !== false) {
              var if_res1494 = val_cont_p2363(g2374);
            } else {
              var if_res1494 = true;
            }
            if (if_res1494 !== false) {
              var p__gt_v2386 = p__gt_v2366;
              var p_p_n2387 = p_p_n2367;
              var p_n2388 = p_n2368;
              var i2389 = i2369;
              var ps_p2390 = ps_p2370;
              var pr_p2391 = pr_p2371;
              var po_p2392 = po_p2372;
              var let_result1495 = make_sequence(false, g2374);
              var p__gt_v12400 = let_result1495.getAt(0);
              var p_p_n22401 = let_result1495.getAt(1);
              var p_n32402 = let_result1495.getAt(2);
              var i42403 = let_result1495.getAt(3);
              var ps_p52404 = let_result1495.getAt(4);
              var pr_p62405 = let_result1495.getAt(5);
              var po_p72406 = let_result1495.getAt(6);
              var let_result1496 = M4.values(M4.cons(p__gt_v12400, p__gt_v2386), M4.cons(p_p_n22401, p_p_n2387), M4.cons(p_n32402, p_n2388), M4.cons(i42403, i2389), M4.cons(ps_p52404, ps_p2390), M4.cons(pr_p62405, pr_p2391), M4.cons(po_p72406, po_p2392));
              var p__gt_v2393 = let_result1496.getAt(0);
              var p_p_n2394 = let_result1496.getAt(1);
              var p_n2395 = let_result1496.getAt(2);
              var i2396 = let_result1496.getAt(3);
              var ps_p2397 = let_result1496.getAt(4);
              var pr_p2398 = let_result1496.getAt(5);
              var po_p2399 = let_result1496.getAt(6);
              var let_result1497 = M4.values(p__gt_v2393, p_p_n2394, p_n2395, i2396, ps_p2397, pr_p2398, po_p2399);
              var p__gt_v2379 = let_result1497.getAt(0);
              var p_p_n2380 = let_result1497.getAt(1);
              var p_n2381 = let_result1497.getAt(2);
              var i2382 = let_result1497.getAt(3);
              var ps_p2383 = let_result1497.getAt(4);
              var pr_p2384 = let_result1497.getAt(5);
              var po_p2385 = let_result1497.getAt(6);
              if (all_cont_p_by_pos2375 !== false) {
                var if_res1498 = all_cont_p_by_pos2375(pos2376);
              } else {
                var if_res1498 = true;
              }
              if (if_res1498 !== false) {
                var if_res1499 = M4.not(false);
              } else {
                var if_res1499 = false;
              }
              if (if_res1499 !== false) {
                var if_res1500 = for_loop2365(p__gt_v2379, p_p_n2380, p_n2381, i2382, ps_p2383, pr_p2384, po_p2385, pos_next2360(pos2376));
              } else {
                var if_res1500 = M4.values(p__gt_v2379, p_p_n2380, p_n2381, i2382, ps_p2383, pr_p2384, po_p2385);
              }
              var if_res1501 = if_res1500;
            } else {
              var if_res1501 = M4.values(p__gt_v2366, p_p_n2367, p_n2368, i2369, ps_p2370, pr_p2371, po_p2372);
            }
            var if_res1502 = if_res1501;
          } else {
            var if_res1502 = M4.values(p__gt_v2366, p_p_n2367, p_n2368, i2369, ps_p2370, pr_p2371, po_p2372);
          }
          return if_res1502;
        };
        var let_result1503 = for_loop2365(M4.rnull, M4.rnull, M4.rnull, M4.rnull, M4.rnull, M4.rnull, M4.rnull, init2361);
        var p__gt_v2351 = let_result1503.getAt(0);
        var p_p_n2352 = let_result1503.getAt(1);
        var p_n2353 = let_result1503.getAt(2);
        var i2354 = let_result1503.getAt(3);
        var ps_p2355 = let_result1503.getAt(4);
        var pr_p2356 = let_result1503.getAt(5);
        var po_p2357 = let_result1503.getAt(6);
        var let_result1504 = M4.values(M0.alt_reverse(p__gt_v2351), M0.alt_reverse(p_p_n2352), M0.alt_reverse(p_n2353), M0.alt_reverse(i2354), M0.alt_reverse(ps_p2355), M0.alt_reverse(pr_p2356), M0.alt_reverse(po_p2357));
        var pos__gt_vals2344 = let_result1504.getAt(0);
        var pre_pos_nexts2345 = let_result1504.getAt(1);
        var pos_nexts2346 = let_result1504.getAt(2);
        var inits2347 = let_result1504.getAt(3);
        var pos_cont_ps2348 = let_result1504.getAt(4);
        var pre_cont_ps2349 = let_result1504.getAt(5);
        var post_cont_ps2350 = let_result1504.getAt(6);
        if (M4.ormap(M4.values, pre_pos_nexts2345) !== false) {
          var if_res1514 = function(poses2410) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return M4.map(function(pre_pos_next2411, pos2412) {
              if (arguments.length !== 2) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              if (pre_pos_next2411 !== false) {
                var if_res1513 = pre_pos_next2411(pos2412);
              } else {
                var if_res1513 = pos2412;
              }
              return if_res1513;
            }, pre_pos_nexts2345, poses2410);
          };
        } else {
          var if_res1514 = false;
        }
        if (M4.ormap(M4.values, pos_cont_ps2348) !== false) {
          var if_res1512 = function(poses2416) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return M4.andmap(function(pos_cont_p2417, pos2418) {
              if (arguments.length !== 2) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              if (pos_cont_p2417 !== false) {
                var if_res1511 = pos_cont_p2417(pos2418);
              } else {
                var if_res1511 = true;
              }
              return if_res1511;
            }, pos_cont_ps2348, poses2416);
          };
        } else {
          var if_res1512 = false;
        }
        if (M4.ormap(M4.values, pre_cont_ps2349) !== false) {
          var if_res1510 = $rjs_core.attachProcedureArity(function() {
            for (var vals24191508 = [],
                $__4 = 0; $__4 < arguments.length; $__4++)
              vals24191508[$__4] = arguments[$__4];
            var vals2419 = $rjs_core.Pair.listFromArray(vals24191508);
            return M4.andmap(function(pre_cont_p2420, val2421) {
              if (arguments.length !== 2) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              if (pre_cont_p2420 !== false) {
                var if_res1509 = pre_cont_p2420(val2421);
              } else {
                var if_res1509 = true;
              }
              return if_res1509;
            }, pre_cont_ps2349, vals2419);
          });
        } else {
          var if_res1510 = false;
        }
        if (M4.ormap(M4.values, post_cont_ps2350) !== false) {
          var if_res1507 = $rjs_core.attachProcedureArity(function(poses2422) {
            for (var vals24231505 = [],
                $__5 = 1; $__5 < arguments.length; $__5++)
              vals24231505[$__5 - 1] = arguments[$__5];
            if (arguments.length < 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            var vals2423 = $rjs_core.Pair.listFromArray(vals24231505);
            return M4.andmap(function(post_cont_p2424, pos2425, val2426) {
              if (arguments.length !== 3) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              if (post_cont_p2424 !== false) {
                var if_res1506 = post_cont_p2424(pos2425, val2426);
              } else {
                var if_res1506 = true;
              }
              return if_res1506;
            }, post_cont_ps2350, poses2422, vals2423);
          });
        } else {
          var if_res1507 = false;
        }
        return M4.values(function(poses2407) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return M4.apply(M4.values, M4.map(function(pos__gt_val2408, pos2409) {
            if (arguments.length !== 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return pos__gt_val2408(pos2409);
          }, pos__gt_vals2344, poses2407));
        }, if_res1514, function(poses2413) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return M4.map(function(pos_next2414, pos2415) {
            if (arguments.length !== 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return pos_next2414(pos2415);
          }, pos_nexts2346, poses2413);
        }, inits2347, if_res1512, if_res1510, if_res1507);
      });
    }
    return if_res1515;
  });
  var cl1516 = function(producer2427) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.values($rjs_core.attachProcedureArity(function() {
        for (var _24281520 = [],
            $__4 = 0; $__4 < arguments.length; $__4++)
          _24281520[$__4] = arguments[$__4];
        var _2428 = $rjs_core.Pair.listFromArray(_24281520);
        return producer2427();
      }), M4.rvoid, M4.rvoid(), false, false, false);
    });
  };
  var cl1517 = $rjs_core.attachProcedureArity(function(producer2429, stop2430) {
    for (var more24311521 = [],
        $__4 = 2; $__4 < arguments.length; $__4++)
      more24311521[$__4 - 2] = arguments[$__4];
    if (arguments.length < 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var more2431 = $rjs_core.Pair.listFromArray(more24311521);
    if (M4.null_p(more2431) !== false) {
      var if_res1522 = function(_2433) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return producer2429();
      };
    } else {
      var if_res1522 = function(_2434) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.apply(producer2429, more2431);
      };
    }
    var produce_bang_2432 = if_res1522;
    if (M4.not(M4.procedure_p(stop2430)) !== false) {
      var if_res1525 = function(x2436) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.not(M4.eq_p(x2436, stop2430));
      };
    } else {
      if (M4.equal_p(1, M4.procedure_arity(stop2430)) !== false) {
        var if_res1524 = function(x2437) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return M4.not(stop2430(x2437));
        };
      } else {
        var if_res1524 = $rjs_core.attachProcedureArity(function() {
          for (var xs24381523 = [],
              $__5 = 0; $__5 < arguments.length; $__5++)
            xs24381523[$__5] = arguments[$__5];
          var xs2438 = $rjs_core.Pair.listFromArray(xs24381523);
          return M4.not(M4.apply(stop2430, xs2438));
        });
      }
      var if_res1525 = if_res1524;
    }
    var stop_p2435 = if_res1525;
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.values(produce_bang_2432, M4.rvoid, M4.rvoid(), false, stop_p2435, false);
    });
  });
  var in_producer = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1518 = {'1': cl1516}[arguments.length];
    if (fixed_lam1518 !== undefined) {
      return fixed_lam1518.apply(null, arguments);
    } else {
      if (M4.__gt__eq_(cl1517.length, 1) !== false) {
        var if_res1519 = cl1517.apply(null, arguments);
      } else {
        var if_res1519 = M4.error($rjs_core.UString.make("case-lambda: invalid case"));
      }
      return if_res1519;
    }
  }, [1, M4.make_arity_at_least(2)]);
  var let_result1526 = M4.make_struct_type($rjs_core.Symbol.make("stream"), false, 3, 0, false, M4.list(M4.cons(prop_stream, M4.vector(function(v2439) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return do_stream_ref(v2439, 0)();
  }, function(v2440) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return do_stream_ref(v2440, 1)();
  }, function(v2441) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return do_stream_ref(v2441, 2)();
  }))));
  var struct_do_stream = let_result1526.getAt(0);
  var make_do_stream = let_result1526.getAt(1);
  var do_stream_p = let_result1526.getAt(2);
  var do_stream_ref = let_result1526.getAt(3);
  var do_stream_set_bang_ = let_result1526.getAt(4);
  var empty_stream = make_do_stream(function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return true;
  }, M4.rvoid, M4.rvoid);
  var sequence__gt_stream = function(s2442) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (sequence_p(s2442) !== false) {
      var if_res1527 = M4.rvoid();
    } else {
      var if_res1527 = M4.raise_argument_error($rjs_core.Symbol.make("sequence-generate"), $rjs_core.UString.make("sequence?"), s2442);
    }
    if_res1527;
    if (stream_p(s2442) !== false) {
      var if_res1538 = s2442;
    } else {
      var let_result1528 = make_sequence(false, s2442);
      var pos__gt_val2443 = let_result1528.getAt(0);
      var pre_pos_next2444 = let_result1528.getAt(1);
      var pos_next2445 = let_result1528.getAt(2);
      var init2446 = let_result1528.getAt(3);
      var pos_cont_p2447 = let_result1528.getAt(4);
      var pre_cont_p2448 = let_result1528.getAt(5);
      var post_cont_p2449 = let_result1528.getAt(6);
      var gen_stream2450 = function(pos2451) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        var done_p2452 = false;
        var vals2453 = false;
        var empty_p2454 = false;
        var next2455 = false;
        var force_bang_2456 = function() {
          if (arguments.length !== 0) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (done_p2452 !== false) {
            var if_res1534 = M4.rvoid();
          } else {
            if (pos_cont_p2447 !== false) {
              var if_res1529 = pos_cont_p2447(pos2451);
            } else {
              var if_res1529 = true;
            }
            if (if_res1529 !== false) {
              vals2453 = M4.call_with_values(function() {
                if (arguments.length !== 0) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                return pos__gt_val2443(pos2451);
              }, M4.list);
              if (pre_pos_next2444 !== false) {
                pos2451 = pre_pos_next2444(pos2451);
                var if_res1530 = null;
              } else {
                var if_res1530 = M4.rvoid();
              }
              if_res1530;
              if (pre_cont_p2448 !== false) {
                var if_res1531 = M4.apply(pre_cont_p2448, vals2453);
              } else {
                var if_res1531 = true;
              }
              if (if_res1531 !== false) {
                var if_res1532 = M4.rvoid();
              } else {
                vals2453 = false;
                empty_p2454 = true;
                var if_res1532 = null;
              }
              var if_res1533 = if_res1532;
            } else {
              empty_p2454 = true;
              var if_res1533 = null;
            }
            if_res1533;
            done_p2452 = true;
            var if_res1534 = null;
          }
          return if_res1534;
        };
        return make_do_stream(function() {
          if (arguments.length !== 0) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          force_bang_2456();
          return empty_p2454;
        }, function() {
          if (arguments.length !== 0) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          force_bang_2456();
          return M4.apply(M4.values, vals2453);
        }, function() {
          if (arguments.length !== 0) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          force_bang_2456();
          if (next2455 !== false) {
            var if_res1537 = next2455;
          } else {
            if (post_cont_p2449 !== false) {
              var if_res1535 = M4.apply(post_cont_p2449, pos2451, vals2453);
            } else {
              var if_res1535 = true;
            }
            if (if_res1535 !== false) {
              next2455 = gen_stream2450(pos_next2445(pos2451));
              var if_res1536 = null;
            } else {
              next2455 = empty_stream;
              var if_res1536 = null;
            }
            if_res1536;
            var if_res1537 = next2455;
          }
          return if_res1537;
        });
      };
      var if_res1538 = gen_stream2450(init2446);
    }
    return if_res1538;
  };
  var no_more = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.raise(M4.__rjs_quoted__.exn_fail_contract($rjs_core.UString.make("sequence has no more values"), M4.current_continuation_marks()));
  };
  var sequence_generate = function(g2457) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (sequence_p(g2457) !== false) {
      var if_res1539 = M4.rvoid();
    } else {
      var if_res1539 = M4.raise_argument_error($rjs_core.Symbol.make("sequence-generate"), $rjs_core.UString.make("sequence?"), g2457);
    }
    if_res1539;
    var let_result1540 = make_sequence(false, g2457);
    var pos__gt_val2458 = let_result1540.getAt(0);
    var pre_pos_next2459 = let_result1540.getAt(1);
    var pos_next2460 = let_result1540.getAt(2);
    var init2461 = let_result1540.getAt(3);
    var pos_cont_p2462 = let_result1540.getAt(4);
    var pre_cont_p2463 = let_result1540.getAt(5);
    var post_cont_p2464 = let_result1540.getAt(6);
    var pos2465 = init2461;
    var more_p2466 = false;
    var prep_val_bang_2467 = false;
    var next2468 = false;
    var init_more_p2469 = function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      prep_val_bang_2467();
      return more_p2466();
    };
    var init_next2470 = function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      prep_val_bang_2467();
      return next2468();
    };
    var init_prep_val_bang_2471 = function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (pos_cont_p2462 !== false) {
        var if_res1541 = pos_cont_p2462(pos2465);
      } else {
        var if_res1541 = true;
      }
      if (if_res1541 !== false) {
        var if_res1549 = M4.call_with_values(function() {
          if (arguments.length !== 0) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          var begin_res1547 = pos__gt_val2458(pos2465);
          if (pre_pos_next2459 !== false) {
            pos2465 = pre_pos_next2459(pos2465);
            var if_res1548 = null;
          } else {
            var if_res1548 = M4.rvoid();
          }
          if_res1548;
          return begin_res1547;
        }, $rjs_core.attachProcedureArity(function() {
          for (var vals24721542 = [],
              $__5 = 0; $__5 < arguments.length; $__5++)
            vals24721542[$__5] = arguments[$__5];
          var vals2472 = $rjs_core.Pair.listFromArray(vals24721542);
          if (pre_cont_p2463 !== false) {
            var if_res1543 = M4.apply(pre_cont_p2463, vals2472);
          } else {
            var if_res1543 = true;
          }
          if (if_res1543 !== false) {
            more_p2466 = function() {
              if (arguments.length !== 0) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              return true;
            };
            next2468 = function() {
              if (arguments.length !== 0) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              var v2473 = vals2472;
              prep_val_bang_2467 = function() {
                if (arguments.length !== 0) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                if (post_cont_p2464 !== false) {
                  var if_res1544 = M4.apply(post_cont_p2464, pos2465, vals2472);
                } else {
                  var if_res1544 = true;
                }
                if (if_res1544 !== false) {
                  pos2465 = pos_next2460(pos2465);
                  prep_val_bang_2467 = init_prep_val_bang_2471;
                  var if_res1545 = prep_val_bang_2467();
                } else {
                  more_p2466 = function() {
                    if (arguments.length !== 0) {
                      throw $rjs_core.racketContractError("arity mismatch");
                    } else {}
                    return false;
                  };
                  next2468 = no_more;
                  var if_res1545 = null;
                }
                return if_res1545;
              };
              more_p2466 = init_more_p2469;
              next2468 = init_next2470;
              return M4.apply(M4.values, v2473);
            };
            prep_val_bang_2467 = M4.rvoid;
            var if_res1546 = M4.apply(M4.values, vals2472);
          } else {
            more_p2466 = function() {
              if (arguments.length !== 0) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              return false;
            };
            next2468 = no_more;
            var if_res1546 = null;
          }
          return if_res1546;
        }));
      } else {
        more_p2466 = function() {
          if (arguments.length !== 0) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return false;
        };
        next2468 = no_more;
        var if_res1549 = null;
      }
      return if_res1549;
    };
    more_p2466 = init_more_p2469;
    prep_val_bang_2467 = init_prep_val_bang_2471;
    next2468 = init_next2470;
    var sequence_more_p2474 = function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return more_p2466();
    };
    var sequence_next2475 = function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return next2468();
    };
    return M4.values(sequence_more_p2474, sequence_next2475);
  };
  var sequence_generate_times_ = function(g2476) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (sequence_p(g2476) !== false) {
      var if_res1550 = M4.rvoid();
    } else {
      var if_res1550 = M4.raise_argument_error($rjs_core.Symbol.make("sequence-generate*"), $rjs_core.UString.make("sequence?"), g2476);
    }
    if_res1550;
    var let_result1551 = make_sequence(false, g2476);
    var pos__gt_val2477 = let_result1551.getAt(0);
    var pre_pos_next2478 = let_result1551.getAt(1);
    var pos_next2479 = let_result1551.getAt(2);
    var init2480 = let_result1551.getAt(3);
    var pos_cont_p2481 = let_result1551.getAt(4);
    var pre_cont_p2482 = let_result1551.getAt(5);
    var post_cont_p2483 = let_result1551.getAt(6);
    var next_bang_2484 = function(pos2485) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (pos_cont_p2481 !== false) {
        var if_res1552 = pos_cont_p2481(pos2485);
      } else {
        var if_res1552 = true;
      }
      if (if_res1552 !== false) {
        var if_res1560 = M4.call_with_values(function() {
          if (arguments.length !== 0) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          var begin_res1558 = pos__gt_val2477(pos2485);
          if (pre_pos_next2478 !== false) {
            pos2485 = pre_pos_next2478(pos2485);
            var if_res1559 = null;
          } else {
            var if_res1559 = M4.rvoid();
          }
          if_res1559;
          return begin_res1558;
        }, $rjs_core.attachProcedureArity(function() {
          for (var vals24861553 = [],
              $__5 = 0; $__5 < arguments.length; $__5++)
            vals24861553[$__5] = arguments[$__5];
          var vals2486 = $rjs_core.Pair.listFromArray(vals24861553);
          if (pre_cont_p2482 !== false) {
            var if_res1554 = M4.apply(pre_cont_p2482, vals2486);
          } else {
            var if_res1554 = true;
          }
          if (if_res1554 !== false) {
            var if_res1557 = M4.values(vals2486, function() {
              if (arguments.length !== 0) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              if (post_cont_p2483 !== false) {
                var if_res1555 = M4.apply(post_cont_p2483, pos2485, vals2486);
              } else {
                var if_res1555 = true;
              }
              if (if_res1555 !== false) {
                var if_res1556 = next_bang_2484(pos_next2479(pos2485));
              } else {
                var if_res1556 = M4.values(false, no_more);
              }
              return if_res1556;
            });
          } else {
            var if_res1557 = M4.values(false, no_more);
          }
          return if_res1557;
        }));
      } else {
        var if_res1560 = M4.values(false, no_more);
      }
      return if_res1560;
    };
    return next_bang_2484(init2480);
  };
  var grow_vector = function(vec2487) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var n2488 = M4.vector_length(vec2487);
    var new_vec2489 = M4.make_vector(2 * n2488);
    M4.__rjs_quoted__.vector_copy_bang_(new_vec2489, 0, vec2487, 0, n2488);
    return new_vec2489;
  };
  var shrink_vector = function(vec2490, i2491) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var new_vec2492 = M4.make_vector(i2491);
    M4.__rjs_quoted__.vector_copy_bang_(new_vec2492, 0, vec2490, 0, i2491);
    return new_vec2492;
  };
  var dir_list = function(full_d2493, d2494, acc2495) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var let_result1561 = make_sequence($rjs_core.Pair.makeList($rjs_core.Symbol.make("f")), in_list(M4.reverse(M2.sort(M4.__rjs_quoted__.directory_list(full_d2493), M4.__rjs_quoted__.path_lt__p))));
    var pos__gt_vals2496 = let_result1561.getAt(0);
    var pos_pre_inc2497 = let_result1561.getAt(1);
    var pos_next2498 = let_result1561.getAt(2);
    var init2499 = let_result1561.getAt(3);
    var pos_cont_p2500 = let_result1561.getAt(4);
    var val_cont_p2501 = let_result1561.getAt(5);
    var all_cont_p2502 = let_result1561.getAt(6);
    M4.rvoid();
    var for_loop2503 = function(acc2504, pos2505) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (pos_cont_p2500 !== false) {
        var if_res1562 = pos_cont_p2500(pos2505);
      } else {
        var if_res1562 = true;
      }
      if (if_res1562 !== false) {
        var f2509 = pos__gt_vals2496(pos2505);
        if (all_cont_p2502 !== false) {
          var if_res1563 = function(pos2510) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return all_cont_p2502(pos2510, f2509);
          };
        } else {
          var if_res1563 = false;
        }
        var let_result1564 = M4.values(f2509, if_res1563);
        var f2506 = let_result1564.getAt(0);
        var all_cont_p_by_pos2507 = let_result1564.getAt(1);
        if (pos_pre_inc2497 !== false) {
          var if_res1565 = pos_pre_inc2497(pos2505);
        } else {
          var if_res1565 = pos2505;
        }
        var pos2508 = if_res1565;
        if (val_cont_p2501 !== false) {
          var if_res1566 = val_cont_p2501(f2506);
        } else {
          var if_res1566 = true;
        }
        if (if_res1566 !== false) {
          var acc2512 = acc2504;
          var acc2513 = M4.cons(M4.__rjs_quoted__.build_path(d2494, f2506), acc2512);
          var acc2511 = M4.values(acc2513);
          if (all_cont_p_by_pos2507 !== false) {
            var if_res1567 = all_cont_p_by_pos2507(pos2508);
          } else {
            var if_res1567 = true;
          }
          if (if_res1567 !== false) {
            var if_res1568 = M4.not(false);
          } else {
            var if_res1568 = false;
          }
          if (if_res1568 !== false) {
            var if_res1569 = for_loop2503(acc2511, pos_next2498(pos2508));
          } else {
            var if_res1569 = acc2511;
          }
          var if_res1570 = if_res1569;
        } else {
          var if_res1570 = acc2504;
        }
        var if_res1571 = if_res1570;
      } else {
        var if_res1571 = acc2504;
      }
      return if_res1571;
    };
    return for_loop2503(acc2495, init2499);
  };
  var next_body = function(l2514, d2515, init_dir2516, use_dir_p2517) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var full_d2518 = M4.__rjs_quoted__.path__gt_complete_path(d2515, init_dir2516);
    if (M4.__rjs_quoted__.directory_exists_p(full_d2518) !== false) {
      var if_res1572 = use_dir_p2517(full_d2518);
    } else {
      var if_res1572 = false;
    }
    if (if_res1572 !== false) {
      var if_res1573 = dir_list(full_d2518, d2515, M4.cdr(l2514));
    } else {
      var if_res1573 = M4.cdr(l2514);
    }
    return if_res1573;
  };
  var initial_state = function(orig_dir2519, init_dir2520) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (orig_dir2519 !== false) {
      var if_res1574 = dir_list(M4.__rjs_quoted__.path__gt_complete_path(orig_dir2519, init_dir2520), orig_dir2519, M4.rnull);
    } else {
      var if_res1574 = M4.__rjs_quoted__.directory_list(init_dir2520);
    }
    return if_res1574;
  };
  var cl1575 = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_directory(false, function(d2521) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return true;
    });
  };
  var cl1576 = function(orig_dir2522) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_directory(orig_dir2522, function(d2523) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return true;
    });
  };
  var cl1577 = function(orig_dir2524, use_dir_p2525) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var init_dir2526 = M4.__rjs_quoted__.current_directory();
    var next2527 = function(l2528) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var d2529 = M4.car(l2528);
      return next_body(l2528, d2529, init_dir2526, use_dir_p2525);
    };
    return make_do_sequence(function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.values(M4.car, next2527, initial_state(orig_dir2524, init_dir2526), M4.pair_p, false, false);
    });
  };
  var in_directory = $rjs_core.attachProcedureArity(function() {
    var fixed_lam1578 = {
      '0': cl1575,
      '1': cl1576,
      '2': cl1577
    }[arguments.length];
    if (fixed_lam1578 !== undefined) {
      return fixed_lam1578.apply(null, arguments);
    } else {
      return M4.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [0, 1, 2]);
  var __rjs_quoted__ = {};
  __rjs_quoted__.default_in_hash_pairs = default_in_hash_pairs;
  __rjs_quoted__.in_parallel = in_parallel;
  __rjs_quoted__.in_naturals = in_naturals;
  __rjs_quoted__.check_in_immutable_hash_values = check_in_immutable_hash_values;
  __rjs_quoted__.check_in_immutable_hash_keys = check_in_immutable_hash_keys;
  __rjs_quoted__.in_vector = in_vector;
  __rjs_quoted__.default_in_hash_values = default_in_hash_values;
  __rjs_quoted__.check_in_mutable_hash = check_in_mutable_hash;
  __rjs_quoted__.check_in_bytes_lines = check_in_bytes_lines;
  __rjs_quoted__.check_in_mutable_hash_pairs = check_in_mutable_hash_pairs;
  __rjs_quoted__.default_in_weak_hash_pairs = default_in_weak_hash_pairs;
  __rjs_quoted__.check_in_mutable_hash_values = check_in_mutable_hash_values;
  __rjs_quoted__.check_bytes = check_bytes;
  __rjs_quoted__.in_input_port_chars = in_input_port_chars;
  __rjs_quoted__.default_in_mutable_hash_values = default_in_mutable_hash_values;
  __rjs_quoted__.next_body = next_body;
  __rjs_quoted__.check_in_port = check_in_port;
  __rjs_quoted__.grow_vector = grow_vector;
  __rjs_quoted__.check_list = check_list;
  __rjs_quoted__.check_in_immutable_hash_pairs = check_in_immutable_hash_pairs;
  __rjs_quoted__.check_naturals = check_naturals;
  __rjs_quoted__.in_indexed = in_indexed;
  __rjs_quoted__.in_string = in_string;
  __rjs_quoted__.default_in_immutable_hash_keys = default_in_immutable_hash_keys;
  __rjs_quoted__.in_port = in_port;
  __rjs_quoted__.check_in_weak_hash_pairs = check_in_weak_hash_pairs;
  __rjs_quoted__.in_producer = in_producer;
  __rjs_quoted__.default_in_hash_keys = default_in_hash_keys;
  __rjs_quoted__.check_in_immutable_hash = check_in_immutable_hash;
  __rjs_quoted__.check_in_hash_pairs = check_in_hash_pairs;
  __rjs_quoted__.default_in_mutable_hash_pairs = default_in_mutable_hash_pairs;
  __rjs_quoted__.check_in_hash_keys = check_in_hash_keys;
  __rjs_quoted__.default_in_immutable_hash = default_in_immutable_hash;
  __rjs_quoted__.default_in_mutable_hash = default_in_mutable_hash;
  __rjs_quoted__.default_in_mutable_hash_keys = default_in_mutable_hash_keys;
  __rjs_quoted__.check_in_weak_hash = check_in_weak_hash;
  __rjs_quoted__.not_weak_p = not_weak_p;
  __rjs_quoted__.default_in_weak_hash = default_in_weak_hash;
  __rjs_quoted__.initial_state = initial_state;
  __rjs_quoted__.in_lines = in_lines;
  __rjs_quoted__.default_in_immutable_hash_pairs = default_in_immutable_hash_pairs;
  __rjs_quoted__.default_in_weak_hash_keys = default_in_weak_hash_keys;
  __rjs_quoted__.in_range = in_range;
  __rjs_quoted__.in_value = in_value;
  __rjs_quoted__.check_in_mutable_hash_keys = check_in_mutable_hash_keys;
  __rjs_quoted__.check_vector = check_vector;
  __rjs_quoted__.check_in_weak_hash_values = check_in_weak_hash_values;
  __rjs_quoted__.in_directory = in_directory;
  __rjs_quoted__.default_in_immutable_hash_values = default_in_immutable_hash_values;
  __rjs_quoted__.check_range = check_range;
  __rjs_quoted__.unsafe_stream_rest = unsafe_stream_rest;
  __rjs_quoted__.check_in_lines = check_in_lines;
  __rjs_quoted__.normalise_inputs = normalise_inputs;
  __rjs_quoted__.__hash_gen = __hash_gen;
  __rjs_quoted__.check_string = check_string;
  __rjs_quoted__.make_sequence = make_sequence;
  __rjs_quoted__.unsafe_stream_first = unsafe_stream_first;
  __rjs_quoted__.unsafe_stream_not_empty_p = unsafe_stream_not_empty_p;
  __rjs_quoted__.in_input_port_bytes = in_input_port_bytes;
  __rjs_quoted__.mutable_p = mutable_p;
  __rjs_quoted__.default_in_weak_hash_values = default_in_weak_hash_values;
  __rjs_quoted__.stream_p = stream_p;
  __rjs_quoted__.in_bytes = in_bytes;
  __rjs_quoted__.stop_after = stop_after;
  __rjs_quoted__.check_in_hash = check_in_hash;
  __rjs_quoted__.check_in_weak_hash_keys = check_in_weak_hash_keys;
  __rjs_quoted__.default_in_hash = default_in_hash;
  __rjs_quoted__.in_stream = in_stream;
  __rjs_quoted__.check_in_hash_values = check_in_hash_values;
  __rjs_quoted__.make_do_sequence = make_do_sequence;
  __rjs_quoted__.in_mlist = in_mlist;
  __rjs_quoted__.shrink_vector = shrink_vector;
  __rjs_quoted__.in_bytes_lines = in_bytes_lines;
  __rjs_quoted__.in_list = in_list;
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get make_do_sequence() {
      return make_do_sequence;
    },
    get prop_sequence() {
      return prop_sequence;
    },
    get sequence_generate_times_() {
      return sequence_generate_times_;
    },
    get sequence_generate() {
      return sequence_generate;
    },
    get sequence_p() {
      return sequence_p;
    },
    get make_do_stream() {
      return make_do_stream;
    },
    get empty_stream() {
      return empty_stream;
    },
    get sequence__gt_stream() {
      return sequence__gt_stream;
    },
    get stream_via_prop_p() {
      return stream_via_prop_p;
    },
    get stream_ref() {
      return stream_ref;
    },
    get prop_stream() {
      return prop_stream;
    },
    get stream_rest() {
      return stream_rest;
    },
    get stream_first() {
      return stream_first;
    },
    get stream_empty_p() {
      return stream_empty_p;
    },
    get stream_p() {
      return stream_p;
    },
    get stop_after() {
      return stop_after;
    },
    get stop_before() {
      return stop_before;
    },
    get in_values_times__sequence() {
      return in_values_times__sequence;
    },
    get in_values_sequence() {
      return in_values_sequence;
    },
    get in_parallel() {
      return in_parallel;
    },
    get in_cycle() {
      return in_cycle;
    },
    get in_sequences() {
      return in_sequences;
    }
  };
})();
var $__collects_47_racket_47_list_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/racket/list.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__collects_47_racket_47_private_47_reverse_46_rkt_46_js__;
  var M1 = $__collects_47_racket_47_private_47_list_46_rkt_46_js__;
  var M2 = $__collects_47_racket_47_private_47_more_45_scheme_46_rkt_46_js__;
  var M3 = $__collects_47_racket_47_private_47_kw_46_rkt_46_js__;
  var M4 = $__collects_47_racket_47_private_47_map_46_rkt_46_js__;
  var M5 = $__collects_47_racket_47_private_47_qq_45_and_45_or_46_rkt_46_js__;
  var M6 = $__collects_47_racket_47_private_47_member_46_rkt_46_js__;
  var M7 = $__runtime_47_kernel_46_rkt_46_js__;
  var M8 = $__runtime_47_core_46_rkt_46_js__;
  var M9 = $__collects_47_racket_47_private_47_for_46_rkt_46_js__;
  var M10 = $__collects_47_racket_47_private_47_pre_45_base_46_rkt_46_js__;
  var M11 = $__runtime_47_unsafe_46_rkt_46_js__;
  var first = function(x784) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.pair_p(x784) !== false) {
      var if_res415 = M7.list_p(x784);
    } else {
      var if_res415 = false;
    }
    if (if_res415 !== false) {
      var if_res416 = M7.car(x784);
    } else {
      var if_res416 = M7.raise_argument_error($rjs_core.Symbol.make("first"), $rjs_core.UString.make("(and/c list? (not/c empty?))"), x784);
    }
    return if_res416;
  };
  var second = function(l0785) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(l0785) !== false) {
      var loop786 = function(l787, pos788) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.pair_p(l787) !== false) {
          if (M7.eq_p(pos788, 1) !== false) {
            var if_res417 = M7.car(l787);
          } else {
            var if_res417 = loop786(M7.cdr(l787), M7.sub1(pos788));
          }
          var if_res418 = if_res417;
        } else {
          var if_res418 = M7.raise_arguments_error($rjs_core.Symbol.make("second"), $rjs_core.UString.make("list contains too few elements"), $rjs_core.UString.make("list"), l0785);
        }
        return if_res418;
      };
      var if_res419 = loop786(l0785, 2);
    } else {
      var if_res419 = M7.raise_argument_error($rjs_core.Symbol.make("second"), $rjs_core.UString.make("list?"), l0785);
    }
    return if_res419;
  };
  var third = function(l0789) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(l0789) !== false) {
      var loop790 = function(l791, pos792) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.pair_p(l791) !== false) {
          if (M7.eq_p(pos792, 1) !== false) {
            var if_res420 = M7.car(l791);
          } else {
            var if_res420 = loop790(M7.cdr(l791), M7.sub1(pos792));
          }
          var if_res421 = if_res420;
        } else {
          var if_res421 = M7.raise_arguments_error($rjs_core.Symbol.make("third"), $rjs_core.UString.make("list contains too few elements"), $rjs_core.UString.make("list"), l0789);
        }
        return if_res421;
      };
      var if_res422 = loop790(l0789, 3);
    } else {
      var if_res422 = M7.raise_argument_error($rjs_core.Symbol.make("third"), $rjs_core.UString.make("list?"), l0789);
    }
    return if_res422;
  };
  var fourth = function(l0793) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(l0793) !== false) {
      var loop794 = function(l795, pos796) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.pair_p(l795) !== false) {
          if (M7.eq_p(pos796, 1) !== false) {
            var if_res423 = M7.car(l795);
          } else {
            var if_res423 = loop794(M7.cdr(l795), M7.sub1(pos796));
          }
          var if_res424 = if_res423;
        } else {
          var if_res424 = M7.raise_arguments_error($rjs_core.Symbol.make("fourth"), $rjs_core.UString.make("list contains too few elements"), $rjs_core.UString.make("list"), l0793);
        }
        return if_res424;
      };
      var if_res425 = loop794(l0793, 4);
    } else {
      var if_res425 = M7.raise_argument_error($rjs_core.Symbol.make("fourth"), $rjs_core.UString.make("list?"), l0793);
    }
    return if_res425;
  };
  var fifth = function(l0797) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(l0797) !== false) {
      var loop798 = function(l799, pos800) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.pair_p(l799) !== false) {
          if (M7.eq_p(pos800, 1) !== false) {
            var if_res426 = M7.car(l799);
          } else {
            var if_res426 = loop798(M7.cdr(l799), M7.sub1(pos800));
          }
          var if_res427 = if_res426;
        } else {
          var if_res427 = M7.raise_arguments_error($rjs_core.Symbol.make("fifth"), $rjs_core.UString.make("list contains too few elements"), $rjs_core.UString.make("list"), l0797);
        }
        return if_res427;
      };
      var if_res428 = loop798(l0797, 5);
    } else {
      var if_res428 = M7.raise_argument_error($rjs_core.Symbol.make("fifth"), $rjs_core.UString.make("list?"), l0797);
    }
    return if_res428;
  };
  var sixth = function(l0801) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(l0801) !== false) {
      var loop802 = function(l803, pos804) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.pair_p(l803) !== false) {
          if (M7.eq_p(pos804, 1) !== false) {
            var if_res429 = M7.car(l803);
          } else {
            var if_res429 = loop802(M7.cdr(l803), M7.sub1(pos804));
          }
          var if_res430 = if_res429;
        } else {
          var if_res430 = M7.raise_arguments_error($rjs_core.Symbol.make("sixth"), $rjs_core.UString.make("list contains too few elements"), $rjs_core.UString.make("list"), l0801);
        }
        return if_res430;
      };
      var if_res431 = loop802(l0801, 6);
    } else {
      var if_res431 = M7.raise_argument_error($rjs_core.Symbol.make("sixth"), $rjs_core.UString.make("list?"), l0801);
    }
    return if_res431;
  };
  var seventh = function(l0805) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(l0805) !== false) {
      var loop806 = function(l807, pos808) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.pair_p(l807) !== false) {
          if (M7.eq_p(pos808, 1) !== false) {
            var if_res432 = M7.car(l807);
          } else {
            var if_res432 = loop806(M7.cdr(l807), M7.sub1(pos808));
          }
          var if_res433 = if_res432;
        } else {
          var if_res433 = M7.raise_arguments_error($rjs_core.Symbol.make("seventh"), $rjs_core.UString.make("list contains too few elements"), $rjs_core.UString.make("list"), l0805);
        }
        return if_res433;
      };
      var if_res434 = loop806(l0805, 7);
    } else {
      var if_res434 = M7.raise_argument_error($rjs_core.Symbol.make("seventh"), $rjs_core.UString.make("list?"), l0805);
    }
    return if_res434;
  };
  var eighth = function(l0809) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(l0809) !== false) {
      var loop810 = function(l811, pos812) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.pair_p(l811) !== false) {
          if (M7.eq_p(pos812, 1) !== false) {
            var if_res435 = M7.car(l811);
          } else {
            var if_res435 = loop810(M7.cdr(l811), M7.sub1(pos812));
          }
          var if_res436 = if_res435;
        } else {
          var if_res436 = M7.raise_arguments_error($rjs_core.Symbol.make("eighth"), $rjs_core.UString.make("list contains too few elements"), $rjs_core.UString.make("list"), l0809);
        }
        return if_res436;
      };
      var if_res437 = loop810(l0809, 8);
    } else {
      var if_res437 = M7.raise_argument_error($rjs_core.Symbol.make("eighth"), $rjs_core.UString.make("list?"), l0809);
    }
    return if_res437;
  };
  var ninth = function(l0813) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(l0813) !== false) {
      var loop814 = function(l815, pos816) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.pair_p(l815) !== false) {
          if (M7.eq_p(pos816, 1) !== false) {
            var if_res438 = M7.car(l815);
          } else {
            var if_res438 = loop814(M7.cdr(l815), M7.sub1(pos816));
          }
          var if_res439 = if_res438;
        } else {
          var if_res439 = M7.raise_arguments_error($rjs_core.Symbol.make("ninth"), $rjs_core.UString.make("list contains too few elements"), $rjs_core.UString.make("list"), l0813);
        }
        return if_res439;
      };
      var if_res440 = loop814(l0813, 9);
    } else {
      var if_res440 = M7.raise_argument_error($rjs_core.Symbol.make("ninth"), $rjs_core.UString.make("list?"), l0813);
    }
    return if_res440;
  };
  var tenth = function(l0817) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(l0817) !== false) {
      var loop818 = function(l819, pos820) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.pair_p(l819) !== false) {
          if (M7.eq_p(pos820, 1) !== false) {
            var if_res441 = M7.car(l819);
          } else {
            var if_res441 = loop818(M7.cdr(l819), M7.sub1(pos820));
          }
          var if_res442 = if_res441;
        } else {
          var if_res442 = M7.raise_arguments_error($rjs_core.Symbol.make("tenth"), $rjs_core.UString.make("list contains too few elements"), $rjs_core.UString.make("list"), l0817);
        }
        return if_res442;
      };
      var if_res443 = loop818(l0817, 10);
    } else {
      var if_res443 = M7.raise_argument_error($rjs_core.Symbol.make("tenth"), $rjs_core.UString.make("list?"), l0817);
    }
    return if_res443;
  };
  var last_pair = function(l821) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.pair_p(l821) !== false) {
      var loop822 = function(l823, x824) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.pair_p(x824) !== false) {
          var if_res444 = loop822(x824, M7.cdr(x824));
        } else {
          var if_res444 = l823;
        }
        return if_res444;
      };
      var if_res445 = loop822(l821, M7.cdr(l821));
    } else {
      var if_res445 = M7.raise_argument_error($rjs_core.Symbol.make("last-pair"), $rjs_core.UString.make("pair?"), l821);
    }
    return if_res445;
  };
  var last = function(l825) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.pair_p(l825) !== false) {
      var if_res446 = M7.list_p(l825);
    } else {
      var if_res446 = false;
    }
    if (if_res446 !== false) {
      var loop826 = function(l827, x828) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.pair_p(x828) !== false) {
          var if_res447 = loop826(x828, M7.cdr(x828));
        } else {
          var if_res447 = M7.car(l827);
        }
        return if_res447;
      };
      var if_res448 = loop826(l825, M7.cdr(l825));
    } else {
      var if_res448 = M7.raise_argument_error($rjs_core.Symbol.make("last"), $rjs_core.UString.make("(and/c list? (not/c empty?))"), l825);
    }
    return if_res448;
  };
  var rest = function(l829) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.pair_p(l829) !== false) {
      var if_res449 = M7.list_p(l829);
    } else {
      var if_res449 = false;
    }
    if (if_res449 !== false) {
      var if_res450 = M7.cdr(l829);
    } else {
      var if_res450 = M7.raise_argument_error($rjs_core.Symbol.make("rest"), $rjs_core.UString.make("(and/c list? (not/c empty?))"), l829);
    }
    return if_res450;
  };
  var empty = $rjs_core.Pair.makeList();
  var make_list = function(n830, x831) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.exact_nonnegative_integer_p(n830) !== false) {
      var if_res451 = M7.rvoid();
    } else {
      var if_res451 = M7.raise_argument_error($rjs_core.Symbol.make("make-list"), $rjs_core.UString.make("exact-nonnegative-integer?"), 0, n830, x831);
    }
    if_res451;
    var loop832 = function(n833, r834) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.zero_p(n833) !== false) {
        var if_res452 = r834;
      } else {
        var if_res452 = loop832(M7.sub1(n833), M7.cons(x831, r834));
      }
      return if_res452;
    };
    return loop832(n830, $rjs_core.Pair.makeList());
  };
  var list_update = function(l835, i836, f837) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(l835) !== false) {
      var if_res453 = M7.rvoid();
    } else {
      var if_res453 = M7.raise_argument_error($rjs_core.Symbol.make("list-update"), $rjs_core.UString.make("list?"), 0, l835, i836, f837);
    }
    if_res453;
    if (M7.exact_nonnegative_integer_p(i836) !== false) {
      var if_res454 = M7.rvoid();
    } else {
      var if_res454 = M7.raise_argument_error($rjs_core.Symbol.make("list-update"), $rjs_core.UString.make("exact-nonnegative-integer?"), 1, l835, i836, f837);
    }
    if_res454;
    if (M7.procedure_p(f837) !== false) {
      var if_res455 = M7.procedure_arity_includes_p(f837, 1);
    } else {
      var if_res455 = false;
    }
    if (if_res455 !== false) {
      var if_res456 = M7.rvoid();
    } else {
      var if_res456 = M7.raise_argument_error($rjs_core.Symbol.make("list-update"), $rjs_core.UString.make("(-> any/c any/c)"), 2, l835, i836, f837);
    }
    if_res456;
    if (M7.zero_p(i836) !== false) {
      var if_res457 = M7.cons(f837(M7.car(l835)), M7.cdr(l835));
    } else {
      var if_res457 = M7.cons(M7.car(l835), list_update(M7.cdr(l835), M7.sub1(i836), f837));
    }
    return if_res457;
  };
  var list_set = function(l838, k839, v840) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(l838) !== false) {
      var if_res458 = M7.rvoid();
    } else {
      var if_res458 = M7.raise_argument_error($rjs_core.Symbol.make("list-set"), $rjs_core.UString.make("list?"), 0, l838, k839, v840);
    }
    if_res458;
    if (M7.exact_nonnegative_integer_p(k839) !== false) {
      var if_res459 = M7.rvoid();
    } else {
      var if_res459 = M7.raise_argument_error($rjs_core.Symbol.make("list-set"), $rjs_core.UString.make("exact-nonnegative-integer?"), 1, l838, k839, v840);
    }
    if_res459;
    return list_update(l838, k839, function(_841) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return v840;
    });
  };
  var drop_times_ = function(list842, n843) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.zero_p(n843) !== false) {
      var if_res461 = list842;
    } else {
      if (M7.pair_p(list842) !== false) {
        var if_res460 = drop_times_(M7.cdr(list842), M7.sub1(n843));
      } else {
        var if_res460 = false;
      }
      var if_res461 = if_res460;
    }
    return if_res461;
  };
  var too_large = function(who844, list845, n846) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var proper_p847 = M7.list_p(list845);
    var temp464 = $rjs_core.UString.make("a ~alist with at least ~a ~a");
    if (proper_p847 !== false) {
      var if_res463 = $rjs_core.UString.make("");
    } else {
      var if_res463 = $rjs_core.UString.make("(possibly improper) ");
    }
    if (proper_p847 !== false) {
      var if_res462 = $rjs_core.UString.make("elements");
    } else {
      var if_res462 = $rjs_core.UString.make("pairs");
    }
    return M7.raise_argument_error(who844, M7.format(temp464, if_res463, n846, if_res462), list845);
  };
  var take = function(list0848, n0849) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.exact_nonnegative_integer_p(n0849) !== false) {
      var if_res465 = M7.rvoid();
    } else {
      var if_res465 = M7.raise_argument_error($rjs_core.Symbol.make("take"), $rjs_core.UString.make("exact-nonnegative-integer?"), 1, list0848, n0849);
    }
    if_res465;
    var loop850 = function(list851, n852) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.zero_p(n852) !== false) {
        var if_res467 = $rjs_core.Pair.makeList();
      } else {
        if (M7.pair_p(list851) !== false) {
          var if_res466 = M7.cons(M7.car(list851), loop850(M7.cdr(list851), M7.sub1(n852)));
        } else {
          var if_res466 = too_large($rjs_core.Symbol.make("take"), list0848, n0849);
        }
        var if_res467 = if_res466;
      }
      return if_res467;
    };
    return loop850(list0848, n0849);
  };
  var drop = function(list853, n854) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.exact_nonnegative_integer_p(n854) !== false) {
      var if_res468 = M7.rvoid();
    } else {
      var if_res468 = M7.raise_argument_error($rjs_core.Symbol.make("drop"), $rjs_core.UString.make("exact-nonnegative-integer?"), 1, list853, n854);
    }
    if_res468;
    var or_part855 = drop_times_(list853, n854);
    if (or_part855 !== false) {
      var if_res469 = or_part855;
    } else {
      var if_res469 = too_large($rjs_core.Symbol.make("drop"), list853, n854);
    }
    return if_res469;
  };
  var split_at = function(list0856, n0857) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.exact_nonnegative_integer_p(n0857) !== false) {
      var if_res470 = M7.rvoid();
    } else {
      var if_res470 = M7.raise_argument_error($rjs_core.Symbol.make("split-at"), $rjs_core.UString.make("exact-nonnegative-integer?"), 1, list0856, n0857);
    }
    if_res470;
    var loop858 = function(list859, n860, pfx861) {
      if (arguments.length !== 3) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.zero_p(n860) !== false) {
        var if_res472 = M7.values(M0.alt_reverse(pfx861), list859);
      } else {
        if (M7.pair_p(list859) !== false) {
          var if_res471 = loop858(M7.cdr(list859), M7.sub1(n860), M7.cons(M7.car(list859), pfx861));
        } else {
          var if_res471 = too_large($rjs_core.Symbol.make("split-at"), list0856, n0857);
        }
        var if_res472 = if_res471;
      }
      return if_res472;
    };
    return loop858(list0856, n0857, $rjs_core.Pair.makeList());
  };
  var takef = function(list862, pred863) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.procedure_p(pred863) !== false) {
      var if_res473 = M7.rvoid();
    } else {
      var if_res473 = M7.raise_argument_error($rjs_core.Symbol.make("takef"), $rjs_core.UString.make("procedure?"), 1, list862, pred863);
    }
    if_res473;
    var loop864 = function(list865) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.pair_p(list865) !== false) {
        var x866 = M7.car(list865);
        if (pred863(x866) !== false) {
          var if_res474 = M7.cons(x866, loop864(M7.cdr(list865)));
        } else {
          var if_res474 = $rjs_core.Pair.makeList();
        }
        var if_res475 = if_res474;
      } else {
        var if_res475 = $rjs_core.Pair.makeList();
      }
      return if_res475;
    };
    return loop864(list862);
  };
  var dropf = function(list867, pred868) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.procedure_p(pred868) !== false) {
      var if_res476 = M7.rvoid();
    } else {
      var if_res476 = M7.raise_argument_error($rjs_core.Symbol.make("dropf"), $rjs_core.UString.make("procedure?"), 1, list867, pred868);
    }
    if_res476;
    var loop869 = function(list870) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.pair_p(list870) !== false) {
        var if_res477 = pred868(M7.car(list870));
      } else {
        var if_res477 = false;
      }
      if (if_res477 !== false) {
        var if_res478 = loop869(M7.cdr(list870));
      } else {
        var if_res478 = list870;
      }
      return if_res478;
    };
    return loop869(list867);
  };
  var splitf_at = function(list871, pred872) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.procedure_p(pred872) !== false) {
      var if_res479 = M7.rvoid();
    } else {
      var if_res479 = M7.raise_argument_error($rjs_core.Symbol.make("splitf-at"), $rjs_core.UString.make("procedure?"), 1, list871, pred872);
    }
    if_res479;
    var loop873 = function(list874, pfx875) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.pair_p(list874) !== false) {
        var if_res480 = pred872(M7.car(list874));
      } else {
        var if_res480 = false;
      }
      if (if_res480 !== false) {
        var if_res481 = loop873(M7.cdr(list874), M7.cons(M7.car(list874), pfx875));
      } else {
        var if_res481 = M7.values(M0.alt_reverse(pfx875), list874);
      }
      return if_res481;
    };
    return loop873(list871, $rjs_core.Pair.makeList());
  };
  var take_right = function(list876, n877) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.exact_nonnegative_integer_p(n877) !== false) {
      var if_res482 = M7.rvoid();
    } else {
      var if_res482 = M7.raise_argument_error($rjs_core.Symbol.make("take-right"), $rjs_core.UString.make("exact-nonnegative-integer?"), 1, list876, n877);
    }
    if_res482;
    var loop878 = function(list879, lead880) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.pair_p(lead880) !== false) {
        var if_res484 = loop878(M7.cdr(list879), M7.cdr(lead880));
      } else {
        var if_res484 = list879;
      }
      return if_res484;
    };
    var or_part881 = drop_times_(list876, n877);
    if (or_part881 !== false) {
      var if_res483 = or_part881;
    } else {
      var if_res483 = too_large($rjs_core.Symbol.make("take-right"), list876, n877);
    }
    return loop878(list876, if_res483);
  };
  var drop_right = function(list882, n883) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.exact_nonnegative_integer_p(n883) !== false) {
      var if_res485 = M7.rvoid();
    } else {
      var if_res485 = M7.raise_argument_error($rjs_core.Symbol.make("drop-right"), $rjs_core.UString.make("exact-nonnegative-integer?"), 1, list882, n883);
    }
    if_res485;
    var loop884 = function(list885, lead886) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.pair_p(lead886) !== false) {
        var if_res487 = M7.cons(M7.car(list885), loop884(M7.cdr(list885), M7.cdr(lead886)));
      } else {
        var if_res487 = $rjs_core.Pair.makeList();
      }
      return if_res487;
    };
    var or_part887 = drop_times_(list882, n883);
    if (or_part887 !== false) {
      var if_res486 = or_part887;
    } else {
      var if_res486 = too_large($rjs_core.Symbol.make("drop-right"), list882, n883);
    }
    return loop884(list882, if_res486);
  };
  var split_at_right = function(list888, n889) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.exact_nonnegative_integer_p(n889) !== false) {
      var if_res488 = M7.rvoid();
    } else {
      var if_res488 = M7.raise_argument_error($rjs_core.Symbol.make("split-at-right"), $rjs_core.UString.make("exact-nonnegative-integer?"), 1, list888, n889);
    }
    if_res488;
    var loop890 = function(list891, lead892, pfx893) {
      if (arguments.length !== 3) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.pair_p(lead892) !== false) {
        var if_res490 = loop890(M7.cdr(list891), M7.cdr(lead892), M7.cons(M7.car(list891), pfx893));
      } else {
        var if_res490 = M7.values(M0.alt_reverse(pfx893), list891);
      }
      return if_res490;
    };
    var or_part894 = drop_times_(list888, n889);
    if (or_part894 !== false) {
      var if_res489 = or_part894;
    } else {
      var if_res489 = too_large($rjs_core.Symbol.make("split-at-right"), list888, n889);
    }
    return loop890(list888, if_res489, $rjs_core.Pair.makeList());
  };
  var count_from_right = function(who895, list896, pred897) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.procedure_p(pred897) !== false) {
      var if_res491 = M7.rvoid();
    } else {
      var if_res491 = M7.raise_argument_error(who895, $rjs_core.UString.make("procedure?"), 1, list896, pred897);
    }
    if_res491;
    var loop898 = function(list899, rev900, n901) {
      if (arguments.length !== 3) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.pair_p(list899) !== false) {
        var if_res494 = loop898(M7.cdr(list899), M7.cons(M7.car(list899), rev900), M7.add1(n901));
      } else {
        var loop902 = function(n903, list904) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M7.pair_p(list904) !== false) {
            var if_res492 = pred897(M7.car(list904));
          } else {
            var if_res492 = false;
          }
          if (if_res492 !== false) {
            var if_res493 = loop902(M7.sub1(n903), M7.cdr(list904));
          } else {
            var if_res493 = n903;
          }
          return if_res493;
        };
        var if_res494 = loop902(n901, rev900);
      }
      return if_res494;
    };
    return loop898(list896, $rjs_core.Pair.makeList(), 0);
  };
  var takef_right = function(list905, pred906) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return drop(list905, count_from_right($rjs_core.Symbol.make("takef-right"), list905, pred906));
  };
  var dropf_right = function(list907, pred908) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return take(list907, count_from_right($rjs_core.Symbol.make("dropf-right"), list907, pred908));
  };
  var splitf_at_right = function(list909, pred910) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return split_at(list909, count_from_right($rjs_core.Symbol.make("splitf-at-right"), list909, pred910));
  };
  var list_prefix_p4911 = function(ls2912, rs3913, same_p1914) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var ls915 = ls2912;
    var rs916 = rs3913;
    if (M7.eq_p(same_p1914, M11.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res495 = M7.equal_p;
    } else {
      var if_res495 = same_p1914;
    }
    var same_p917 = if_res495;
    if (M7.list_p(ls915) !== false) {
      var if_res496 = M7.rvoid();
    } else {
      var if_res496 = M7.raise_argument_error($rjs_core.Symbol.make("list-prefix?"), $rjs_core.UString.make("list?"), 0, ls915, rs916);
    }
    if_res496;
    if (M7.list_p(rs916) !== false) {
      var if_res497 = M7.rvoid();
    } else {
      var if_res497 = M7.raise_argument_error($rjs_core.Symbol.make("list-prefix?"), $rjs_core.UString.make("list?"), 1, ls915, rs916);
    }
    if_res497;
    if (M7.procedure_p(same_p917) !== false) {
      var if_res498 = M7.procedure_arity_includes_p(same_p917, 2);
    } else {
      var if_res498 = false;
    }
    if (if_res498 !== false) {
      var if_res499 = M7.rvoid();
    } else {
      var if_res499 = M7.raise_argument_error($rjs_core.Symbol.make("list-prefix?"), $rjs_core.UString.make("(any/c any/c . -> . any/c)"), 2, ls915, rs916, same_p917);
    }
    if_res499;
    var or_part918 = M7.null_p(ls915);
    if (or_part918 !== false) {
      var if_res502 = or_part918;
    } else {
      if (M7.pair_p(rs916) !== false) {
        if (same_p917(M7.car(ls915), M7.car(rs916)) !== false) {
          var if_res500 = list_prefix_p(M7.cdr(ls915), M7.cdr(rs916));
        } else {
          var if_res500 = false;
        }
        var if_res501 = if_res500;
      } else {
        var if_res501 = false;
      }
      var if_res502 = if_res501;
    }
    return if_res502;
  };
  var cl503 = function(ls919, rs920) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return list_prefix_p4911(ls919, rs920, M11.__rjs_quoted__.unsafe_undefined);
  };
  var cl504 = function(ls921, rs922, same_p1923) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return list_prefix_p4911(ls921, rs922, same_p1923);
  };
  var list_prefix_p = $rjs_core.attachProcedureArity(function() {
    var fixed_lam505 = {
      '2': cl503,
      '3': cl504
    }[arguments.length];
    if (fixed_lam505 !== undefined) {
      return fixed_lam505.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var internal_split_common_prefix = function(as924, bs925, same_p926, keep_prefix_p927, name928) {
    if (arguments.length !== 5) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(as924) !== false) {
      var if_res506 = M7.rvoid();
    } else {
      var if_res506 = M7.raise_argument_error(name928, $rjs_core.UString.make("list?"), 0, as924, bs925);
    }
    if_res506;
    if (M7.list_p(bs925) !== false) {
      var if_res507 = M7.rvoid();
    } else {
      var if_res507 = M7.raise_argument_error(name928, $rjs_core.UString.make("list?"), 1, as924, bs925);
    }
    if_res507;
    if (M7.procedure_p(same_p926) !== false) {
      var if_res508 = M7.procedure_arity_includes_p(same_p926, 2);
    } else {
      var if_res508 = false;
    }
    if (if_res508 !== false) {
      var if_res509 = M7.rvoid();
    } else {
      var if_res509 = M7.raise_argument_error(name928, $rjs_core.UString.make("(any/c any/c . -> . any/c)"), 2, as924, bs925, same_p926);
    }
    if_res509;
    var loop929 = function(as930, bs931) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.pair_p(as930) !== false) {
        if (M7.pair_p(bs931) !== false) {
          var if_res510 = same_p926(M7.car(as930), M7.car(bs931));
        } else {
          var if_res510 = false;
        }
        var if_res511 = if_res510;
      } else {
        var if_res511 = false;
      }
      if (if_res511 !== false) {
        var let_result512 = loop929(M7.cdr(as930), M7.cdr(bs931));
        var prefix932 = let_result512.getAt(0);
        var atail933 = let_result512.getAt(1);
        var btail934 = let_result512.getAt(2);
        if (keep_prefix_p927 !== false) {
          var if_res513 = M7.cons(M7.car(as930), prefix932);
        } else {
          var if_res513 = false;
        }
        var if_res514 = M7.values(if_res513, atail933, btail934);
      } else {
        var if_res514 = M7.values(M7.rnull, as930, bs931);
      }
      return if_res514;
    };
    return loop929(as924, bs925);
  };
  var split_common_prefix9935 = function(as7936, bs8937, same_p6938) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var as939 = as7936;
    var bs940 = bs8937;
    if (M7.eq_p(same_p6938, M11.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res515 = M7.equal_p;
    } else {
      var if_res515 = same_p6938;
    }
    var same_p941 = if_res515;
    return internal_split_common_prefix(as939, bs940, same_p941, true, $rjs_core.Symbol.make("split-common-prefix"));
  };
  var cl516 = function(as942, bs943) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return split_common_prefix9935(as942, bs943, M11.__rjs_quoted__.unsafe_undefined);
  };
  var cl517 = function(as944, bs945, same_p6946) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return split_common_prefix9935(as944, bs945, same_p6946);
  };
  var split_common_prefix = $rjs_core.attachProcedureArity(function() {
    var fixed_lam518 = {
      '2': cl516,
      '3': cl517
    }[arguments.length];
    if (fixed_lam518 !== undefined) {
      return fixed_lam518.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var take_common_prefix14947 = function(as12948, bs13949, same_p11950) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var as951 = as12948;
    var bs952 = bs13949;
    if (M7.eq_p(same_p11950, M11.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res519 = M7.equal_p;
    } else {
      var if_res519 = same_p11950;
    }
    var same_p953 = if_res519;
    var let_result520 = internal_split_common_prefix(as951, bs952, same_p953, true, $rjs_core.Symbol.make("take-common-prefix"));
    var prefix954 = let_result520.getAt(0);
    var atail955 = let_result520.getAt(1);
    var btail956 = let_result520.getAt(2);
    return prefix954;
  };
  var cl521 = function(as957, bs958) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return take_common_prefix14947(as957, bs958, M11.__rjs_quoted__.unsafe_undefined);
  };
  var cl522 = function(as959, bs960, same_p11961) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return take_common_prefix14947(as959, bs960, same_p11961);
  };
  var take_common_prefix = $rjs_core.attachProcedureArity(function() {
    var fixed_lam523 = {
      '2': cl521,
      '3': cl522
    }[arguments.length];
    if (fixed_lam523 !== undefined) {
      return fixed_lam523.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var drop_common_prefix19962 = function(as17963, bs18964, same_p16965) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var as966 = as17963;
    var bs967 = bs18964;
    if (M7.eq_p(same_p16965, M11.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res524 = M7.equal_p;
    } else {
      var if_res524 = same_p16965;
    }
    var same_p968 = if_res524;
    var let_result525 = internal_split_common_prefix(as966, bs967, same_p968, false, $rjs_core.Symbol.make("drop-common-prefix"));
    var prefix969 = let_result525.getAt(0);
    var atail970 = let_result525.getAt(1);
    var btail971 = let_result525.getAt(2);
    return M7.values(atail970, btail971);
  };
  var cl526 = function(as972, bs973) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return drop_common_prefix19962(as972, bs973, M11.__rjs_quoted__.unsafe_undefined);
  };
  var cl527 = function(as974, bs975, same_p16976) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return drop_common_prefix19962(as974, bs975, same_p16976);
  };
  var drop_common_prefix = $rjs_core.attachProcedureArity(function() {
    var fixed_lam528 = {
      '2': cl526,
      '3': cl527
    }[arguments.length];
    if (fixed_lam528 !== undefined) {
      return fixed_lam528.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var cl529 = function(ls977) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M7.apply(M7.append, ls977);
  };
  var cl530 = function(l1978, l2979) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M7.apply(M7.append, l1978, l2979);
  };
  var cl531 = function(l1980, l2981, l3982) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M7.apply(M7.append, l1980, l2981, l3982);
  };
  var cl532 = function(l1983, l2984, l3985, l4986) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M7.apply(M7.append, l1983, l2984, l3985, l4986);
  };
  var cl533 = $rjs_core.attachProcedureArity(function(l987) {
    for (var lss988536 = [],
        $__1 = 1; $__1 < arguments.length; $__1++)
      lss988536[$__1 - 1] = arguments[$__1];
    if (arguments.length < 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var lss988 = $rjs_core.Pair.listFromArray(lss988536);
    return M7.apply(M10.new_apply_proc, M7.append, l987, lss988);
  });
  var append_times_ = $rjs_core.attachProcedureArity(function() {
    var fixed_lam534 = {
      '1': cl529,
      '2': cl530,
      '3': cl531,
      '4': cl532
    }[arguments.length];
    if (fixed_lam534 !== undefined) {
      return fixed_lam534.apply(null, arguments);
    } else {
      if (M7.__gt__eq_(cl533.length, 1) !== false) {
        var if_res535 = cl533.apply(null, arguments);
      } else {
        var if_res535 = M7.error($rjs_core.UString.make("case-lambda: invalid case"));
      }
      return if_res535;
    }
  }, [M7.make_arity_at_least(1)]);
  var flatten = function(orig_sexp989) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop990 = function(sexp991, acc992) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.null_p(sexp991) !== false) {
        var if_res538 = acc992;
      } else {
        if (M7.pair_p(sexp991) !== false) {
          var if_res537 = loop990(M7.car(sexp991), loop990(M7.cdr(sexp991), acc992));
        } else {
          var if_res537 = M7.cons(sexp991, acc992);
        }
        var if_res538 = if_res537;
      }
      return if_res538;
    };
    return loop990(orig_sexp989, M7.rnull);
  };
  var add_between31 = function(after_last24993, before_first22994, before_last23995, splice_p21996, l29997, x30998) {
    if (arguments.length !== 6) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var l999 = l29997;
    var x1000 = x30998;
    if (false !== false) {
      var if_res539 = false;
    } else {
      var if_res539 = splice_p21996;
    }
    var splice_p1001 = if_res539;
    if (false !== false) {
      var if_res540 = $rjs_core.Pair.makeList();
    } else {
      var if_res540 = before_first22994;
    }
    var before_first1002 = if_res540;
    if (M7.eq_p(before_last23995, M11.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res541 = x1000;
    } else {
      var if_res541 = before_last23995;
    }
    var before_last1003 = if_res541;
    if (false !== false) {
      var if_res542 = $rjs_core.Pair.makeList();
    } else {
      var if_res542 = after_last24993;
    }
    var after_last1004 = if_res542;
    if (M7.list_p(l999) !== false) {
      var if_res543 = M7.rvoid();
    } else {
      var if_res543 = M7.raise_argument_error($rjs_core.Symbol.make("add-between"), $rjs_core.UString.make("list?"), 0, l999, x1000);
    }
    if_res543;
    if (splice_p1001 !== false) {
      var check_list1005 = function(x1006, which1007) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.list_p(x1006) !== false) {
          var if_res544 = M7.rvoid();
        } else {
          var if_res544 = M7.raise_arguments_error($rjs_core.Symbol.make("add-between"), M7.string_append($rjs_core.UString.make("list needed in splicing mode"), which1007), $rjs_core.UString.make("given"), x1006, $rjs_core.UString.make("given list..."), l999);
        }
        return if_res544;
      };
      check_list1005(x1000, $rjs_core.UString.make(""));
      check_list1005(before_first1002, $rjs_core.UString.make(" for #:before-first"));
      check_list1005(before_last1003, $rjs_core.UString.make(" for #:before-last"));
      var if_res546 = check_list1005(after_last1004, $rjs_core.UString.make(" for #:after-last"));
    } else {
      var check_not_given1008 = function(x1009, which1010) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.eq_p($rjs_core.Pair.makeList(), x1009) !== false) {
          var if_res545 = M7.rvoid();
        } else {
          var if_res545 = M7.raise_arguments_error($rjs_core.Symbol.make("add-between"), M7.string_append(which1010, $rjs_core.UString.make(" can only be used in splicing mode")), $rjs_core.UString.make("given"), x1009, $rjs_core.UString.make("given list..."), l999);
        }
        return if_res545;
      };
      check_not_given1008(before_first1002, $rjs_core.UString.make("#:before-first"));
      var if_res546 = check_not_given1008(after_last1004, $rjs_core.UString.make("#:after-last"));
    }
    if_res546;
    var or_part1011 = M7.null_p(l999);
    if (or_part1011 !== false) {
      var if_res547 = or_part1011;
    } else {
      var if_res547 = M7.null_p(M7.cdr(l999));
    }
    if (if_res547 !== false) {
      if (splice_p1001 !== false) {
        var if_res548 = M7.append(before_first1002, l999, after_last1004);
      } else {
        var if_res548 = l999;
      }
      var if_res553 = if_res548;
    } else {
      if (splice_p1001 !== false) {
        var x1012 = M0.alt_reverse(x1000);
        var loop1014 = function(i1015, l1016, r1017) {
          if (arguments.length !== 3) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M7.pair_p(l1016) !== false) {
            var if_res549 = loop1014(M7.car(l1016), M7.cdr(l1016), M7.cons(i1015, M7.append(x1012, r1017)));
          } else {
            var if_res549 = M7.cons(i1015, M7.append(M0.alt_reverse(before_last1003), r1017));
          }
          return if_res549;
        };
        var r1013 = loop1014(M7.cadr(l999), M7.cddr(l999), $rjs_core.Pair.makeList());
        var r1018 = M0.alt_reverse(M7.append(M0.alt_reverse(after_last1004), r1013));
        var r1019 = M5.__rjs_quoted__.qq_append(before_first1002, M7.list_times_(M7.car(l999), r1018));
        var if_res552 = r1019;
      } else {
        var temp551 = M7.car(l999);
        var loop1020 = function(i1021, l1022, r1023) {
          if (arguments.length !== 3) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M7.pair_p(l1022) !== false) {
            var if_res550 = loop1020(M7.car(l1022), M7.cdr(l1022), M7.cons(i1021, M7.cons(x1000, r1023)));
          } else {
            var if_res550 = M7.cons(i1021, M7.cons(before_last1003, r1023));
          }
          return if_res550;
        };
        var if_res552 = M7.cons(temp551, M0.alt_reverse(loop1020(M7.cadr(l999), M7.cddr(l999), $rjs_core.Pair.makeList())));
      }
      var if_res553 = if_res552;
    }
    return if_res553;
  };
  var unpack32 = function(given_kws1024, given_args1025, l291026, x301027) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.pair_p(given_kws1024) !== false) {
      var if_res554 = M7.eq_p($rjs_core.Keyword.make("after-last"), M7.car(given_kws1024));
    } else {
      var if_res554 = false;
    }
    var after_last281028 = if_res554;
    if (after_last281028 !== false) {
      var if_res555 = M7.car(given_args1025);
    } else {
      var if_res555 = $rjs_core.Pair.makeList();
    }
    var after_last241029 = if_res555;
    if (after_last281028 !== false) {
      var if_res556 = M7.cdr(given_kws1024);
    } else {
      var if_res556 = given_kws1024;
    }
    var given_kws1030 = if_res556;
    if (after_last281028 !== false) {
      var if_res557 = M7.cdr(given_args1025);
    } else {
      var if_res557 = given_args1025;
    }
    var given_args1031 = if_res557;
    if (M7.pair_p(given_kws1030) !== false) {
      var if_res558 = M7.eq_p($rjs_core.Keyword.make("before-first"), M7.car(given_kws1030));
    } else {
      var if_res558 = false;
    }
    var before_first261032 = if_res558;
    if (before_first261032 !== false) {
      var if_res559 = M7.car(given_args1031);
    } else {
      var if_res559 = $rjs_core.Pair.makeList();
    }
    var before_first221033 = if_res559;
    if (before_first261032 !== false) {
      var if_res560 = M7.cdr(given_kws1030);
    } else {
      var if_res560 = given_kws1030;
    }
    var given_kws1034 = if_res560;
    if (before_first261032 !== false) {
      var if_res561 = M7.cdr(given_args1031);
    } else {
      var if_res561 = given_args1031;
    }
    var given_args1035 = if_res561;
    if (M7.pair_p(given_kws1034) !== false) {
      var if_res562 = M7.eq_p($rjs_core.Keyword.make("before-last"), M7.car(given_kws1034));
    } else {
      var if_res562 = false;
    }
    var before_last271036 = if_res562;
    if (before_last271036 !== false) {
      var if_res563 = M7.car(given_args1035);
    } else {
      var if_res563 = M11.__rjs_quoted__.unsafe_undefined;
    }
    var before_last231037 = if_res563;
    if (before_last271036 !== false) {
      var if_res564 = M7.cdr(given_kws1034);
    } else {
      var if_res564 = given_kws1034;
    }
    var given_kws1038 = if_res564;
    if (before_last271036 !== false) {
      var if_res565 = M7.cdr(given_args1035);
    } else {
      var if_res565 = given_args1035;
    }
    var given_args1039 = if_res565;
    var splice_p251040 = M7.pair_p(given_kws1038);
    if (splice_p251040 !== false) {
      var if_res566 = M7.car(given_args1039);
    } else {
      var if_res566 = false;
    }
    var splice_p211041 = if_res566;
    return add_between31(after_last241029, before_first221033, before_last231037, splice_p211041, l291026, x301027);
  };
  var cl570 = function(given_kws1052, given_args1053, l1054, x1055) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack32(given_kws1052, given_args1053, l1054, x1055);
  };
  var temp572 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam571 = {'4': cl570}[arguments.length];
    if (fixed_lam571 !== undefined) {
      return fixed_lam571.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [4]);
  var temp569 = $rjs_core.Pair.makeList($rjs_core.Keyword.make("after-last"), $rjs_core.Keyword.make("before-first"), $rjs_core.Keyword.make("before-last"), $rjs_core.Keyword.make("splice?"));
  var cl567 = function(l1057, x1058) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack32(M7.rnull, M7.rnull, l1057, x1058);
  };
  var add_between1056 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam568 = {'2': cl567}[arguments.length];
    if (fixed_lam568 !== undefined) {
      return fixed_lam568.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2]);
  var add_between33 = M3.__rjs_quoted__.make_optional_keyword_procedure(function(given_kws1042, given_argc1043) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.__eq_(given_argc1043, 4) !== false) {
      var l11044 = given_kws1042;
      if (M7.null_p(l11044) !== false) {
        var if_res574 = l11044;
      } else {
        if (M7.eq_p(M7.car(l11044), $rjs_core.Keyword.make("after-last")) !== false) {
          var if_res573 = M7.cdr(l11044);
        } else {
          var if_res573 = l11044;
        }
        var if_res574 = if_res573;
      }
      var l11045 = if_res574;
      var l11046 = l11045;
      if (M7.null_p(l11046) !== false) {
        var if_res576 = l11046;
      } else {
        if (M7.eq_p(M7.car(l11046), $rjs_core.Keyword.make("before-first")) !== false) {
          var if_res575 = M7.cdr(l11046);
        } else {
          var if_res575 = l11046;
        }
        var if_res576 = if_res575;
      }
      var l11047 = if_res576;
      var l11048 = l11047;
      if (M7.null_p(l11048) !== false) {
        var if_res578 = l11048;
      } else {
        if (M7.eq_p(M7.car(l11048), $rjs_core.Keyword.make("before-last")) !== false) {
          var if_res577 = M7.cdr(l11048);
        } else {
          var if_res577 = l11048;
        }
        var if_res578 = if_res577;
      }
      var l11049 = if_res578;
      var l11050 = l11049;
      if (M7.null_p(l11050) !== false) {
        var if_res580 = l11050;
      } else {
        if (M7.eq_p(M7.car(l11050), $rjs_core.Keyword.make("splice?")) !== false) {
          var if_res579 = M7.cdr(l11050);
        } else {
          var if_res579 = l11050;
        }
        var if_res580 = if_res579;
      }
      var l11051 = if_res580;
      var if_res581 = M7.null_p(l11051);
    } else {
      var if_res581 = false;
    }
    return if_res581;
  }, temp572, M7.rnull, temp569, add_between1056);
  var remove_duplicates38 = function(key341059, l371060, __eq__p361061) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var l1062 = l371060;
    if (M7.eq_p(__eq__p361061, M11.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res582 = M7.equal_p;
    } else {
      var if_res582 = __eq__p361061;
    }
    var __eq__p1063 = if_res582;
    if (false !== false) {
      var if_res583 = false;
    } else {
      var if_res583 = key341059;
    }
    var key1064 = if_res583;
    if (M7.list_p(l1062) !== false) {
      var if_res584 = M7.rvoid();
    } else {
      var if_res584 = M7.raise_argument_error($rjs_core.Symbol.make("remove-duplicates"), $rjs_core.UString.make("list?"), l1062);
    }
    if_res584;
    var len1065 = M7.length(l1062);
    if (M7.__lt__eq_(len1065, 1) !== false) {
      var if_res588 = true;
    } else {
      if (M7.__lt__eq_(len1065, 40) !== false) {
        var if_res587 = false;
      } else {
        if (M7.eq_p(__eq__p1063, M7.eq_p) !== false) {
          var if_res586 = M7.make_hasheq();
        } else {
          if (M7.eq_p(__eq__p1063, M7.equal_p) !== false) {
            var if_res585 = M7.make_hash();
          } else {
            var if_res585 = false;
          }
          var if_res586 = if_res585;
        }
        var if_res587 = if_res586;
      }
      var if_res588 = if_res587;
    }
    var h1066 = if_res588;
    var tmp1067 = h1066;
    if (M7.equal_p(tmp1067, true) !== false) {
      var if_res607 = l1062;
    } else {
      if (M7.equal_p(tmp1067, false) !== false) {
        var or_part1069 = key1064;
        if (or_part1069 !== false) {
          var if_res589 = or_part1069;
        } else {
          var if_res589 = function(x1070) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return x1070;
          };
        }
        var key1068 = if_res589;
        if (M7.eq_p(__eq__p1063, M7.equal_p) !== false) {
          var loop1071 = function(l1072, seen1073) {
            if (arguments.length !== 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (M7.null_p(l1072) !== false) {
              var if_res591 = l1072;
            } else {
              var x1074 = M7.car(l1072);
              var k1075 = key1068(x1074);
              var l1076 = M7.cdr(l1072);
              if (M6.member(k1075, seen1073) !== false) {
                var if_res590 = loop1071(l1076, seen1073);
              } else {
                var if_res590 = M7.cons(x1074, loop1071(l1076, M7.cons(k1075, seen1073)));
              }
              var if_res591 = if_res590;
            }
            return if_res591;
          };
          var if_res600 = loop1071(l1062, M7.rnull);
        } else {
          if (M7.eq_p(__eq__p1063, M7.eq_p) !== false) {
            var loop1077 = function(l1078, seen1079) {
              if (arguments.length !== 2) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              if (M7.null_p(l1078) !== false) {
                var if_res593 = l1078;
              } else {
                var x1080 = M7.car(l1078);
                var k1081 = key1068(x1080);
                var l1082 = M7.cdr(l1078);
                if (M6.memq(k1081, seen1079) !== false) {
                  var if_res592 = loop1077(l1082, seen1079);
                } else {
                  var if_res592 = M7.cons(x1080, loop1077(l1082, M7.cons(k1081, seen1079)));
                }
                var if_res593 = if_res592;
              }
              return if_res593;
            };
            var if_res599 = loop1077(l1062, M7.rnull);
          } else {
            if (M7.eq_p(__eq__p1063, M7.eqv_p) !== false) {
              var loop1083 = function(l1084, seen1085) {
                if (arguments.length !== 2) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                if (M7.null_p(l1084) !== false) {
                  var if_res595 = l1084;
                } else {
                  var x1086 = M7.car(l1084);
                  var k1087 = key1068(x1086);
                  var l1088 = M7.cdr(l1084);
                  if (M6.memv(k1087, seen1085) !== false) {
                    var if_res594 = loop1083(l1088, seen1085);
                  } else {
                    var if_res594 = M7.cons(x1086, loop1083(l1088, M7.cons(k1087, seen1085)));
                  }
                  var if_res595 = if_res594;
                }
                return if_res595;
              };
              var if_res598 = loop1083(l1062, M7.rnull);
            } else {
              var loop1089 = function(l1090, seen1091) {
                if (arguments.length !== 2) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                if (M7.null_p(l1090) !== false) {
                  var if_res597 = l1090;
                } else {
                  var x1092 = M7.car(l1090);
                  var k1093 = key1068(x1092);
                  var l1094 = M7.cdr(l1090);
                  if ((function(x1095, seen1096) {
                    if (arguments.length !== 2) {
                      throw $rjs_core.racketContractError("arity mismatch");
                    } else {}
                    return M4.ormap(function(y1097) {
                      if (arguments.length !== 1) {
                        throw $rjs_core.racketContractError("arity mismatch");
                      } else {}
                      return __eq__p1063(x1095, y1097);
                    }, seen1096);
                  })(k1093, seen1091) !== false) {
                    var if_res596 = loop1089(l1094, seen1091);
                  } else {
                    var if_res596 = M7.cons(x1092, loop1089(l1094, M7.cons(k1093, seen1091)));
                  }
                  var if_res597 = if_res596;
                }
                return if_res597;
              };
              var if_res598 = loop1089(l1062, M7.rnull);
            }
            var if_res599 = if_res598;
          }
          var if_res600 = if_res599;
        }
        var if_res606 = if_res600;
      } else {
        if (key1064 !== false) {
          var loop1098 = function(l1099) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (M7.null_p(l1099) !== false) {
              var if_res602 = l1099;
            } else {
              var x1100 = M7.car(l1099);
              var k1101 = key1064(x1100);
              var l1102 = M7.cdr(l1099);
              if (M7.hash_ref(h1066, k1101, false) !== false) {
                var if_res601 = loop1098(l1102);
              } else {
                M7.hash_set_bang_(h1066, k1101, true);
                var if_res601 = M7.cons(x1100, loop1098(l1102));
              }
              var if_res602 = if_res601;
            }
            return if_res602;
          };
          var if_res605 = loop1098(l1062);
        } else {
          var loop1103 = function(l1104) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (M7.null_p(l1104) !== false) {
              var if_res604 = l1104;
            } else {
              var x1105 = M7.car(l1104);
              var k1106 = x1105;
              var l1107 = M7.cdr(l1104);
              if (M7.hash_ref(h1066, k1106, false) !== false) {
                var if_res603 = loop1103(l1107);
              } else {
                M7.hash_set_bang_(h1066, k1106, true);
                var if_res603 = M7.cons(x1105, loop1103(l1107));
              }
              var if_res604 = if_res603;
            }
            return if_res604;
          };
          var if_res605 = loop1103(l1062);
        }
        var if_res606 = if_res605;
      }
      var if_res607 = if_res606;
    }
    return if_res607;
  };
  var unpack39 = function(given_kws1108, given_args1109, l371110, __eq__p361111) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var key351112 = M7.pair_p(given_kws1108);
    if (key351112 !== false) {
      var if_res608 = M7.car(given_args1109);
    } else {
      var if_res608 = false;
    }
    var key341113 = if_res608;
    return remove_duplicates38(key341113, l371110, __eq__p361111);
  };
  var cl613 = function(given_kws1118, given_args1119, l1120) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack39(given_kws1118, given_args1119, l1120, M11.__rjs_quoted__.unsafe_undefined);
  };
  var cl614 = function(given_kws1121, given_args1122, l1123, __eq__p361124) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack39(given_kws1121, given_args1122, l1123, __eq__p361124);
  };
  var temp616 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam615 = {
      '3': cl613,
      '4': cl614
    }[arguments.length];
    if (fixed_lam615 !== undefined) {
      return fixed_lam615.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [3, 4]);
  var temp612 = $rjs_core.Pair.makeList($rjs_core.Keyword.make("key"));
  var cl609 = function(l1126) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack39(M7.rnull, M7.rnull, l1126, M11.__rjs_quoted__.unsafe_undefined);
  };
  var cl610 = function(l1127, __eq__p361128) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack39(M7.rnull, M7.rnull, l1127, __eq__p361128);
  };
  var remove_duplicates1125 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam611 = {
      '1': cl609,
      '2': cl610
    }[arguments.length];
    if (fixed_lam611 !== undefined) {
      return fixed_lam611.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var remove_duplicates40 = M3.__rjs_quoted__.make_optional_keyword_procedure(function(given_kws1114, given_argc1115) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.__gt__eq_(given_argc1115, 3) !== false) {
      var if_res617 = M7.__lt__eq_(given_argc1115, 4);
    } else {
      var if_res617 = false;
    }
    if (if_res617 !== false) {
      var l11116 = given_kws1114;
      if (M7.null_p(l11116) !== false) {
        var if_res619 = l11116;
      } else {
        if (M7.eq_p(M7.car(l11116), $rjs_core.Keyword.make("key")) !== false) {
          var if_res618 = M7.cdr(l11116);
        } else {
          var if_res618 = l11116;
        }
        var if_res619 = if_res618;
      }
      var l11117 = if_res619;
      var if_res620 = M7.null_p(l11117);
    } else {
      var if_res620 = false;
    }
    return if_res620;
  }, temp616, M7.rnull, temp612, remove_duplicates1125);
  var check_duplicates47 = function(default421129, key411130, items461131, same_p451132) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var items1133 = items461131;
    if (M7.eq_p(same_p451132, M11.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res621 = M7.equal_p;
    } else {
      var if_res621 = same_p451132;
    }
    var same_p1134 = if_res621;
    if (M7.eq_p(key411130, M11.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res622 = M7.values;
    } else {
      var if_res622 = key411130;
    }
    var key1135 = if_res622;
    if (M7.eq_p(default421129, M11.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res623 = function() {
        if (arguments.length !== 0) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return false;
      };
    } else {
      var if_res623 = default421129;
    }
    var failure_result1136 = if_res623;
    if (M7.list_p(items1133) !== false) {
      var if_res624 = M7.rvoid();
    } else {
      var if_res624 = M7.raise_argument_error($rjs_core.Symbol.make("check-duplicates"), $rjs_core.UString.make("list?"), 0, items1133);
    }
    if_res624;
    if (M7.procedure_p(key1135) !== false) {
      var if_res625 = M7.procedure_arity_includes_p(key1135, 1);
    } else {
      var if_res625 = false;
    }
    if (if_res625 !== false) {
      var if_res626 = M7.rvoid();
    } else {
      var if_res626 = M7.raise_argument_error($rjs_core.Symbol.make("check-duplicates"), $rjs_core.UString.make("(-> any/c any/c)"), key1135);
    }
    if_res626;
    if (M7.procedure_p(failure_result1136) !== false) {
      var if_res627 = failure_result1136;
    } else {
      var if_res627 = function() {
        if (arguments.length !== 0) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return failure_result1136;
      };
    }
    var fail_k1137 = if_res627;
    if (M7.eq_p(same_p1134, M7.equal_p) !== false) {
      var if_res632 = check_duplicates_by_t(items1133, key1135, M7.make_hash(), fail_k1137);
    } else {
      if (M7.eq_p(same_p1134, M7.eq_p) !== false) {
        var if_res631 = check_duplicates_by_t(items1133, key1135, M7.make_hasheq(), fail_k1137);
      } else {
        if (M7.eq_p(same_p1134, M7.eqv_p) !== false) {
          var if_res630 = check_duplicates_by_t(items1133, key1135, M7.make_hasheqv(), fail_k1137);
        } else {
          if (M7.procedure_p(same_p1134) !== false) {
            var if_res628 = M7.procedure_arity_includes_p(same_p1134, 2);
          } else {
            var if_res628 = false;
          }
          if (if_res628 !== false) {
            var if_res629 = M7.rvoid();
          } else {
            var if_res629 = M7.raise_argument_error($rjs_core.Symbol.make("check-duplicates"), $rjs_core.UString.make("(any/c any/c . -> . any/c)"), 1, items1133, same_p1134);
          }
          if_res629;
          var if_res630 = check_duplicates_by_list(items1133, key1135, same_p1134, fail_k1137);
        }
        var if_res631 = if_res630;
      }
      var if_res632 = if_res631;
    }
    return if_res632;
  };
  var unpack48 = function(given_kws1138, given_args1139, items461140, same_p451141) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.pair_p(given_kws1138) !== false) {
      var if_res633 = M7.eq_p($rjs_core.Keyword.make("default"), M7.car(given_kws1138));
    } else {
      var if_res633 = false;
    }
    var default441142 = if_res633;
    if (default441142 !== false) {
      var if_res634 = M7.car(given_args1139);
    } else {
      var if_res634 = M11.__rjs_quoted__.unsafe_undefined;
    }
    var default421143 = if_res634;
    if (default441142 !== false) {
      var if_res635 = M7.cdr(given_kws1138);
    } else {
      var if_res635 = given_kws1138;
    }
    var given_kws1144 = if_res635;
    if (default441142 !== false) {
      var if_res636 = M7.cdr(given_args1139);
    } else {
      var if_res636 = given_args1139;
    }
    var given_args1145 = if_res636;
    var key431146 = M7.pair_p(given_kws1144);
    if (key431146 !== false) {
      var if_res637 = M7.car(given_args1145);
    } else {
      var if_res637 = M11.__rjs_quoted__.unsafe_undefined;
    }
    var key411147 = if_res637;
    return check_duplicates47(default421143, key411147, items461140, same_p451141);
  };
  var cl642 = function(given_kws1154, given_args1155, items1156) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack48(given_kws1154, given_args1155, items1156, M11.__rjs_quoted__.unsafe_undefined);
  };
  var cl643 = function(given_kws1157, given_args1158, items1159, same_p451160) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack48(given_kws1157, given_args1158, items1159, same_p451160);
  };
  var temp645 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam644 = {
      '3': cl642,
      '4': cl643
    }[arguments.length];
    if (fixed_lam644 !== undefined) {
      return fixed_lam644.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [3, 4]);
  var temp641 = $rjs_core.Pair.makeList($rjs_core.Keyword.make("default"), $rjs_core.Keyword.make("key"));
  var cl638 = function(items1162) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack48(M7.rnull, M7.rnull, items1162, M11.__rjs_quoted__.unsafe_undefined);
  };
  var cl639 = function(items1163, same_p451164) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack48(M7.rnull, M7.rnull, items1163, same_p451164);
  };
  var check_duplicates1161 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam640 = {
      '1': cl638,
      '2': cl639
    }[arguments.length];
    if (fixed_lam640 !== undefined) {
      return fixed_lam640.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var check_duplicates49 = M3.__rjs_quoted__.make_optional_keyword_procedure(function(given_kws1148, given_argc1149) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.__gt__eq_(given_argc1149, 3) !== false) {
      var if_res646 = M7.__lt__eq_(given_argc1149, 4);
    } else {
      var if_res646 = false;
    }
    if (if_res646 !== false) {
      var l11150 = given_kws1148;
      if (M7.null_p(l11150) !== false) {
        var if_res648 = l11150;
      } else {
        if (M7.eq_p(M7.car(l11150), $rjs_core.Keyword.make("default")) !== false) {
          var if_res647 = M7.cdr(l11150);
        } else {
          var if_res647 = l11150;
        }
        var if_res648 = if_res647;
      }
      var l11151 = if_res648;
      var l11152 = l11151;
      if (M7.null_p(l11152) !== false) {
        var if_res650 = l11152;
      } else {
        if (M7.eq_p(M7.car(l11152), $rjs_core.Keyword.make("key")) !== false) {
          var if_res649 = M7.cdr(l11152);
        } else {
          var if_res649 = l11152;
        }
        var if_res650 = if_res649;
      }
      var l11153 = if_res650;
      var if_res651 = M7.null_p(l11153);
    } else {
      var if_res651 = false;
    }
    return if_res651;
  }, temp645, M7.rnull, temp641, check_duplicates1161);
  var check_duplicates_by_t = function(items1165, key1166, table1167, fail_k1168) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop1169 = function(items1170) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.pair_p(items1170) !== false) {
        var key_item1171 = key1166(M7.car(items1170));
        if (M7.hash_ref(table1167, key_item1171, false) !== false) {
          var if_res652 = M7.car(items1170);
        } else {
          M7.hash_set_bang_(table1167, key_item1171, true);
          var if_res652 = loop1169(M7.cdr(items1170));
        }
        var if_res653 = if_res652;
      } else {
        var if_res653 = fail_k1168();
      }
      return if_res653;
    };
    return loop1169(items1165);
  };
  var check_duplicates_by_list = function(items1172, key1173, same_p1174, fail_k1175) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var loop1176 = function(items1177, sofar1178) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.pair_p(items1177) !== false) {
        var key_item1179 = key1173(M7.car(items1177));
        var lst1180 = sofar1178;
        if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
          var if_res654 = M7.rvoid();
        } else {
          var if_res654 = M9.__rjs_quoted__.check_list(lst1180);
        }
        if_res654;
        var for_loop1181 = function(result1182, lst1183) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M7.pair_p(lst1183) !== false) {
            var prev1184 = M11.unsafe_car(lst1183);
            var rest1185 = M11.unsafe_cdr(lst1183);
            if (true !== false) {
              var result1187 = result1182;
              var result1188 = same_p1174(key_item1179, prev1184);
              var result1186 = M7.values(result1188);
              if (true !== false) {
                var if_res656 = M7.not($rjs_core.attachProcedureArity(function() {
                  for (var x1189655 = [],
                      $__2 = 0; $__2 < arguments.length; $__2++)
                    x1189655[$__2] = arguments[$__2];
                  var x1189 = $rjs_core.Pair.listFromArray(x1189655);
                  return result1186;
                })(prev1184));
              } else {
                var if_res656 = false;
              }
              if (if_res656 !== false) {
                var if_res657 = M7.not(false);
              } else {
                var if_res657 = false;
              }
              if (if_res657 !== false) {
                var if_res658 = for_loop1181(result1186, rest1185);
              } else {
                var if_res658 = result1186;
              }
              var if_res659 = if_res658;
            } else {
              var if_res659 = result1182;
            }
            var if_res660 = if_res659;
          } else {
            var if_res660 = result1182;
          }
          return if_res660;
        };
        if (for_loop1181(false, lst1180) !== false) {
          var if_res661 = M7.car(items1177);
        } else {
          var if_res661 = loop1176(M7.cdr(items1177), M7.cons(key_item1179, sofar1178));
        }
        var if_res662 = if_res661;
      } else {
        var if_res662 = fail_k1175();
      }
      return if_res662;
    };
    return loop1176(items1172, M7.rnull);
  };
  var check_filter_arguments = function(who1190, f1191, l1192, ls1193) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.procedure_p(f1191) !== false) {
      var if_res663 = M7.rvoid();
    } else {
      var if_res663 = M7.apply(M7.raise_argument_error, who1190, $rjs_core.UString.make("procedure?"), 0, f1191, l1192, ls1193);
    }
    if_res663;
    if (M7.procedure_arity_includes_p(f1191, M7.add1(M7.length(ls1193))) !== false) {
      var if_res664 = M7.rvoid();
    } else {
      var if_res664 = M7.raise_arguments_error(who1190, $rjs_core.UString.make("mismatch between procedure arity and argument count"), $rjs_core.UString.make("procedure"), f1191, $rjs_core.UString.make("expected arity"), M7.add1(M7.length(ls1193)));
    }
    if_res664;
    if (M7.list_p(l1192) !== false) {
      var if_res665 = M4.andmap(M7.list_p, ls1193);
    } else {
      var if_res665 = false;
    }
    if (if_res665 !== false) {
      var if_res685 = M7.rvoid();
    } else {
      var let_result666 = M9.__rjs_quoted__.make_sequence($rjs_core.Pair.makeList($rjs_core.Symbol.make("x")), M7.cons(l1192, ls1193));
      var pos__gt_vals1194 = let_result666.getAt(0);
      var pos_pre_inc1195 = let_result666.getAt(1);
      var pos_next1196 = let_result666.getAt(2);
      var init1197 = let_result666.getAt(3);
      var pos_cont_p1198 = let_result666.getAt(4);
      var val_cont_p1199 = let_result666.getAt(5);
      var all_cont_p1200 = let_result666.getAt(6);
      var start1201 = 0;
      if (M7.rvoid() !== false) {
        if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
          var if_res667 = M7.rvoid();
        } else {
          var if_res667 = M9.__rjs_quoted__.check_naturals(start1201);
        }
        var if_res668 = if_res667;
      } else {
        var if_res668 = false;
      }
      if_res668;
      var for_loop1202 = function(pos1203, pos1204) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (pos_cont_p1198 !== false) {
          var if_res669 = pos_cont_p1198(pos1203);
        } else {
          var if_res669 = true;
        }
        if (if_res669 !== false) {
          var if_res670 = true;
        } else {
          var if_res670 = false;
        }
        if (if_res670 !== false) {
          var x1209 = pos__gt_vals1194(pos1203);
          if (all_cont_p1200 !== false) {
            var if_res671 = function(pos1210) {
              if (arguments.length !== 1) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              return all_cont_p1200(pos1210, x1209);
            };
          } else {
            var if_res671 = false;
          }
          var let_result672 = M7.values(x1209, if_res671);
          var x1205 = let_result672.getAt(0);
          var all_cont_p_by_pos1206 = let_result672.getAt(1);
          if (pos_pre_inc1195 !== false) {
            var if_res673 = pos_pre_inc1195(pos1203);
          } else {
            var if_res673 = pos1203;
          }
          var pos1207 = if_res673;
          var i1208 = pos1204;
          if (val_cont_p1199 !== false) {
            var if_res674 = val_cont_p1199(x1205);
          } else {
            var if_res674 = true;
          }
          if (if_res674 !== false) {
            var if_res675 = true;
          } else {
            var if_res675 = false;
          }
          if (if_res675 !== false) {
            if (M7.list_p(x1205) !== false) {
              var if_res676 = M7.rvoid();
            } else {
              var if_res676 = M7.apply(M7.raise_argument_error, who1190, $rjs_core.UString.make("list?"), M7.add1(i1208), f1191, l1192, ls1193);
            }
            if_res676;
            var let_result677 = M7.values();
            var let_result678 = M7.values();
            if (all_cont_p_by_pos1206 !== false) {
              var if_res679 = all_cont_p_by_pos1206(pos1207);
            } else {
              var if_res679 = true;
            }
            if (if_res679 !== false) {
              var if_res680 = true;
            } else {
              var if_res680 = false;
            }
            if (if_res680 !== false) {
              var if_res681 = M7.not(false);
            } else {
              var if_res681 = false;
            }
            if (if_res681 !== false) {
              var if_res682 = for_loop1202(pos_next1196(pos1207), pos1204 + 1);
            } else {
              var if_res682 = M7.values();
            }
            var if_res683 = if_res682;
          } else {
            var if_res683 = M7.values();
          }
          var if_res684 = if_res683;
        } else {
          var if_res684 = M7.values();
        }
        return if_res684;
      };
      for_loop1202(init1197, start1201);
      var if_res685 = M7.rvoid();
    }
    return if_res685;
  };
  var filter_map = $rjs_core.attachProcedureArity(function(f1211, l1212) {
    for (var ls1213686 = [],
        $__2 = 2; $__2 < arguments.length; $__2++)
      ls1213686[$__2 - 2] = arguments[$__2];
    if (arguments.length < 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var ls1213 = $rjs_core.Pair.listFromArray(ls1213686);
    check_filter_arguments($rjs_core.Symbol.make("filter-map"), f1211, l1212, ls1213);
    if (M7.pair_p(ls1213) !== false) {
      var len1214 = M7.length(l1212);
      if (M4.andmap(function(l1215) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M7.__eq_(len1214, M7.length(l1215));
      }, ls1213) !== false) {
        var loop1216 = function(l1217, ls1218) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M7.null_p(l1217) !== false) {
            var if_res688 = M7.rnull;
          } else {
            var x1219 = M7.apply(f1211, M7.car(l1217), M4.map(M7.car, ls1218));
            if (x1219 !== false) {
              var if_res687 = M7.cons(x1219, loop1216(M7.cdr(l1217), M4.map(M7.cdr, ls1218)));
            } else {
              var if_res687 = loop1216(M7.cdr(l1217), M4.map(M7.cdr, ls1218));
            }
            var if_res688 = if_res687;
          }
          return if_res688;
        };
        var if_res689 = loop1216(l1212, ls1213);
      } else {
        var if_res689 = M7.raise_arguments_error($rjs_core.Symbol.make("filter-map"), $rjs_core.UString.make("all lists must have same size"));
      }
      var if_res692 = if_res689;
    } else {
      var loop1220 = function(l1221) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.null_p(l1221) !== false) {
          var if_res691 = M7.rnull;
        } else {
          var x1222 = f1211(M7.car(l1221));
          if (x1222 !== false) {
            var if_res690 = M7.cons(x1222, loop1220(M7.cdr(l1221)));
          } else {
            var if_res690 = loop1220(M7.cdr(l1221));
          }
          var if_res691 = if_res690;
        }
        return if_res691;
      };
      var if_res692 = loop1220(l1212);
    }
    return if_res692;
  });
  var count = $rjs_core.attachProcedureArity(function(f1223, l1224) {
    for (var ls1225693 = [],
        $__3 = 2; $__3 < arguments.length; $__3++)
      ls1225693[$__3 - 2] = arguments[$__3];
    if (arguments.length < 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var ls1225 = $rjs_core.Pair.listFromArray(ls1225693);
    check_filter_arguments($rjs_core.Symbol.make("count"), f1223, l1224, ls1225);
    if (M7.pair_p(ls1225) !== false) {
      var len1226 = M7.length(l1224);
      if (M4.andmap(function(l1227) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M7.__eq_(len1226, M7.length(l1227));
      }, ls1225) !== false) {
        var loop1228 = function(l1229, ls1230, c1231) {
          if (arguments.length !== 3) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M7.null_p(l1229) !== false) {
            var if_res697 = c1231;
          } else {
            var temp696 = M7.cdr(l1229);
            var temp695 = M4.map(M7.cdr, ls1230);
            if (M7.apply(f1223, M7.car(l1229), M4.map(M7.car, ls1230)) !== false) {
              var if_res694 = M7.add1(c1231);
            } else {
              var if_res694 = c1231;
            }
            var if_res697 = loop1228(temp696, temp695, if_res694);
          }
          return if_res697;
        };
        var if_res698 = loop1228(l1224, ls1225, 0);
      } else {
        var if_res698 = M7.raise_arguments_error($rjs_core.Symbol.make("count"), $rjs_core.UString.make("all lists must have same size"));
      }
      var if_res702 = if_res698;
    } else {
      var loop1232 = function(l1233, c1234) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.null_p(l1233) !== false) {
          var if_res701 = c1234;
        } else {
          var temp700 = M7.cdr(l1233);
          if (f1223(M7.car(l1233)) !== false) {
            var if_res699 = M7.add1(c1234);
          } else {
            var if_res699 = c1234;
          }
          var if_res701 = loop1232(temp700, if_res699);
        }
        return if_res701;
      };
      var if_res702 = loop1232(l1224, 0);
    }
    return if_res702;
  });
  var partition = function(pred1235, l1236) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.procedure_p(pred1235) !== false) {
      var if_res703 = M7.procedure_arity_includes_p(pred1235, 1);
    } else {
      var if_res703 = false;
    }
    if (if_res703 !== false) {
      var if_res704 = M7.rvoid();
    } else {
      var if_res704 = M7.raise_argument_error($rjs_core.Symbol.make("partition"), $rjs_core.UString.make("(any/c . -> . any/c)"), 0, pred1235, l1236);
    }
    if_res704;
    if (M7.list_p(l1236) !== false) {
      var if_res705 = M7.rvoid();
    } else {
      var if_res705 = M7.raise_argument_error($rjs_core.Symbol.make("partition"), $rjs_core.UString.make("list?"), 1, pred1235, l1236);
    }
    if_res705;
    var loop1237 = function(l1238, i1239, o1240) {
      if (arguments.length !== 3) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.null_p(l1238) !== false) {
        var if_res707 = M7.values(M0.alt_reverse(i1239), M0.alt_reverse(o1240));
      } else {
        var x1241 = M7.car(l1238);
        var l1242 = M7.cdr(l1238);
        if (pred1235(x1241) !== false) {
          var if_res706 = loop1237(l1242, M7.cons(x1241, i1239), o1240);
        } else {
          var if_res706 = loop1237(l1242, i1239, M7.cons(x1241, o1240));
        }
        var if_res707 = if_res706;
      }
      return if_res707;
    };
    return loop1237(l1236, $rjs_core.Pair.makeList(), $rjs_core.Pair.makeList());
  };
  var cl708 = function(end1244) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var start1245 = 0;
    var end1246 = end1244;
    var inc1247 = 1;
    if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
      var if_res712 = M7.rvoid();
    } else {
      var if_res712 = M9.__rjs_quoted__.check_range(start1245, end1246, inc1247);
    }
    if_res712;
    var for_loop1248 = function(fold_var1249, pos1250) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.__lt_(pos1250, end1246) !== false) {
        var i1251 = pos1250;
        if (true !== false) {
          var fold_var1253 = fold_var1249;
          var fold_var1254 = M7.cons(i1251, fold_var1253);
          var fold_var1252 = M7.values(fold_var1254);
          if (true !== false) {
            var if_res713 = M7.not(false);
          } else {
            var if_res713 = false;
          }
          if (if_res713 !== false) {
            var if_res714 = for_loop1248(fold_var1252, pos1250 + inc1247);
          } else {
            var if_res714 = fold_var1252;
          }
          var if_res715 = if_res714;
        } else {
          var if_res715 = fold_var1249;
        }
        var if_res716 = if_res715;
      } else {
        var if_res716 = fold_var1249;
      }
      return if_res716;
    };
    return M0.alt_reverse(for_loop1248(M7.rnull, start1245));
  };
  var cl709 = function(start1255, end1256) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var start1257 = start1255;
    var end1258 = end1256;
    var inc1259 = 1;
    if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
      var if_res717 = M7.rvoid();
    } else {
      var if_res717 = M9.__rjs_quoted__.check_range(start1257, end1258, inc1259);
    }
    if_res717;
    var for_loop1260 = function(fold_var1261, pos1262) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.__lt_(pos1262, end1258) !== false) {
        var i1263 = pos1262;
        if (true !== false) {
          var fold_var1265 = fold_var1261;
          var fold_var1266 = M7.cons(i1263, fold_var1265);
          var fold_var1264 = M7.values(fold_var1266);
          if (true !== false) {
            var if_res718 = M7.not(false);
          } else {
            var if_res718 = false;
          }
          if (if_res718 !== false) {
            var if_res719 = for_loop1260(fold_var1264, pos1262 + inc1259);
          } else {
            var if_res719 = fold_var1264;
          }
          var if_res720 = if_res719;
        } else {
          var if_res720 = fold_var1261;
        }
        var if_res721 = if_res720;
      } else {
        var if_res721 = fold_var1261;
      }
      return if_res721;
    };
    return M0.alt_reverse(for_loop1260(M7.rnull, start1257));
  };
  var cl710 = function(start1267, end1268, step1269) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var start1270 = start1267;
    var end1271 = end1268;
    var inc1272 = step1269;
    if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
      var if_res722 = M7.rvoid();
    } else {
      var if_res722 = M9.__rjs_quoted__.check_range(start1270, end1271, inc1272);
    }
    if_res722;
    var for_loop1273 = function(fold_var1274, pos1275) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.__gt__eq_(step1269, 0) !== false) {
        var if_res723 = M7.__lt_(pos1275, end1271);
      } else {
        var if_res723 = M7.__gt_(pos1275, end1271);
      }
      if (if_res723 !== false) {
        var i1276 = pos1275;
        if (true !== false) {
          var fold_var1278 = fold_var1274;
          var fold_var1279 = M7.cons(i1276, fold_var1278);
          var fold_var1277 = M7.values(fold_var1279);
          if (true !== false) {
            var if_res724 = M7.not(false);
          } else {
            var if_res724 = false;
          }
          if (if_res724 !== false) {
            var if_res725 = for_loop1273(fold_var1277, pos1275 + inc1272);
          } else {
            var if_res725 = fold_var1277;
          }
          var if_res726 = if_res725;
        } else {
          var if_res726 = fold_var1274;
        }
        var if_res727 = if_res726;
      } else {
        var if_res727 = fold_var1274;
      }
      return if_res727;
    };
    return M0.alt_reverse(for_loop1273(M7.rnull, start1270));
  };
  var range1243 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam711 = {
      '1': cl708,
      '2': cl709,
      '3': cl710
    }[arguments.length];
    if (fixed_lam711 !== undefined) {
      return fixed_lam711.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2, 3]);
  var range_proc = range1243;
  var cl728 = function(f1280, l1281) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M7.apply(M7.append, M4.map(f1280, l1281));
  };
  var cl729 = function(f1282, l11283, l21284) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M7.apply(M7.append, M4.map(f1282, l11283, l21284));
  };
  var cl730 = $rjs_core.attachProcedureArity(function(f1285, l1286) {
    for (var ls1287733 = [],
        $__4 = 2; $__4 < arguments.length; $__4++)
      ls1287733[$__4 - 2] = arguments[$__4];
    if (arguments.length < 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var ls1287 = $rjs_core.Pair.listFromArray(ls1287733);
    return M7.apply(M7.append, M7.apply(M4.map, f1285, l1286, ls1287));
  });
  var append_map = $rjs_core.attachProcedureArity(function() {
    var fixed_lam731 = {
      '2': cl728,
      '3': cl729
    }[arguments.length];
    if (fixed_lam731 !== undefined) {
      return fixed_lam731.apply(null, arguments);
    } else {
      if (M7.__gt__eq_(cl730.length, 1) !== false) {
        var if_res732 = cl730.apply(null, arguments);
      } else {
        var if_res732 = M7.error($rjs_core.UString.make("case-lambda: invalid case"));
      }
      return if_res732;
    }
  }, [M7.make_arity_at_least(2)]);
  var filter_not = function(f1288, list1289) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.procedure_p(f1288) !== false) {
      var if_res734 = M7.procedure_arity_includes_p(f1288, 1);
    } else {
      var if_res734 = false;
    }
    if (if_res734 !== false) {
      var if_res735 = M7.rvoid();
    } else {
      var if_res735 = M7.raise_argument_error($rjs_core.Symbol.make("filter-not"), $rjs_core.UString.make("(any/c . -> . any/c)"), 0, f1288, list1289);
    }
    if_res735;
    if (M7.list_p(list1289) !== false) {
      var if_res736 = M7.rvoid();
    } else {
      var if_res736 = M7.raise_argument_error($rjs_core.Symbol.make("filter-not"), $rjs_core.UString.make("list?"), 1, f1288, list1289);
    }
    if_res736;
    var loop1290 = function(l1291, result1292) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.null_p(l1291) !== false) {
        var if_res739 = M0.alt_reverse(result1292);
      } else {
        var temp738 = M7.cdr(l1291);
        if (f1288(M7.car(l1291)) !== false) {
          var if_res737 = result1292;
        } else {
          var if_res737 = M7.cons(M7.car(l1291), result1292);
        }
        var if_res739 = loop1290(temp738, if_res737);
      }
      return if_res739;
    };
    return loop1290(list1289, M7.rnull);
  };
  var shuffle = function(l1293) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(l1293) !== false) {
      var if_res740 = M7.rvoid();
    } else {
      var if_res740 = M7.raise_argument_error($rjs_core.Symbol.make("shuffle"), $rjs_core.UString.make("list?"), 0, l1293);
    }
    if_res740;
    var let_result741 = M7.values();
    var a1294 = M7.make_vector(M7.length(l1293));
    var lst1295 = l1293;
    var start1296 = 0;
    if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
      var if_res742 = M7.rvoid();
    } else {
      var if_res742 = M9.__rjs_quoted__.check_list(lst1295);
    }
    if_res742;
    if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
      var if_res743 = M7.rvoid();
    } else {
      var if_res743 = M9.__rjs_quoted__.check_naturals(start1296);
    }
    if_res743;
    var for_loop1297 = function(lst1298, pos1299) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.pair_p(lst1298) !== false) {
        var if_res744 = true;
      } else {
        var if_res744 = false;
      }
      if (if_res744 !== false) {
        var x1300 = M11.unsafe_car(lst1298);
        var rest1301 = M11.unsafe_cdr(lst1298);
        var i1302 = pos1299;
        if (true !== false) {
          var if_res745 = true;
        } else {
          var if_res745 = false;
        }
        if (if_res745 !== false) {
          var j1303 = M10.random(M7.add1(i1302));
          if (M7.__eq_(j1303, i1302) !== false) {
            var if_res746 = M7.rvoid();
          } else {
            var if_res746 = M7.vector_set_bang_(a1294, i1302, M7.vector_ref(a1294, j1303));
          }
          if_res746;
          M7.vector_set_bang_(a1294, j1303, x1300);
          var let_result747 = M7.values();
          var let_result748 = M7.values();
          if (true !== false) {
            if (true !== false) {
              var if_res749 = M7.not(false);
            } else {
              var if_res749 = false;
            }
            var if_res750 = if_res749;
          } else {
            var if_res750 = false;
          }
          if (if_res750 !== false) {
            var if_res751 = for_loop1297(rest1301, pos1299 + 1);
          } else {
            var if_res751 = M7.values();
          }
          var if_res752 = if_res751;
        } else {
          var if_res752 = M7.values();
        }
        var if_res753 = if_res752;
      } else {
        var if_res753 = M7.values();
      }
      return if_res753;
    };
    for_loop1297(lst1295, start1296);
    M7.rvoid();
    return M7.vector__gt_list(a1294);
  };
  var combinations521304 = function(l511305, k501306) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var l1307 = l511305;
    if (false !== false) {
      var if_res754 = false;
    } else {
      var if_res754 = k501306;
    }
    var k1308 = if_res754;
    var let_result755 = M9.__rjs_quoted__.make_sequence($rjs_core.Pair.makeList($rjs_core.Symbol.make("x")), in_combinations(l1307, k1308));
    var pos__gt_vals1309 = let_result755.getAt(0);
    var pos_pre_inc1310 = let_result755.getAt(1);
    var pos_next1311 = let_result755.getAt(2);
    var init1312 = let_result755.getAt(3);
    var pos_cont_p1313 = let_result755.getAt(4);
    var val_cont_p1314 = let_result755.getAt(5);
    var all_cont_p1315 = let_result755.getAt(6);
    M7.rvoid();
    var for_loop1316 = function(fold_var1317, pos1318) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (pos_cont_p1313 !== false) {
        var if_res756 = pos_cont_p1313(pos1318);
      } else {
        var if_res756 = true;
      }
      if (if_res756 !== false) {
        var x1322 = pos__gt_vals1309(pos1318);
        if (all_cont_p1315 !== false) {
          var if_res757 = function(pos1323) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return all_cont_p1315(pos1323, x1322);
          };
        } else {
          var if_res757 = false;
        }
        var let_result758 = M7.values(x1322, if_res757);
        var x1319 = let_result758.getAt(0);
        var all_cont_p_by_pos1320 = let_result758.getAt(1);
        if (pos_pre_inc1310 !== false) {
          var if_res759 = pos_pre_inc1310(pos1318);
        } else {
          var if_res759 = pos1318;
        }
        var pos1321 = if_res759;
        if (val_cont_p1314 !== false) {
          var if_res760 = val_cont_p1314(x1319);
        } else {
          var if_res760 = true;
        }
        if (if_res760 !== false) {
          var fold_var1325 = fold_var1317;
          var fold_var1326 = M7.cons(x1319, fold_var1325);
          var fold_var1324 = M7.values(fold_var1326);
          if (all_cont_p_by_pos1320 !== false) {
            var if_res761 = all_cont_p_by_pos1320(pos1321);
          } else {
            var if_res761 = true;
          }
          if (if_res761 !== false) {
            var if_res762 = M7.not(false);
          } else {
            var if_res762 = false;
          }
          if (if_res762 !== false) {
            var if_res763 = for_loop1316(fold_var1324, pos_next1311(pos1321));
          } else {
            var if_res763 = fold_var1324;
          }
          var if_res764 = if_res763;
        } else {
          var if_res764 = fold_var1317;
        }
        var if_res765 = if_res764;
      } else {
        var if_res765 = fold_var1317;
      }
      return if_res765;
    };
    return M0.alt_reverse(for_loop1316(M7.rnull, init1312));
  };
  var cl766 = function(l1327) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return combinations521304(l1327, false);
  };
  var cl767 = function(l1328, k501329) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return combinations521304(l1328, k501329);
  };
  var combinations = $rjs_core.attachProcedureArity(function() {
    var fixed_lam768 = {
      '1': cl766,
      '2': cl767
    }[arguments.length];
    if (fixed_lam768 !== undefined) {
      return fixed_lam768.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var in_combinations561330 = function(l551331, k541332) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var l1333 = l551331;
    if (false !== false) {
      var if_res769 = false;
    } else {
      var if_res769 = k541332;
    }
    var k1334 = if_res769;
    if (M7.list_p(l1333) !== false) {
      var if_res770 = M7.rvoid();
    } else {
      var if_res770 = M7.raise_argument_error($rjs_core.Symbol.make("in-combinations"), $rjs_core.UString.make("list?"), 0, l1333);
    }
    if_res770;
    var let_result771 = M7.values();
    if (k1334 !== false) {
      var if_res772 = M7.not(M7.exact_nonnegative_integer_p(k1334));
    } else {
      var if_res772 = false;
    }
    if (if_res772 !== false) {
      var if_res773 = M7.raise_argument_error($rjs_core.Symbol.make("in-combinations"), $rjs_core.UString.make("exact-nonnegative-integer?"), 1, l1333, k1334);
    } else {
      var if_res773 = M7.rvoid();
    }
    if_res773;
    var let_result774 = M7.values();
    var v1335 = M7.list__gt_vector(l1333);
    var N1336 = M7.vector_length(v1335);
    var N_11337 = N1336 - 1;
    var vector_ref_by_bits1338 = function(v1339, b1340) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var start1341 = N_11337;
      var end1342 = -1;
      var inc1343 = -1;
      if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
        var if_res775 = M7.rvoid();
      } else {
        var if_res775 = M9.__rjs_quoted__.check_range(start1341, end1342, inc1343);
      }
      if_res775;
      var for_loop1344 = function(acc1345, pos1346) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.__gt_(pos1346, end1342) !== false) {
          var i1347 = pos1346;
          if (true !== false) {
            var acc1349 = acc1345;
            if (M7.bitwise_bit_set_p(b1340, i1347) !== false) {
              var if_res776 = M7.cons(M7.vector_ref(v1339, i1347), acc1349);
            } else {
              var if_res776 = acc1349;
            }
            var acc1350 = if_res776;
            var acc1348 = M7.values(acc1350);
            if (true !== false) {
              var if_res777 = M7.not(false);
            } else {
              var if_res777 = false;
            }
            if (if_res777 !== false) {
              var if_res778 = for_loop1344(acc1348, pos1346 + inc1343);
            } else {
              var if_res778 = acc1348;
            }
            var if_res779 = if_res778;
          } else {
            var if_res779 = acc1345;
          }
          var if_res780 = if_res779;
        } else {
          var if_res780 = acc1345;
        }
        return if_res780;
      };
      return for_loop1344($rjs_core.Pair.makeList(), start1341);
    };
    if (M7.not(k1334) !== false) {
      var if_res783 = M7.values(0, M7.expt(2, N1336) - 1, M7.add1);
    } else {
      if (M7.__lt_(N1336, k1334) !== false) {
        var if_res782 = M7.values(1, 0, M7.values);
      } else {
        var first1354 = M7.expt(2, k1334) - 1;
        if (M7.zero_p(first1354) !== false) {
          var if_res781 = M7.add1;
        } else {
          var if_res781 = function(n1356) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            var u1357 = M7.bitwise_and(n1356, M7.__(n1356));
            var v1358 = u1357 + n1356;
            return v1358 + M7.arithmetic_shift(M7.quotient(M7.bitwise_xor(v1358, n1356), u1357), -2);
          };
        }
        var gospers_hack1355 = if_res781;
        var if_res782 = M7.values(first1354, M7.arithmetic_shift(first1354, N1336 - k1334), gospers_hack1355);
      }
      var if_res783 = if_res782;
    }
    var let_result784 = if_res783;
    var first1351 = let_result784.getAt(0);
    var last1352 = let_result784.getAt(1);
    var incr1353 = let_result784.getAt(2);
    var curr_box1360 = M7.box(first1351);
    var gen_next1359 = function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var curr1361 = M7.unbox(curr_box1360);
      if (M7.__lt__eq_(curr1361, last1352) !== false) {
        var begin_res785 = vector_ref_by_bits1338(v1335, curr1361);
        M7.set_box_bang_(curr_box1360, incr1353(curr1361));
        var if_res786 = begin_res785;
      } else {
        var if_res786 = false;
      }
      return if_res786;
    };
    return M9.__rjs_quoted__.in_producer(gen_next1359, false);
  };
  var cl787 = function(l1362) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_combinations561330(l1362, false);
  };
  var cl788 = function(l1363, k541364) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return in_combinations561330(l1363, k541364);
  };
  var in_combinations = $rjs_core.attachProcedureArity(function() {
    var fixed_lam789 = {
      '1': cl787,
      '2': cl788
    }[arguments.length];
    if (fixed_lam789 !== undefined) {
      return fixed_lam789.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var swap_plus_flip = function(l1365, i1366, j1367) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var tmp1368 = j1367;
    if (M7.equal_p(tmp1368, 0) !== false) {
      var if_res797 = M7.list_times_(M7.cadr(l1365), M7.car(l1365), M7.cddr(l1365));
    } else {
      if (M7.equal_p(tmp1368, 1) !== false) {
        var a1369 = M7.car(l1365);
        var b1370 = M7.cadr(l1365);
        var c1371 = M7.caddr(l1365);
        var l1372 = M7.cdddr(l1365);
        var tmp1373 = i1366;
        if (M7.equal_p(tmp1373, 0) !== false) {
          var if_res790 = M7.list_times_(b1370, c1371, a1369, l1372);
        } else {
          var if_res790 = M7.list_times_(c1371, a1369, b1370, l1372);
        }
        var if_res796 = if_res790;
      } else {
        if (M7.equal_p(tmp1368, 2) !== false) {
          var a1374 = M7.car(l1365);
          var b1375 = M7.cadr(l1365);
          var c1376 = M7.caddr(l1365);
          var d1377 = M7.cadddr(l1365);
          var l1378 = M7.cddddr(l1365);
          var tmp1379 = i1366;
          if (M7.equal_p(tmp1379, 0) !== false) {
            var if_res792 = M7.list_times_(c1376, b1375, d1377, a1374, l1378);
          } else {
            if (M7.equal_p(tmp1379, 1) !== false) {
              var if_res791 = M7.list_times_(c1376, d1377, a1374, b1375, l1378);
            } else {
              var if_res791 = M7.list_times_(d1377, b1375, a1374, c1376, l1378);
            }
            var if_res792 = if_res791;
          }
          var if_res795 = if_res792;
        } else {
          var loop1380 = function(n1381, l11382, r11383) {
            if (arguments.length !== 3) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (M7.__gt_(n1381, 0) !== false) {
              var if_res794 = loop1380(M7.sub1(n1381), M7.cons(M7.car(r11383), l11382), M7.cdr(r11383));
            } else {
              var loop1384 = function(n1385, l21386, r21387) {
                if (arguments.length !== 3) {
                  throw $rjs_core.racketContractError("arity mismatch");
                } else {}
                if (M7.__gt_(n1385, 0) !== false) {
                  var if_res793 = loop1384(M7.sub1(n1385), M7.cons(M7.car(r21387), l21386), M7.cdr(r21387));
                } else {
                  var if_res793 = M5.__rjs_quoted__.qq_append(l21386, M7.list_times_(M7.car(r21387), M5.__rjs_quoted__.qq_append(l11382, M7.list_times_(M7.car(r11383), M7.cdr(r21387)))));
                }
                return if_res793;
              };
              var if_res794 = loop1384(j1367 - i1366, $rjs_core.Pair.makeList(), M7.cdr(r11383));
            }
            return if_res794;
          };
          var if_res795 = loop1380(i1366, $rjs_core.Pair.makeList(), l1365);
        }
        var if_res796 = if_res795;
      }
      var if_res797 = if_res796;
    }
    return if_res797;
  };
  var permutations = function(l1388) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.not(M7.list_p(l1388)) !== false) {
      var if_res804 = M7.raise_argument_error($rjs_core.Symbol.make("permutations"), $rjs_core.UString.make("list?"), 0, l1388);
    } else {
      var or_part1389 = M7.null_p(l1388);
      if (or_part1389 !== false) {
        var if_res798 = or_part1389;
      } else {
        var if_res798 = M7.null_p(M7.cdr(l1388));
      }
      if (if_res798 !== false) {
        var if_res803 = M7.list(l1388);
      } else {
        var N1390 = M7.length(l1388) - 2;
        if (M7.__gt_(N1390, 254) !== false) {
          var if_res799 = M7.error($rjs_core.Symbol.make("permutations"), $rjs_core.UString.make("input list too long: ~e"), l1388);
        } else {
          var if_res799 = M7.rvoid();
        }
        if_res799;
        var let_result800 = M7.values();
        var c1391 = M7.make_bytes(M7.add1(N1390), 0);
        var loop1392 = function(i1393, acc1394) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          var ci1395 = M7.bytes_ref(c1391, i1393);
          if (M7.__lt__eq_(ci1395, i1393) !== false) {
            M7.bytes_set_bang_(c1391, i1393, M7.add1(ci1395));
            var if_res802 = loop1392(0, M7.cons(swap_plus_flip(M7.car(acc1394), ci1395, i1393), acc1394));
          } else {
            if (M7.__lt_(i1393, N1390) !== false) {
              M7.bytes_set_bang_(c1391, i1393, 0);
              var if_res801 = loop1392(M7.add1(i1393), acc1394);
            } else {
              var if_res801 = acc1394;
            }
            var if_res802 = if_res801;
          }
          return if_res802;
        };
        var if_res803 = loop1392(0, M7.list(M0.alt_reverse(l1388)));
      }
      var if_res804 = if_res803;
    }
    return if_res804;
  };
  var in_permutations = function(l1396) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.not(M7.list_p(l1396)) !== false) {
      var if_res813 = M7.raise_argument_error($rjs_core.Symbol.make("in-permutations"), $rjs_core.UString.make("list?"), 0, l1396);
    } else {
      var or_part1397 = M7.null_p(l1396);
      if (or_part1397 !== false) {
        var if_res805 = or_part1397;
      } else {
        var if_res805 = M7.null_p(M7.cdr(l1396));
      }
      if (if_res805 !== false) {
        var if_res812 = M9.__rjs_quoted__.in_value(l1396);
      } else {
        var N1398 = M7.length(l1396) - 2;
        if (M7.__gt_(N1398, 254) !== false) {
          var if_res806 = M7.error($rjs_core.Symbol.make("permutations"), $rjs_core.UString.make("input list too long: ~e"), l1396);
        } else {
          var if_res806 = M7.rvoid();
        }
        if_res806;
        var let_result807 = M7.values();
        var c1399 = M7.make_bytes(M7.add1(N1398), 0);
        var i1400 = 0;
        var cur1401 = M0.alt_reverse(l1396);
        var next1402 = function() {
          if (arguments.length !== 0) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          var r1403 = cur1401;
          var ci1404 = M7.bytes_ref(c1399, i1400);
          if (M7.__lt__eq_(ci1404, i1400) !== false) {
            M7.bytes_set_bang_(c1399, i1400, M7.add1(ci1404));
            var begin_res808 = swap_plus_flip(cur1401, ci1404, i1400);
            i1400 = 0;
            var if_res810 = begin_res808;
          } else {
            if (M7.__lt_(i1400, N1398) !== false) {
              M7.bytes_set_bang_(c1399, i1400, 0);
              i1400 = M7.add1(i1400);
              var if_res809 = next1402();
            } else {
              var if_res809 = false;
            }
            var if_res810 = if_res809;
          }
          return if_res810;
        };
        var if_res812 = M9.__rjs_quoted__.in_producer(function() {
          if (arguments.length !== 0) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          var begin_res811 = cur1401;
          cur1401 = next1402();
          return begin_res811;
        }, false);
      }
      var if_res813 = if_res812;
    }
    return if_res813;
  };
  var mk_min = function(cmp1405, name1406, f1407, xs1408) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.procedure_p(f1407) !== false) {
      var if_res814 = M7.procedure_arity_includes_p(f1407, 1);
    } else {
      var if_res814 = false;
    }
    if (if_res814 !== false) {
      var if_res815 = M7.rvoid();
    } else {
      var if_res815 = M7.raise_argument_error(name1406, $rjs_core.UString.make("(any/c . -> . real?)"), 0, f1407, xs1408);
    }
    if_res815;
    if (M7.list_p(xs1408) !== false) {
      var if_res816 = M7.pair_p(xs1408);
    } else {
      var if_res816 = false;
    }
    if (if_res816 !== false) {
      var if_res817 = M7.rvoid();
    } else {
      var if_res817 = M7.raise_argument_error(name1406, $rjs_core.UString.make("(and/c list? (not/c empty?))"), 1, f1407, xs1408);
    }
    if_res817;
    var init_min_var1409 = f1407(M7.car(xs1408));
    if (M7.real_p(init_min_var1409) !== false) {
      var if_res818 = M7.rvoid();
    } else {
      var if_res818 = M7.raise_result_error(name1406, $rjs_core.UString.make("real?"), init_min_var1409);
    }
    if_res818;
    var loop1410 = function(min1411, min_var1412, xs1413) {
      if (arguments.length !== 3) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.null_p(xs1413) !== false) {
        var if_res821 = min1411;
      } else {
        var new_min1414 = f1407(M7.car(xs1413));
        if (M7.real_p(new_min1414) !== false) {
          var if_res819 = M7.rvoid();
        } else {
          var if_res819 = M7.raise_result_error(name1406, $rjs_core.UString.make("real?"), new_min1414);
        }
        if_res819;
        if (cmp1405(new_min1414, min_var1412) !== false) {
          var if_res820 = loop1410(M7.car(xs1413), new_min1414, M7.cdr(xs1413));
        } else {
          var if_res820 = loop1410(min1411, min_var1412, M7.cdr(xs1413));
        }
        var if_res821 = if_res820;
      }
      return if_res821;
    };
    return loop1410(M7.car(xs1408), init_min_var1409, M7.cdr(xs1408));
  };
  var argmin = function(f1415, xs1416) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return mk_min(M7.__lt_, $rjs_core.Symbol.make("argmin"), f1415, xs1416);
  };
  var argmax = function(f1417, xs1418) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return mk_min(M7.__gt_, $rjs_core.Symbol.make("argmax"), f1417, xs1418);
  };
  var group_by611419 = function(key591420, l601421, __eq__p581422) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var key1423 = key591420;
    var l1424 = l601421;
    if (M7.eq_p(__eq__p581422, M11.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res822 = M7.equal_p;
    } else {
      var if_res822 = __eq__p581422;
    }
    var __eq__p1425 = if_res822;
    if (M7.procedure_p(key1423) !== false) {
      var if_res823 = M7.procedure_arity_includes_p(key1423, 1);
    } else {
      var if_res823 = false;
    }
    if (if_res823 !== false) {
      var if_res824 = M7.rvoid();
    } else {
      var if_res824 = M7.raise_argument_error($rjs_core.Symbol.make("group-by"), $rjs_core.UString.make("(-> any/c any/c)"), 0, key1423, l1424);
    }
    if_res824;
    var let_result825 = M7.values();
    if (M7.procedure_p(__eq__p1425) !== false) {
      var if_res826 = M7.procedure_arity_includes_p(__eq__p1425, 2);
    } else {
      var if_res826 = false;
    }
    if (if_res826 !== false) {
      var if_res827 = M7.rvoid();
    } else {
      var if_res827 = M7.raise_argument_error($rjs_core.Symbol.make("group-by"), $rjs_core.UString.make("(any/c any/c . -> . any/c)"), 2, key1423, l1424, __eq__p1425);
    }
    if_res827;
    var let_result828 = M7.values();
    if (M7.list_p(l1424) !== false) {
      var if_res829 = M7.rvoid();
    } else {
      var if_res829 = M7.raise_argument_error($rjs_core.Symbol.make("group-by"), $rjs_core.UString.make("list?"), 1, key1423, l1424);
    }
    if_res829;
    var let_result830 = M7.values();
    var alist_update1426 = function(al1427, k1428, up1429, fail1430) {
      if (arguments.length !== 4) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var loop1431 = function(al1432) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.null_p(al1432) !== false) {
          var if_res832 = M7.list(M7.cons(k1428, up1429($rjs_core.Pair.makeList())));
        } else {
          if (__eq__p1425(M7.car(M7.car(al1432)), k1428) !== false) {
            var if_res831 = M7.cons(M7.cons(k1428, up1429(M7.cdr(M7.car(al1432)))), M7.cdr(al1432));
          } else {
            var if_res831 = M7.cons(M7.car(al1432), loop1431(M7.cdr(al1432)));
          }
          var if_res832 = if_res831;
        }
        return if_res832;
      };
      return loop1431(al1427);
    };
    if (M7.equal_p(__eq__p1425, M7.eq_p) !== false) {
      var if_res835 = M7.values(M7.hasheq(), M2.hash_update);
    } else {
      if (M7.equal_p(__eq__p1425, M7.eqv_p) !== false) {
        var if_res834 = M7.values(M7.hasheqv(), M2.hash_update);
      } else {
        if (M7.equal_p(__eq__p1425, M7.equal_p) !== false) {
          var if_res833 = M7.values(M7.hash(), M2.hash_update);
        } else {
          var if_res833 = M7.values($rjs_core.Pair.makeList(), alist_update1426);
        }
        var if_res834 = if_res833;
      }
      var if_res835 = if_res834;
    }
    var let_result836 = if_res835;
    var base1433 = let_result836.getAt(0);
    var update1434 = let_result836.getAt(1);
    var lst1436 = l1424;
    var start1437 = 0;
    if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
      var if_res837 = M7.rvoid();
    } else {
      var if_res837 = M9.__rjs_quoted__.check_list(lst1436);
    }
    if_res837;
    if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
      var if_res838 = M7.rvoid();
    } else {
      var if_res838 = M9.__rjs_quoted__.check_naturals(start1437);
    }
    if_res838;
    var for_loop1438 = function(res1439, lst1440, pos1441) {
      if (arguments.length !== 3) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.pair_p(lst1440) !== false) {
        var if_res839 = true;
      } else {
        var if_res839 = false;
      }
      if (if_res839 !== false) {
        var elt1442 = M11.unsafe_car(lst1440);
        var rest1443 = M11.unsafe_cdr(lst1440);
        var idx1444 = pos1441;
        if (true !== false) {
          var if_res840 = true;
        } else {
          var if_res840 = false;
        }
        if (if_res840 !== false) {
          var res1446 = res1439;
          var k1448 = key1423(elt1442);
          var v1449 = M7.cons(idx1444, elt1442);
          var res1447 = update1434(res1446, k1448, function(o1450) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return M7.cons(v1449, o1450);
          }, $rjs_core.Pair.makeList());
          var res1445 = M7.values(res1447);
          if (true !== false) {
            if (true !== false) {
              var if_res841 = M7.not(false);
            } else {
              var if_res841 = false;
            }
            var if_res842 = if_res841;
          } else {
            var if_res842 = false;
          }
          if (if_res842 !== false) {
            var if_res843 = for_loop1438(res1445, rest1443, pos1441 + 1);
          } else {
            var if_res843 = res1445;
          }
          var if_res844 = if_res843;
        } else {
          var if_res844 = res1439;
        }
        var if_res845 = if_res844;
      } else {
        var if_res845 = res1439;
      }
      return if_res845;
    };
    var classes1435 = for_loop1438(base1433, lst1436, start1437);
    if (M7.list_p(classes1435) !== false) {
      var lst1452 = classes1435;
      if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
        var if_res846 = M7.rvoid();
      } else {
        var if_res846 = M9.__rjs_quoted__.check_list(lst1452);
      }
      if_res846;
      var for_loop1453 = function(fold_var1454, lst1455) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.pair_p(lst1455) !== false) {
          var p1456 = M11.unsafe_car(lst1455);
          var rest1457 = M11.unsafe_cdr(lst1455);
          if (true !== false) {
            var fold_var1459 = fold_var1454;
            var __dot__dot__dot_ects_by_racket_by_list_dot_rkt__318861461 = M1.__rjs_quoted__.sort9;
            var temp771462 = M7.cdr(p1456);
            var __lt_781463 = M7.__lt_;
            var car791464 = M7.car;
            if (M7.variable_reference_constant_p(M1.__rjs_quoted__.sort9) !== false) {
              var if_res847 = M1.__rjs_quoted__.sort7(false, car791464, temp771462, __lt_781463);
            } else {
              var if_res847 = M7.checked_procedure_check_and_extract(M3.__rjs_quoted__.struct_keyword_procedure, __dot__dot__dot_ects_by_racket_by_list_dot_rkt__318861461, M3.__rjs_quoted__.keyword_procedure_extract, $rjs_core.Pair.makeList($rjs_core.Keyword.make("key")), 4)($rjs_core.Pair.makeList($rjs_core.Keyword.make("key")), M7.list(car791464), temp771462, __lt_781463);
            }
            var fold_var1460 = M7.cons(if_res847, fold_var1459);
            var fold_var1458 = M7.values(fold_var1460);
            if (true !== false) {
              var if_res848 = M7.not(false);
            } else {
              var if_res848 = false;
            }
            if (if_res848 !== false) {
              var if_res849 = for_loop1453(fold_var1458, rest1457);
            } else {
              var if_res849 = fold_var1458;
            }
            var if_res850 = if_res849;
          } else {
            var if_res850 = fold_var1454;
          }
          var if_res851 = if_res850;
        } else {
          var if_res851 = fold_var1454;
        }
        return if_res851;
      };
      var if_res859 = M0.alt_reverse(for_loop1453(M7.rnull, lst1452));
    } else {
      var ht1465 = classes1435;
      if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
        var if_res852 = M7.rvoid();
      } else {
        var if_res852 = M9.__rjs_quoted__.check_in_hash(ht1465);
      }
      if_res852;
      var for_loop1466 = function(fold_var1467, i1468) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (i1468 !== false) {
          var let_result853 = M7.hash_iterate_key_plus_value(ht1465, i1468);
          var _1469 = let_result853.getAt(0);
          var c1470 = let_result853.getAt(1);
          if (true !== false) {
            var fold_var1472 = fold_var1467;
            var __dot__dot__dot_ects_by_racket_by_list_dot_rkt__319701474 = M1.__rjs_quoted__.sort9;
            var c801475 = c1470;
            var __lt_811476 = M7.__lt_;
            var car821477 = M7.car;
            if (M7.variable_reference_constant_p(M1.__rjs_quoted__.sort9) !== false) {
              var if_res854 = M1.__rjs_quoted__.sort7(false, car821477, c801475, __lt_811476);
            } else {
              var if_res854 = M7.checked_procedure_check_and_extract(M3.__rjs_quoted__.struct_keyword_procedure, __dot__dot__dot_ects_by_racket_by_list_dot_rkt__319701474, M3.__rjs_quoted__.keyword_procedure_extract, $rjs_core.Pair.makeList($rjs_core.Keyword.make("key")), 4)($rjs_core.Pair.makeList($rjs_core.Keyword.make("key")), M7.list(car821477), c801475, __lt_811476);
            }
            var fold_var1473 = M7.cons(if_res854, fold_var1472);
            var fold_var1471 = M7.values(fold_var1473);
            if (true !== false) {
              var if_res855 = M7.not(false);
            } else {
              var if_res855 = false;
            }
            if (if_res855 !== false) {
              var if_res856 = for_loop1466(fold_var1471, M7.hash_iterate_next(ht1465, i1468));
            } else {
              var if_res856 = fold_var1471;
            }
            var if_res857 = if_res856;
          } else {
            var if_res857 = fold_var1467;
          }
          var if_res858 = if_res857;
        } else {
          var if_res858 = fold_var1467;
        }
        return if_res858;
      };
      var if_res859 = M0.alt_reverse(for_loop1466(M7.rnull, M7.hash_iterate_first(ht1465)));
    }
    var sorted_classes1451 = if_res859;
    var __dot__dot__dot_ects_by_racket_by_list_dot_rkt__320871479 = M1.__rjs_quoted__.sort9;
    var sorted_classes831480 = sorted_classes1451;
    var __lt_841481 = M7.__lt_;
    var caar851482 = M7.caar;
    if (M7.variable_reference_constant_p(M1.__rjs_quoted__.sort9) !== false) {
      var if_res860 = M1.__rjs_quoted__.sort7(false, caar851482, sorted_classes831480, __lt_841481);
    } else {
      var if_res860 = M7.checked_procedure_check_and_extract(M3.__rjs_quoted__.struct_keyword_procedure, __dot__dot__dot_ects_by_racket_by_list_dot_rkt__320871479, M3.__rjs_quoted__.keyword_procedure_extract, $rjs_core.Pair.makeList($rjs_core.Keyword.make("key")), 4)($rjs_core.Pair.makeList($rjs_core.Keyword.make("key")), M7.list(caar851482), sorted_classes831480, __lt_841481);
    }
    var lst1478 = if_res860;
    if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
      var if_res861 = M7.rvoid();
    } else {
      var if_res861 = M9.__rjs_quoted__.check_list(lst1478);
    }
    if_res861;
    var for_loop1483 = function(fold_var1484, lst1485) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.pair_p(lst1485) !== false) {
        var c1486 = M11.unsafe_car(lst1485);
        var rest1487 = M11.unsafe_cdr(lst1485);
        if (true !== false) {
          var fold_var1489 = fold_var1484;
          var fold_var1490 = M7.cons(M4.map(M7.cdr, c1486), fold_var1489);
          var fold_var1488 = M7.values(fold_var1490);
          if (true !== false) {
            var if_res862 = M7.not(false);
          } else {
            var if_res862 = false;
          }
          if (if_res862 !== false) {
            var if_res863 = for_loop1483(fold_var1488, rest1487);
          } else {
            var if_res863 = fold_var1488;
          }
          var if_res864 = if_res863;
        } else {
          var if_res864 = fold_var1484;
        }
        var if_res865 = if_res864;
      } else {
        var if_res865 = fold_var1484;
      }
      return if_res865;
    };
    return M0.alt_reverse(for_loop1483(M7.rnull, lst1478));
  };
  var cl866 = function(key1491, l1492) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return group_by611419(key1491, l1492, M11.__rjs_quoted__.unsafe_undefined);
  };
  var cl867 = function(key1493, l1494, __eq__p581495) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return group_by611419(key1493, l1494, __eq__p581495);
  };
  var group_by = $rjs_core.attachProcedureArity(function() {
    var fixed_lam868 = {
      '2': cl866,
      '3': cl867
    }[arguments.length];
    if (fixed_lam868 !== undefined) {
      return fixed_lam868.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var cartesian_product = $rjs_core.attachProcedureArity(function() {
    for (var ls1496869 = [],
        $__5 = 0; $__5 < arguments.length; $__5++)
      ls1496869[$__5] = arguments[$__5];
    var ls1496 = $rjs_core.Pair.listFromArray(ls1496869);
    var let_result870 = M9.__rjs_quoted__.make_sequence($rjs_core.Pair.makeList($rjs_core.Symbol.make("l")), ls1496);
    var pos__gt_vals1497 = let_result870.getAt(0);
    var pos_pre_inc1498 = let_result870.getAt(1);
    var pos_next1499 = let_result870.getAt(2);
    var init1500 = let_result870.getAt(3);
    var pos_cont_p1501 = let_result870.getAt(4);
    var val_cont_p1502 = let_result870.getAt(5);
    var all_cont_p1503 = let_result870.getAt(6);
    var start1504 = 0;
    if (M7.rvoid() !== false) {
      if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
        var if_res871 = M7.rvoid();
      } else {
        var if_res871 = M9.__rjs_quoted__.check_naturals(start1504);
      }
      var if_res872 = if_res871;
    } else {
      var if_res872 = false;
    }
    if_res872;
    var for_loop1505 = function(pos1506, pos1507) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (pos_cont_p1501 !== false) {
        var if_res873 = pos_cont_p1501(pos1506);
      } else {
        var if_res873 = true;
      }
      if (if_res873 !== false) {
        var if_res874 = true;
      } else {
        var if_res874 = false;
      }
      if (if_res874 !== false) {
        var l1512 = pos__gt_vals1497(pos1506);
        if (all_cont_p1503 !== false) {
          var if_res875 = function(pos1513) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return all_cont_p1503(pos1513, l1512);
          };
        } else {
          var if_res875 = false;
        }
        var let_result876 = M7.values(l1512, if_res875);
        var l1508 = let_result876.getAt(0);
        var all_cont_p_by_pos1509 = let_result876.getAt(1);
        if (pos_pre_inc1498 !== false) {
          var if_res877 = pos_pre_inc1498(pos1506);
        } else {
          var if_res877 = pos1506;
        }
        var pos1510 = if_res877;
        var i1511 = pos1507;
        if (val_cont_p1502 !== false) {
          var if_res878 = val_cont_p1502(l1508);
        } else {
          var if_res878 = true;
        }
        if (if_res878 !== false) {
          var if_res879 = true;
        } else {
          var if_res879 = false;
        }
        if (if_res879 !== false) {
          if (M7.list_p(l1508) !== false) {
            var if_res880 = M7.rvoid();
          } else {
            var if_res880 = M7.apply(M7.raise_argument_error, $rjs_core.Symbol.make("cartesian-product"), $rjs_core.UString.make("list?"), i1511, ls1496);
          }
          if_res880;
          var let_result881 = M7.values();
          var let_result882 = M7.values();
          if (all_cont_p_by_pos1509 !== false) {
            var if_res883 = all_cont_p_by_pos1509(pos1510);
          } else {
            var if_res883 = true;
          }
          if (if_res883 !== false) {
            var if_res884 = true;
          } else {
            var if_res884 = false;
          }
          if (if_res884 !== false) {
            var if_res885 = M7.not(false);
          } else {
            var if_res885 = false;
          }
          if (if_res885 !== false) {
            var if_res886 = for_loop1505(pos_next1499(pos1510), pos1507 + 1);
          } else {
            var if_res886 = M7.values();
          }
          var if_res887 = if_res886;
        } else {
          var if_res887 = M7.values();
        }
        var if_res888 = if_res887;
      } else {
        var if_res888 = M7.values();
      }
      return if_res888;
    };
    for_loop1505(init1500, start1504);
    var let_result889 = M7.values();
    M7.rvoid();
    var let_result890 = M7.values();
    var cp_21514 = function(as1515, bs1516) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var lst1517 = as1515;
      if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
        var if_res891 = M7.rvoid();
      } else {
        var if_res891 = M9.__rjs_quoted__.check_list(lst1517);
      }
      if_res891;
      var for_loop1518 = function(fold_var1519, lst1520) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M7.pair_p(lst1520) !== false) {
          var i1521 = M11.unsafe_car(lst1520);
          var rest1522 = M11.unsafe_cdr(lst1520);
          if (true !== false) {
            var lst1524 = bs1516;
            if (M7.variable_reference_from_unsafe_p(M8.__rjs_quoted__.___variable_reference) !== false) {
              var if_res892 = M7.rvoid();
            } else {
              var if_res892 = M9.__rjs_quoted__.check_list(lst1524);
            }
            if_res892;
            var for_loop1525 = function(fold_var1526, lst1527) {
              if (arguments.length !== 2) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              if (M7.pair_p(lst1527) !== false) {
                var j1528 = M11.unsafe_car(lst1527);
                var rest1529 = M11.unsafe_cdr(lst1527);
                if (true !== false) {
                  var fold_var1531 = fold_var1526;
                  var fold_var1532 = M7.cons(M7.cons(i1521, j1528), fold_var1531);
                  var fold_var1530 = M7.values(fold_var1532);
                  if (true !== false) {
                    var if_res893 = M7.not(false);
                  } else {
                    var if_res893 = false;
                  }
                  if (if_res893 !== false) {
                    var if_res894 = for_loop1525(fold_var1530, rest1529);
                  } else {
                    var if_res894 = fold_var1530;
                  }
                  var if_res895 = if_res894;
                } else {
                  var if_res895 = fold_var1526;
                }
                var if_res896 = if_res895;
              } else {
                var if_res896 = fold_var1526;
              }
              return if_res896;
            };
            var fold_var1523 = for_loop1525(fold_var1519, lst1524);
            if (true !== false) {
              var if_res897 = M7.not(false);
            } else {
              var if_res897 = false;
            }
            if (if_res897 !== false) {
              var if_res898 = for_loop1518(fold_var1523, rest1522);
            } else {
              var if_res898 = fold_var1523;
            }
            var if_res899 = if_res898;
          } else {
            var if_res899 = fold_var1519;
          }
          var if_res900 = if_res899;
        } else {
          var if_res900 = fold_var1519;
        }
        return if_res900;
      };
      return M0.alt_reverse(for_loop1518(M7.rnull, lst1517));
    };
    return M1.foldr(cp_21514, M7.list(M7.list()), ls1496);
  });
  var remf = function(f1533, ls1534) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(ls1534) !== false) {
      var if_res901 = M7.rvoid();
    } else {
      var if_res901 = M7.raise_argument_error($rjs_core.Symbol.make("remf"), $rjs_core.UString.make("list?"), 1, f1533, ls1534);
    }
    if_res901;
    if (M7.procedure_p(f1533) !== false) {
      var if_res902 = M7.procedure_arity_includes_p(f1533, 1);
    } else {
      var if_res902 = false;
    }
    if (if_res902 !== false) {
      var if_res903 = M7.rvoid();
    } else {
      var if_res903 = M7.raise_argument_error($rjs_core.Symbol.make("remf"), $rjs_core.UString.make("(-> any/c any/c)"), 0, f1533, ls1534);
    }
    if_res903;
    if (M7.null_p(ls1534) !== false) {
      var if_res905 = $rjs_core.Pair.makeList();
    } else {
      if (f1533(M7.car(ls1534)) !== false) {
        var if_res904 = M7.cdr(ls1534);
      } else {
        var if_res904 = M7.cons(M7.car(ls1534), remf(f1533, M7.cdr(ls1534)));
      }
      var if_res905 = if_res904;
    }
    return if_res905;
  };
  var remf_times_ = function(f1535, ls1536) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(ls1536) !== false) {
      var if_res906 = M7.rvoid();
    } else {
      var if_res906 = M7.raise_argument_error($rjs_core.Symbol.make("remf*"), $rjs_core.UString.make("list?"), 1, f1535, ls1536);
    }
    if_res906;
    if (M7.procedure_p(f1535) !== false) {
      var if_res907 = M7.procedure_arity_includes_p(f1535, 1);
    } else {
      var if_res907 = false;
    }
    if (if_res907 !== false) {
      var if_res908 = M7.rvoid();
    } else {
      var if_res908 = M7.raise_argument_error($rjs_core.Symbol.make("remf*"), $rjs_core.UString.make("(-> any/c any/c)"), 0, f1535, ls1536);
    }
    if_res908;
    if (M7.null_p(ls1536) !== false) {
      var if_res910 = $rjs_core.Pair.makeList();
    } else {
      if (f1535(M7.car(ls1536)) !== false) {
        var if_res909 = remf_times_(f1535, M7.cdr(ls1536));
      } else {
        var if_res909 = M7.cons(M7.car(ls1536), remf_times_(f1535, M7.cdr(ls1536)));
      }
      var if_res910 = if_res909;
    }
    return if_res910;
  };
  var index_of661537 = function(ls641538, v651539, __eq__p631540) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var ls1541 = ls641538;
    var v1542 = v651539;
    if (M7.eq_p(__eq__p631540, M11.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res911 = M7.equal_p;
    } else {
      var if_res911 = __eq__p631540;
    }
    var __eq__p1543 = if_res911;
    if (M7.list_p(ls1541) !== false) {
      var if_res912 = M7.rvoid();
    } else {
      var if_res912 = M7.raise_argument_error($rjs_core.Symbol.make("index-of"), $rjs_core.UString.make("list?"), 0, ls1541, v1542);
    }
    if_res912;
    if (M7.procedure_p(__eq__p1543) !== false) {
      var if_res913 = M7.procedure_arity_includes_p(__eq__p1543, 2);
    } else {
      var if_res913 = false;
    }
    if (if_res913 !== false) {
      var if_res914 = M7.rvoid();
    } else {
      var if_res914 = M7.raise_argument_error($rjs_core.Symbol.make("index-of"), $rjs_core.UString.make("(-> any/c any/c any/c)"), 2, ls1541, v1542, __eq__p1543);
    }
    if_res914;
    var loop1544 = function(ls1545, i1546) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.null_p(ls1545) !== false) {
        var if_res916 = false;
      } else {
        if (__eq__p1543(M7.car(ls1545), v1542) !== false) {
          var if_res915 = i1546;
        } else {
          var if_res915 = loop1544(M7.cdr(ls1545), M7.add1(i1546));
        }
        var if_res916 = if_res915;
      }
      return if_res916;
    };
    return loop1544(ls1541, 0);
  };
  var cl917 = function(ls1547, v1548) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return index_of661537(ls1547, v1548, M11.__rjs_quoted__.unsafe_undefined);
  };
  var cl918 = function(ls1549, v1550, __eq__p631551) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return index_of661537(ls1549, v1550, __eq__p631551);
  };
  var index_of = $rjs_core.attachProcedureArity(function() {
    var fixed_lam919 = {
      '2': cl917,
      '3': cl918
    }[arguments.length];
    if (fixed_lam919 !== undefined) {
      return fixed_lam919.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var index_where = function(ls1552, f1553) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(ls1552) !== false) {
      var if_res920 = M7.rvoid();
    } else {
      var if_res920 = M7.raise_argument_error($rjs_core.Symbol.make("index-where"), $rjs_core.UString.make("list?"), 0, ls1552, f1553);
    }
    if_res920;
    if (M7.procedure_p(f1553) !== false) {
      var if_res921 = M7.procedure_arity_includes_p(f1553, 1);
    } else {
      var if_res921 = false;
    }
    if (if_res921 !== false) {
      var if_res922 = M7.rvoid();
    } else {
      var if_res922 = M7.raise_argument_error($rjs_core.Symbol.make("index-where"), $rjs_core.UString.make("(-> any/c any/c)"), 1, ls1552, f1553);
    }
    if_res922;
    var loop1554 = function(ls1555, i1556) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.null_p(ls1555) !== false) {
        var if_res924 = false;
      } else {
        if (f1553(M7.car(ls1555)) !== false) {
          var if_res923 = i1556;
        } else {
          var if_res923 = loop1554(M7.cdr(ls1555), M7.add1(i1556));
        }
        var if_res924 = if_res923;
      }
      return if_res924;
    };
    return loop1554(ls1552, 0);
  };
  var indexes_of711557 = function(ls691558, v701559, __eq__p681560) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var ls1561 = ls691558;
    var v1562 = v701559;
    if (M7.eq_p(__eq__p681560, M11.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res925 = M7.equal_p;
    } else {
      var if_res925 = __eq__p681560;
    }
    var __eq__p1563 = if_res925;
    if (M7.list_p(ls1561) !== false) {
      var if_res926 = M7.rvoid();
    } else {
      var if_res926 = M7.raise_argument_error($rjs_core.Symbol.make("indexes-of"), $rjs_core.UString.make("list?"), 0, ls1561, v1562);
    }
    if_res926;
    if (M7.procedure_p(__eq__p1563) !== false) {
      var if_res927 = M7.procedure_arity_includes_p(__eq__p1563, 2);
    } else {
      var if_res927 = false;
    }
    if (if_res927 !== false) {
      var if_res928 = M7.rvoid();
    } else {
      var if_res928 = M7.raise_argument_error($rjs_core.Symbol.make("indexes-of"), $rjs_core.UString.make("(-> any/c any/c any/c)"), 2, ls1561, v1562, __eq__p1563);
    }
    if_res928;
    var loop1564 = function(ls1565, i1566) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.null_p(ls1565) !== false) {
        var if_res930 = $rjs_core.Pair.makeList();
      } else {
        if (__eq__p1563(M7.car(ls1565), v1562) !== false) {
          var if_res929 = M7.cons(i1566, loop1564(M7.cdr(ls1565), M7.add1(i1566)));
        } else {
          var if_res929 = loop1564(M7.cdr(ls1565), M7.add1(i1566));
        }
        var if_res930 = if_res929;
      }
      return if_res930;
    };
    return loop1564(ls1561, 0);
  };
  var cl931 = function(ls1567, v1568) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return indexes_of711557(ls1567, v1568, M11.__rjs_quoted__.unsafe_undefined);
  };
  var cl932 = function(ls1569, v1570, __eq__p681571) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return indexes_of711557(ls1569, v1570, __eq__p681571);
  };
  var indexes_of = $rjs_core.attachProcedureArity(function() {
    var fixed_lam933 = {
      '2': cl931,
      '3': cl932
    }[arguments.length];
    if (fixed_lam933 !== undefined) {
      return fixed_lam933.apply(null, arguments);
    } else {
      return M7.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var indexes_where = function(ls1572, f1573) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M7.list_p(ls1572) !== false) {
      var if_res934 = M7.rvoid();
    } else {
      var if_res934 = M7.raise_argument_error($rjs_core.Symbol.make("indexes-where"), $rjs_core.UString.make("list?"), 0, ls1572, f1573);
    }
    if_res934;
    if (M7.procedure_p(f1573) !== false) {
      var if_res935 = M7.procedure_arity_includes_p(f1573, 1);
    } else {
      var if_res935 = false;
    }
    if (if_res935 !== false) {
      var if_res936 = M7.rvoid();
    } else {
      var if_res936 = M7.raise_argument_error($rjs_core.Symbol.make("indexes-where"), $rjs_core.UString.make("(-> any/c any/c)"), 1, ls1572, f1573);
    }
    if_res936;
    var loop1574 = function(ls1575, i1576) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M7.null_p(ls1575) !== false) {
        var if_res938 = $rjs_core.Pair.makeList();
      } else {
        if (f1573(M7.car(ls1575)) !== false) {
          var if_res937 = M7.cons(i1576, loop1574(M7.cdr(ls1575), M7.add1(i1576)));
        } else {
          var if_res937 = loop1574(M7.cdr(ls1575), M7.add1(i1576));
        }
        var if_res938 = if_res937;
      }
      return if_res938;
    };
    return loop1574(ls1572, 0);
  };
  var __rjs_quoted__ = {};
  __rjs_quoted__.check_duplicates49 = check_duplicates49;
  __rjs_quoted__.add_between31 = add_between31;
  __rjs_quoted__.remove_duplicates40 = remove_duplicates40;
  __rjs_quoted__.add_between33 = add_between33;
  __rjs_quoted__.remove_duplicates38 = remove_duplicates38;
  __rjs_quoted__.check_duplicates47 = check_duplicates47;
  __rjs_quoted__.range_proc = range_proc;
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get remf_times_() {
      return remf_times_;
    },
    get remf() {
      return remf;
    },
    get cartesian_product() {
      return cartesian_product;
    },
    get group_by() {
      return group_by;
    },
    get argmax() {
      return argmax;
    },
    get argmin() {
      return argmin;
    },
    get in_permutations() {
      return in_permutations;
    },
    get permutations() {
      return permutations;
    },
    get in_combinations() {
      return in_combinations;
    },
    get combinations() {
      return combinations;
    },
    get shuffle() {
      return shuffle;
    },
    get filter_not() {
      return filter_not;
    },
    get append_map() {
      return append_map;
    },
    get partition() {
      return partition;
    },
    get count() {
      return count;
    },
    get filter_map() {
      return filter_map;
    },
    get flatten() {
      return flatten;
    },
    get append_times_() {
      return append_times_;
    },
    get drop_common_prefix() {
      return drop_common_prefix;
    },
    get take_common_prefix() {
      return take_common_prefix;
    },
    get split_common_prefix() {
      return split_common_prefix;
    },
    get list_prefix_p() {
      return list_prefix_p;
    },
    get splitf_at_right() {
      return splitf_at_right;
    },
    get dropf_right() {
      return dropf_right;
    },
    get takef_right() {
      return takef_right;
    },
    get split_at_right() {
      return split_at_right;
    },
    get take_right() {
      return take_right;
    },
    get drop_right() {
      return drop_right;
    },
    get splitf_at() {
      return splitf_at;
    },
    get dropf() {
      return dropf;
    },
    get takef() {
      return takef;
    },
    get split_at() {
      return split_at;
    },
    get take() {
      return take;
    },
    get drop() {
      return drop;
    },
    get indexes_where() {
      return indexes_where;
    },
    get indexes_of() {
      return indexes_of;
    },
    get index_where() {
      return index_where;
    },
    get index_of() {
      return index_of;
    },
    get list_set() {
      return list_set;
    },
    get list_update() {
      return list_update;
    },
    get make_list() {
      return make_list;
    },
    get empty() {
      return empty;
    },
    get rest() {
      return rest;
    },
    get last() {
      return last;
    },
    get last_pair() {
      return last_pair;
    },
    get tenth() {
      return tenth;
    },
    get ninth() {
      return ninth;
    },
    get eighth() {
      return eighth;
    },
    get seventh() {
      return seventh;
    },
    get sixth() {
      return sixth;
    },
    get fifth() {
      return fifth;
    },
    get fourth() {
      return fourth;
    },
    get third() {
      return third;
    },
    get second() {
      return second;
    },
    get first() {
      return first;
    }
  };
})();
var $__collects_47_waxeye_47_ast_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/waxeye/ast.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__collects_47_racket_47_private_47_map_46_rkt_46_js__;
  var M1 = $__runtime_47_kernel_46_rkt_46_js__;
  var M2 = $__collects_47_racket_47_list_46_rkt_46_js__;
  var M3 = $__runtime_47_unsafe_46_rkt_46_js__;
  var let_result365 = M1.make_struct_type($rjs_core.Symbol.make("ast"), false, 3, 0, false, M1.rnull, M1.current_inspector(), false, $rjs_core.Pair.makeList(), false, $rjs_core.Symbol.make("ast"));
  var struct_661 = let_result365.getAt(0);
  var make_662 = let_result365.getAt(1);
  var __p663 = let_result365.getAt(2);
  var __ref664 = let_result365.getAt(3);
  var __set_bang_665 = let_result365.getAt(4);
  var let_result366 = M1.values(struct_661, make_662, __p663, M1.make_struct_field_accessor(__ref664, 0, $rjs_core.Symbol.make("t")), M1.make_struct_field_accessor(__ref664, 1, $rjs_core.Symbol.make("c")), M1.make_struct_field_accessor(__ref664, 2, $rjs_core.Symbol.make("pos")), M1.make_struct_field_mutator(__set_bang_665, 0, $rjs_core.Symbol.make("t")), M1.make_struct_field_mutator(__set_bang_665, 1, $rjs_core.Symbol.make("c")), M1.make_struct_field_mutator(__set_bang_665, 2, $rjs_core.Symbol.make("pos")));
  var struct_ast = let_result366.getAt(0);
  var ast1 = let_result366.getAt(1);
  var ast_p = let_result366.getAt(2);
  var ast_t = let_result366.getAt(3);
  var ast_c = let_result366.getAt(4);
  var ast_pos = let_result366.getAt(5);
  var set_ast_t_bang_ = let_result366.getAt(6);
  var set_ast_c_bang_ = let_result366.getAt(7);
  var set_ast_pos_bang_ = let_result366.getAt(8);
  var let_result367 = M1.make_struct_type($rjs_core.Symbol.make("parse-error"), false, 6, 0, false, M1.rnull, M1.current_inspector(), false, $rjs_core.Pair.makeList(0, 1, 2, 3, 4, 5), false, $rjs_core.Symbol.make("parse-error"));
  var struct_666 = let_result367.getAt(0);
  var make_667 = let_result367.getAt(1);
  var __p668 = let_result367.getAt(2);
  var __ref669 = let_result367.getAt(3);
  var __set_bang_670 = let_result367.getAt(4);
  var let_result368 = M1.values(struct_666, make_667, __p668, M1.make_struct_field_accessor(__ref669, 0, $rjs_core.Symbol.make("pos")), M1.make_struct_field_accessor(__ref669, 1, $rjs_core.Symbol.make("line")), M1.make_struct_field_accessor(__ref669, 2, $rjs_core.Symbol.make("col")), M1.make_struct_field_accessor(__ref669, 3, $rjs_core.Symbol.make("expected")), M1.make_struct_field_accessor(__ref669, 4, $rjs_core.Symbol.make("received")), M1.make_struct_field_accessor(__ref669, 5, $rjs_core.Symbol.make("snippet")));
  var struct_parse_error = let_result368.getAt(0);
  var parse_error2 = let_result368.getAt(1);
  var parse_error_p = let_result368.getAt(2);
  var parse_error_pos = let_result368.getAt(3);
  var parse_error_line = let_result368.getAt(4);
  var parse_error_col = let_result368.getAt(5);
  var parse_error_expected = let_result368.getAt(6);
  var parse_error_received = let_result368.getAt(7);
  var parse_error_snippet = let_result368.getAt(8);
  var ast__gt_string = function(ast671) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var indent_level672 = 0;
    var o673 = M1.open_output_string();
    var display_a674 = function(c677) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M1.__gt_(indent_level672, 0) !== false) {
        var if_res369 = M1.display($rjs_core.UString.make("->  "), o673);
      } else {
        var if_res369 = M1.rvoid();
      }
      if_res369;
      M1.display(ast_t(c677), o673);
      indent_level672 = indent_level672 + 1;
      M0.for_each(function(a678) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        M1.newline(o673);
        return display_iter676(a678);
      }, ast_c(c677));
      indent_level672 = indent_level672 - 1;
      return null;
    };
    var display_c675 = function(c679) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M1.__gt_(indent_level672, 0) !== false) {
        var if_res370 = M1.display($rjs_core.UString.make("|   "), o673);
      } else {
        var if_res370 = M1.rvoid();
      }
      if_res370;
      return M1.display(c679, o673);
    };
    var display_iter676 = function(ast680) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var or_part681 = M1.char_p(ast680);
      if (or_part681 !== false) {
        var if_res371 = or_part681;
      } else {
        var if_res371 = ast_p(ast680);
      }
      if (if_res371 !== false) {
        var loop682 = function(i683) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          if (M1.__lt_(i683, indent_level672) !== false) {
            M1.display($rjs_core.UString.make("    "), o673);
            var if_res372 = loop682(i683 + 1);
          } else {
            var if_res372 = M1.rvoid();
          }
          return if_res372;
        };
        loop682(1);
        if (M1.char_p(ast680) !== false) {
          var if_res373 = display_c675(ast680);
        } else {
          var if_res373 = display_a674(ast680);
        }
        var if_res374 = if_res373;
      } else {
        var if_res374 = M1.rvoid();
      }
      return if_res374;
    };
    display_iter676(ast671);
    return M1.get_output_string(o673);
  };
  var display_ast = function(ast684) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (ast_p(ast684) !== false) {
      var if_res376 = ast__gt_string(ast684);
    } else {
      if (parse_error_p(ast684) !== false) {
        var if_res375 = parse_error__gt_string(ast684);
      } else {
        var if_res375 = ast684;
      }
      var if_res376 = if_res375;
    }
    M1.display(if_res376);
    return M1.newline();
  };
  var ast__gt_string_sexpr = function(ast685) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var o686 = M1.open_output_string();
    var display_iter687 = function(ast688) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      M1.display($rjs_core.UString.make("("), o686);
      M1.display(ast_t(ast688), o686);
      M0.for_each(function(a689) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        M1.display($rjs_core.UString.make(" "), o686);
        if (ast_p(a689) !== false) {
          var if_res377 = display_iter687(a689);
        } else {
          var if_res377 = M1.display(a689, o686);
        }
        return if_res377;
      }, ast_c(ast688));
      return M1.display($rjs_core.UString.make(")"), o686);
    };
    display_iter687(ast685);
    return M1.get_output_string(o686);
  };
  var parse_error__gt_string = function(error690) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var comma_separate691 = function(l692) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var temp5693 = M0.map(M1.symbol__gt_string, l692);
      var temp6694 = $rjs_core.UString.make(", ");
      if (M1.variable_reference_constant_p(M2.__rjs_quoted__.add_between33) !== false) {
        var if_res378 = M2.__rjs_quoted__.add_between31($rjs_core.Pair.makeList(), $rjs_core.Pair.makeList(), M3.__rjs_quoted__.unsafe_undefined, false, temp5693, temp6694);
      } else {
        var if_res378 = M2.__rjs_quoted__.add_between33(temp5693, temp6694);
      }
      return M1.apply(M1.string_append, if_res378);
    };
    var expected695 = function(nts696) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var len697 = M1.length(nts696);
      if (M1.__eq_(len697, 0) !== false) {
        var if_res379 = $rjs_core.UString.make("<end of input>");
      } else {
        var if_res379 = M1.string_append($rjs_core.UString.make("["), comma_separate691(nts696), $rjs_core.UString.make("]"));
      }
      return if_res379;
    };
    var temp384 = M1.number__gt_string(parse_error_line(error690));
    var temp383 = $rjs_core.UString.make(":");
    var temp382 = M1.number__gt_string(parse_error_col(error690));
    var temp381 = $rjs_core.UString.make(" expected: ");
    var temp7698 = parse_error_expected(error690);
    if (M1.variable_reference_constant_p(M2.__rjs_quoted__.remove_duplicates40) !== false) {
      var if_res380 = M2.__rjs_quoted__.remove_duplicates38(false, temp7698, M3.__rjs_quoted__.unsafe_undefined);
    } else {
      var if_res380 = M2.__rjs_quoted__.remove_duplicates40(temp7698);
    }
    return M1.string_append(temp384, temp383, temp382, temp381, expected695(if_res380), $rjs_core.UString.make(" received: "), parse_error_received(error690), $rjs_core.UString.make("\n"), parse_error_snippet(error690));
  };
  var display_parse_error = function(error699) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    M1.display(parse_error__gt_string(error699));
    return M1.newline();
  };
  var __rjs_quoted__ = {};
  __rjs_quoted__.parse_error_snippet = parse_error_snippet;
  __rjs_quoted__.parse_error_received = parse_error_received;
  __rjs_quoted__.set_ast_c_bang_ = set_ast_c_bang_;
  __rjs_quoted__.parse_error_pos = parse_error_pos;
  __rjs_quoted__.set_ast_t_bang_ = set_ast_t_bang_;
  __rjs_quoted__.ast_t = ast_t;
  __rjs_quoted__.ast_c = ast_c;
  __rjs_quoted__.ast1 = ast1;
  __rjs_quoted__.ast_p = ast_p;
  __rjs_quoted__.parse_error_col = parse_error_col;
  __rjs_quoted__.struct_ast = struct_ast;
  __rjs_quoted__.struct_parse_error = struct_parse_error;
  __rjs_quoted__.parse_error_line = parse_error_line;
  __rjs_quoted__.ast_pos = ast_pos;
  __rjs_quoted__.parse_error2 = parse_error2;
  __rjs_quoted__.parse_error_p = parse_error_p;
  __rjs_quoted__.set_ast_pos_bang_ = set_ast_pos_bang_;
  __rjs_quoted__.parse_error_expected = parse_error_expected;
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get ast_t() {
      return ast_t;
    },
    get parse_error_received() {
      return parse_error_received;
    },
    get parse_error__gt_string() {
      return parse_error__gt_string;
    },
    get display_parse_error() {
      return display_parse_error;
    },
    get set_ast_pos_bang_() {
      return set_ast_pos_bang_;
    },
    get ast_c() {
      return ast_c;
    },
    get ast_pos() {
      return ast_pos;
    },
    get struct_ast() {
      return struct_ast;
    },
    get parse_error_snippet() {
      return parse_error_snippet;
    },
    get parse_error_pos() {
      return parse_error_pos;
    },
    get ast_p() {
      return ast_p;
    },
    get parse_error_col() {
      return parse_error_col;
    },
    get set_ast_t_bang_() {
      return set_ast_t_bang_;
    },
    get ast__gt_string_sexpr() {
      return ast__gt_string_sexpr;
    },
    get ast__gt_string() {
      return ast__gt_string;
    },
    get parse_error_p() {
      return parse_error_p;
    },
    get parse_error_expected() {
      return parse_error_expected;
    },
    get parse_error_line() {
      return parse_error_line;
    },
    get struct_parse_error() {
      return struct_parse_error;
    },
    get display_ast() {
      return display_ast;
    },
    get set_ast_c_bang_() {
      return set_ast_c_bang_;
    }
  };
})();
var $__collects_47_waxeye_47_parser_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/waxeye/parser.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__collects_47_waxeye_47_fa_46_rkt_46_js__;
  var M1 = $__collects_47_waxeye_47_set_46_rkt_46_js__;
  var M2 = $__collects_47_waxeye_47_ast_46_rkt_46_js__;
  var M3 = $__runtime_47_kernel_46_rkt_46_js__;
  var let_result1118 = M3.make_struct_type($rjs_core.Symbol.make("cache-item"), false, 5, 0, false, M3.rnull, M3.current_inspector(), false, $rjs_core.Pair.makeList(0, 1, 2, 3, 4), false, $rjs_core.Symbol.make("cache-item"));
  var struct_1803 = let_result1118.getAt(0);
  var make_1804 = let_result1118.getAt(1);
  var __p1805 = let_result1118.getAt(2);
  var __ref1806 = let_result1118.getAt(3);
  var __set_bang_1807 = let_result1118.getAt(4);
  var let_result1119 = M3.values(struct_1803, make_1804, __p1805, M3.make_struct_field_accessor(__ref1806, 0, $rjs_core.Symbol.make("val")), M3.make_struct_field_accessor(__ref1806, 1, $rjs_core.Symbol.make("pos")), M3.make_struct_field_accessor(__ref1806, 2, $rjs_core.Symbol.make("line")), M3.make_struct_field_accessor(__ref1806, 3, $rjs_core.Symbol.make("col")), M3.make_struct_field_accessor(__ref1806, 4, $rjs_core.Symbol.make("cr")));
  var struct_cache_item = let_result1119.getAt(0);
  var cache_item1 = let_result1119.getAt(1);
  var cache_item_p = let_result1119.getAt(2);
  var cache_item_val = let_result1119.getAt(3);
  var cache_item_pos = let_result1119.getAt(4);
  var cache_item_line = let_result1119.getAt(5);
  var cache_item_col = let_result1119.getAt(6);
  var cache_item_cr = let_result1119.getAt(7);
  var make_parser = function(start1808, eof_check1809, automata1810) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return function(input1811) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var input_len1812 = M3.string_length(input1811);
      var input_pos1813 = 0;
      var line1814 = 1;
      var column1815 = 0;
      var last_cr1816 = false;
      var error_pos1817 = 0;
      var error_line1818 = 1;
      var error_col1819 = 0;
      var error_expected1820 = $rjs_core.Pair.makeList();
      var fa_stack1821 = $rjs_core.Pair.makeList();
      var cache1822 = M3.make_hash();
      var match_automaton1823 = function(index1831) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        var key1832 = M3.cons(index1831, input_pos1813);
        var value1833 = M3.hash_ref(cache1822, key1832, false);
        if (value1833 !== false) {
          restore_pos1828(cache_item_pos(value1833), cache_item_line(value1833), cache_item_col(value1833), cache_item_cr(value1833));
          var if_res1129 = cache_item_val(value1833);
        } else {
          var automaton1834 = M3.vector_ref(automata1810, index1831);
          var type1835 = M0.fa_type(automaton1834);
          var states1836 = M0.fa_states(automaton1834);
          var automaton_mode1837 = M0.fa_mode(automaton1834);
          fa_stack1821 = M3.cons(M3.cons(automaton1834, false), fa_stack1821);
          var start_pos1839 = input_pos1813;
          var start_line1840 = line1814;
          var start_col1841 = column1815;
          var start_cr1842 = last_cr1816;
          var res1843 = match_state1824(M3.vector_ref(states1836, 0));
          if (M3.equal_p(type1835, $rjs_core.Symbol.make("&")) !== false) {
            restore_pos1828(start_pos1839, start_line1840, start_col1841, start_cr1842);
            var if_res1128 = M3.not(M3.not(res1843));
          } else {
            if (M3.equal_p(type1835, $rjs_core.Symbol.make("!")) !== false) {
              restore_pos1828(start_pos1839, start_line1840, start_col1841, start_cr1842);
              if (res1843 !== false) {
                var if_res1120 = update_error1830();
              } else {
                var if_res1120 = true;
              }
              var if_res1127 = if_res1120;
            } else {
              if (res1843 !== false) {
                var tmp1844 = automaton_mode1837;
                if (M3.equal_p(tmp1844, $rjs_core.Symbol.make("voidArrow")) !== false) {
                  var if_res1125 = true;
                } else {
                  if (M3.equal_p(tmp1844, $rjs_core.Symbol.make("pruneArrow")) !== false) {
                    if (M3.null_p(res1843) !== false) {
                      var if_res1122 = true;
                    } else {
                      if (M3.null_p(M3.cdr(res1843)) !== false) {
                        var if_res1121 = M3.car(res1843);
                      } else {
                        var if_res1121 = M2.__rjs_quoted__.ast1(type1835, res1843, M3.cons(start_pos1839, input_pos1813));
                      }
                      var if_res1122 = if_res1121;
                    }
                    var if_res1124 = if_res1122;
                  } else {
                    if (M3.equal_p(tmp1844, $rjs_core.Symbol.make("leftArrow")) !== false) {
                      var if_res1123 = M2.__rjs_quoted__.ast1(type1835, res1843, M3.cons(start_pos1839, input_pos1813));
                    } else {
                      var if_res1123 = M3.error($rjs_core.Symbol.make("waxeye"), $rjs_core.UString.make("Unknown automaton mode"));
                    }
                    var if_res1124 = if_res1123;
                  }
                  var if_res1125 = if_res1124;
                }
                var if_res1126 = if_res1125;
              } else {
                var if_res1126 = update_error1830();
              }
              var if_res1127 = if_res1126;
            }
            var if_res1128 = if_res1127;
          }
          var v1838 = if_res1128;
          fa_stack1821 = M3.cdr(fa_stack1821);
          M3.hash_set_bang_(cache1822, key1832, cache_item1(v1838, input_pos1813, line1814, column1815, last_cr1816));
          var if_res1129 = v1838;
        }
        return if_res1129;
      };
      var match_state1824 = function(state1845) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        var res1846 = match_edges1825(M0.state_edges(state1845));
        if (res1846 !== false) {
          var if_res1131 = res1846;
        } else {
          if (M0.state_match(state1845) !== false) {
            var if_res1130 = $rjs_core.Pair.makeList();
          } else {
            var if_res1130 = false;
          }
          var if_res1131 = if_res1130;
        }
        return if_res1131;
      };
      var match_edges1825 = function(edges1847) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M3.null_p(edges1847) !== false) {
          var if_res1133 = false;
        } else {
          var res1848 = match_edge1826(M3.car(edges1847));
          if (res1848 !== false) {
            var if_res1132 = res1848;
          } else {
            var if_res1132 = match_edges1825(M3.cdr(edges1847));
          }
          var if_res1133 = if_res1132;
        }
        return if_res1133;
      };
      var match_edge1826 = function(edge1849) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        var start_pos1850 = input_pos1813;
        var start_line1851 = line1814;
        var start_col1852 = column1815;
        var start_cr1853 = last_cr1816;
        var t1854 = M0.edge_t(edge1849);
        if (M3.equal_p($rjs_core.Symbol.make("wild"), t1854) !== false) {
          if (M3.__lt_(input_pos1813, input_len1812) !== false) {
            var if_res1134 = mv1827();
          } else {
            var if_res1134 = record_error1829();
          }
          var if_res1142 = if_res1134;
        } else {
          if (M3.char_p(t1854) !== false) {
            if (M3.__lt_(input_pos1813, input_len1812) !== false) {
              var if_res1135 = M3.equal_p(M3.string_ref(input1811, input_pos1813), t1854);
            } else {
              var if_res1135 = false;
            }
            if (if_res1135 !== false) {
              var if_res1136 = mv1827();
            } else {
              var if_res1136 = record_error1829();
            }
            var if_res1141 = if_res1136;
          } else {
            if (M3.pair_p(t1854) !== false) {
              if (M3.__lt_(input_pos1813, input_len1812) !== false) {
                var if_res1137 = M1.within_set_p(t1854, M3.string_ref(input1811, input_pos1813));
              } else {
                var if_res1137 = false;
              }
              if (if_res1137 !== false) {
                var if_res1138 = mv1827();
              } else {
                var if_res1138 = record_error1829();
              }
              var if_res1140 = if_res1138;
            } else {
              if (M3.integer_p(t1854) !== false) {
                var if_res1139 = match_automaton1823(t1854);
              } else {
                var if_res1139 = false;
              }
              var if_res1140 = if_res1139;
            }
            var if_res1141 = if_res1140;
          }
          var if_res1142 = if_res1141;
        }
        var res1855 = if_res1142;
        if (res1855 !== false) {
          var tran_res1856 = match_state1824(M3.vector_ref(M0.fa_states(M3.caar(fa_stack1821)), M0.edge_s(edge1849)));
          if (tran_res1856 !== false) {
            var or_part1857 = M0.edge_v(edge1849);
            if (or_part1857 !== false) {
              var if_res1143 = or_part1857;
            } else {
              var if_res1143 = M3.equal_p(res1855, true);
            }
            if (if_res1143 !== false) {
              var if_res1144 = tran_res1856;
            } else {
              var if_res1144 = M3.cons(res1855, tran_res1856);
            }
            var if_res1145 = if_res1144;
          } else {
            restore_pos1828(start_pos1850, start_line1851, start_col1852, start_cr1853);
            var if_res1145 = false;
          }
          var if_res1146 = if_res1145;
        } else {
          var if_res1146 = false;
        }
        return if_res1146;
      };
      var mv1827 = function() {
        if (arguments.length !== 0) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        var ch1858 = M3.string_ref(input1811, input_pos1813);
        input_pos1813 = input_pos1813 + 1;
        if (M3.char_eq__p(ch1858, $rjs_core.Char.charFromCodepoint(13)) !== false) {
          line1814 = line1814 + 1;
          column1815 = 0;
          last_cr1816 = true;
          var if_res1149 = null;
        } else {
          if (M3.char_eq__p(ch1858, $rjs_core.Char.charFromCodepoint(10)) !== false) {
            if (last_cr1816 !== false) {
              var if_res1147 = M3.rvoid();
            } else {
              line1814 = line1814 + 1;
              column1815 = 0;
              var if_res1147 = null;
            }
            var if_res1148 = if_res1147;
          } else {
            column1815 = column1815 + 1;
            var if_res1148 = null;
          }
          if_res1148;
          last_cr1816 = false;
          var if_res1149 = null;
        }
        if_res1149;
        return ch1858;
      };
      var restore_pos1828 = function(p1859, l1860, c1861, cr1862) {
        if (arguments.length !== 4) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        input_pos1813 = p1859;
        line1814 = l1860;
        column1815 = c1861;
        last_cr1816 = cr1862;
        return null;
      };
      var record_error1829 = function() {
        if (arguments.length !== 0) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M3.__lt_(error_pos1817, input_pos1813) !== false) {
          error_pos1817 = input_pos1813;
          error_line1818 = line1814;
          error_col1819 = column1815;
          error_expected1820 = $rjs_core.Pair.makeList();
          var if_res1150 = null;
        } else {
          var if_res1150 = M3.rvoid();
        }
        if_res1150;
        if (M3.__lt__eq_(error_pos1817, input_pos1813) !== false) {
          fa_stack1821 = M3.cons(M3.cons(M3.caar(fa_stack1821), true), M3.cdr(fa_stack1821));
          var if_res1151 = null;
        } else {
          var if_res1151 = M3.rvoid();
        }
        if_res1151;
        return false;
      };
      var update_error1830 = function() {
        if (arguments.length !== 0) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M3.cdar(fa_stack1821) !== false) {
          error_expected1820 = M3.cons(M0.fa_type(M3.caar(fa_stack1821)), error_expected1820);
          var if_res1152 = null;
        } else {
          var if_res1152 = M3.rvoid();
        }
        if_res1152;
        return false;
      };
      var do_eof_check1863 = function(res1866) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (res1866 !== false) {
          if (eof_check1809 !== false) {
            var if_res1153 = M3.__lt_(input_pos1813, input_len1812);
          } else {
            var if_res1153 = false;
          }
          if (if_res1153 !== false) {
            var if_res1154 = M2.__rjs_quoted__.parse_error2(error_pos1817, error_line1818, error_col1819, error_expected1820, received1864(), snippet1865());
          } else {
            var if_res1154 = res1866;
          }
          var if_res1155 = if_res1154;
        } else {
          var if_res1155 = M2.__rjs_quoted__.parse_error2(error_pos1817, error_line1818, error_col1819, error_expected1820, received1864(), snippet1865());
        }
        return if_res1155;
      };
      var received1864 = function() {
        if (arguments.length !== 0) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M3.__eq_(error_pos1817, input_len1812) !== false) {
          var if_res1156 = $rjs_core.UString.make("<end of input>");
        } else {
          var if_res1156 = M3.substring(input1811, error_pos1817, error_pos1817 + 1);
        }
        return if_res1156;
      };
      var snippet1865 = function() {
        if (arguments.length !== 0) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        var snippet_length_max1867 = 80;
        var line_finder1868 = function(index_test1869, index_move1870) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          var loop1871 = function(i1872, j1873) {
            if (arguments.length !== 2) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            if (index_test1869(i1872) !== false) {
              if (M3.__lt_(j1873, snippet_length_max1867) !== false) {
                var ch1874 = M3.string_ref(input1811, index_move1870(i1872));
                var or_part1875 = M3.char_eq__p(ch1874, $rjs_core.Char.charFromCodepoint(10));
                if (or_part1875 !== false) {
                  var if_res1157 = or_part1875;
                } else {
                  var if_res1157 = M3.char_eq__p(ch1874, $rjs_core.Char.charFromCodepoint(13));
                }
                var if_res1158 = M3.not(if_res1157);
              } else {
                var if_res1158 = false;
              }
              var if_res1159 = if_res1158;
            } else {
              var if_res1159 = false;
            }
            if (if_res1159 !== false) {
              var if_res1160 = loop1871(index_move1870(i1872), j1873 + 1);
            } else {
              var if_res1160 = i1872;
            }
            return if_res1160;
          };
          return loop1871(error_pos1817, 0);
        };
        var find_line_start1876 = function() {
          if (arguments.length !== 0) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return line_finder1868(function(i1877) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return M3.__gt_(i1877, 0);
          }, M3.sub1);
        };
        var find_line_end1878 = function() {
          if (arguments.length !== 0) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return line_finder1868(function(i1879) {
            if (arguments.length !== 1) {
              throw $rjs_core.racketContractError("arity mismatch");
            } else {}
            return M3.__lt_(i1879, input_len1812 - 1);
          }, M3.add1);
        };
        var build_snippet1880 = function(start1881, end1882) {
          if (arguments.length !== 2) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return M3.string_append(M3.substring(input1811, start1881, M3.min(end1882, input_len1812)), $rjs_core.UString.make("\n"), M3.make_string(error_pos1817 - start1881, $rjs_core.Char.charFromCodepoint(32)), $rjs_core.UString.make("^"));
        };
        var line_start1883 = find_line_start1876();
        var line_end1884 = find_line_end1878();
        if (M3.__lt_(line_end1884 - line_start1883, snippet_length_max1867) !== false) {
          var if_res1161 = build_snippet1880(line_start1883, line_end1884 + 1);
        } else {
          var s_len1885 = error_pos1817 - line_start1883;
          var e_len1886 = (line_end1884 + 1) - error_pos1817;
          var half_max1887 = snippet_length_max1867 / 2;
          var s1888 = M3.min(s_len1885, half_max1887);
          var e1889 = M3.min(e_len1886, half_max1887);
          var ss1890 = s1888 + (half_max1887 - e1889);
          var ee1891 = e1889 + (half_max1887 - s1888);
          var if_res1161 = build_snippet1880(error_pos1817 - ss1890, error_pos1817 + ee1891);
        }
        return if_res1161;
      };
      return do_eof_check1863(match_automaton1823(start1808));
    };
  };
  var __rjs_quoted__ = {};
  __rjs_quoted__.cache_item_p = cache_item_p;
  __rjs_quoted__.cache_item_cr = cache_item_cr;
  __rjs_quoted__.cache_item_pos = cache_item_pos;
  __rjs_quoted__.cache_item_line = cache_item_line;
  __rjs_quoted__.cache_item_val = cache_item_val;
  __rjs_quoted__.cache_item1 = cache_item1;
  __rjs_quoted__.struct_cache_item = struct_cache_item;
  __rjs_quoted__.cache_item_col = cache_item_col;
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get make_parser() {
      return make_parser;
    }
  };
})();
var $__modules_47_grammar_45_parser_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "modules/grammar-parser.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__collects_47_waxeye_47_fa_46_rkt_46_js__;
  var M1 = $__collects_47_waxeye_47_parser_46_rkt_46_js__;
  var M2 = $__runtime_47_kernel_46_rkt_46_js__;
  var automata = M2.vector(M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("grammar"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(1, 1, false)), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("definition"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(8, 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(17, 2, false), M0.__rjs_quoted__.edge1(18, 2, false), M0.__rjs_quoted__.edge1(19, 2, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(2, 3, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 4, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("alternation"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(3, 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(20, 2, false)), true), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(3, 1, false)), false)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("sequence"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(4, 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(4, 1, false)), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("unit"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(5, 0, false), M0.__rjs_quoted__.edge1(6, 0, false), M0.__rjs_quoted__.edge1(8, 1, false), M0.__rjs_quoted__.edge1(21, 3, false), M0.__rjs_quoted__.edge1(7, 2, false), M0.__rjs_quoted__.edge1(9, 2, false), M0.__rjs_quoted__.edge1(10, 2, false), M0.__rjs_quoted__.edge1(12, 2, false), M0.__rjs_quoted__.edge1(16, 2, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(28, 2, false)), false), M0.__rjs_quoted__.state2(M2.list(), true), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(2, 4, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(22, 2, false)), false)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("prefix"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list($rjs_core.Char.charFromCodepoint(33), $rjs_core.Char.charFromCodepoint(38), M2.cons($rjs_core.Char.charFromCodepoint(42), $rjs_core.Char.charFromCodepoint(43)), $rjs_core.Char.charFromCodepoint(58), $rjs_core.Char.charFromCodepoint(63)), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 2, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("label"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(8, 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 2, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(61), 3, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 4, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("action"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(64), 1, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(8, 2, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(60), 3, true), M0.__rjs_quoted__.edge1(27, 8, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 4, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(8, 5, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(23, 6, false), M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(62), 7, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(8, 5, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 8, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("identifier"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list(M2.cons($rjs_core.Char.charFromCodepoint(65), $rjs_core.Char.charFromCodepoint(90)), $rjs_core.Char.charFromCodepoint(95), M2.cons($rjs_core.Char.charFromCodepoint(97), $rjs_core.Char.charFromCodepoint(122))), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list($rjs_core.Char.charFromCodepoint(45), M2.cons($rjs_core.Char.charFromCodepoint(48), $rjs_core.Char.charFromCodepoint(57)), M2.cons($rjs_core.Char.charFromCodepoint(65), $rjs_core.Char.charFromCodepoint(90)), $rjs_core.Char.charFromCodepoint(95), M2.cons($rjs_core.Char.charFromCodepoint(97), $rjs_core.Char.charFromCodepoint(122))), 1, false), M0.__rjs_quoted__.edge1(27, 2, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("literal"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list($rjs_core.Char.charFromCodepoint(39)), 1, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(30, 2, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(11, 3, false), M0.__rjs_quoted__.edge1(15, 3, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(29, 4, false), M0.__rjs_quoted__.edge1(M2.list($rjs_core.Char.charFromCodepoint(39)), 5, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(11, 3, false), M0.__rjs_quoted__.edge1(15, 3, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 6, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("caseLiteral"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list($rjs_core.Char.charFromCodepoint(34)), 1, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(32, 2, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(11, 3, false), M0.__rjs_quoted__.edge1(15, 3, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(31, 4, false), M0.__rjs_quoted__.edge1(M2.list($rjs_core.Char.charFromCodepoint(34)), 5, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(11, 3, false), M0.__rjs_quoted__.edge1(15, 3, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 6, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("lChar"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(92), 1, false), M0.__rjs_quoted__.edge1(34, 3, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list($rjs_core.Char.charFromCodepoint(34), $rjs_core.Char.charFromCodepoint(39), $rjs_core.Char.charFromCodepoint(92), $rjs_core.Char.charFromCodepoint(110), $rjs_core.Char.charFromCodepoint(114), $rjs_core.Char.charFromCodepoint(116)), 2, false)), false), M0.__rjs_quoted__.state2(M2.list(), true), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(33, 4, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Symbol.make("wild"), 2, false)), false)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("charClass"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(91), 1, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(35, 2, false), M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(93), 3, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(13, 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 4, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("range"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(14, 1, false), M0.__rjs_quoted__.edge1(15, 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(45), 2, true)), true), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(14, 3, false), M0.__rjs_quoted__.edge1(15, 3, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("char"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(92), 1, false), M0.__rjs_quoted__.edge1(38, 3, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list($rjs_core.Char.charFromCodepoint(45), M2.cons($rjs_core.Char.charFromCodepoint(92), $rjs_core.Char.charFromCodepoint(93)), $rjs_core.Char.charFromCodepoint(110), $rjs_core.Char.charFromCodepoint(114), $rjs_core.Char.charFromCodepoint(116)), 2, false)), false), M0.__rjs_quoted__.state2(M2.list(), true), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(37, 4, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(36, 5, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Symbol.make("wild"), 2, false)), false)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("hex"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(92), 1, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(117), 2, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(123), 3, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list(M2.cons($rjs_core.Char.charFromCodepoint(48), $rjs_core.Char.charFromCodepoint(57)), M2.cons($rjs_core.Char.charFromCodepoint(65), $rjs_core.Char.charFromCodepoint(70)), M2.cons($rjs_core.Char.charFromCodepoint(97), $rjs_core.Char.charFromCodepoint(102))), 4, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list(M2.cons($rjs_core.Char.charFromCodepoint(48), $rjs_core.Char.charFromCodepoint(57)), M2.cons($rjs_core.Char.charFromCodepoint(65), $rjs_core.Char.charFromCodepoint(70)), M2.cons($rjs_core.Char.charFromCodepoint(97), $rjs_core.Char.charFromCodepoint(102))), 5, false), M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(125), 10, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list(M2.cons($rjs_core.Char.charFromCodepoint(48), $rjs_core.Char.charFromCodepoint(57)), M2.cons($rjs_core.Char.charFromCodepoint(65), $rjs_core.Char.charFromCodepoint(70)), M2.cons($rjs_core.Char.charFromCodepoint(97), $rjs_core.Char.charFromCodepoint(102))), 6, false), M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(125), 10, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list(M2.cons($rjs_core.Char.charFromCodepoint(48), $rjs_core.Char.charFromCodepoint(57)), M2.cons($rjs_core.Char.charFromCodepoint(65), $rjs_core.Char.charFromCodepoint(70)), M2.cons($rjs_core.Char.charFromCodepoint(97), $rjs_core.Char.charFromCodepoint(102))), 7, false), M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(125), 10, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list(M2.cons($rjs_core.Char.charFromCodepoint(48), $rjs_core.Char.charFromCodepoint(57)), M2.cons($rjs_core.Char.charFromCodepoint(65), $rjs_core.Char.charFromCodepoint(70)), M2.cons($rjs_core.Char.charFromCodepoint(97), $rjs_core.Char.charFromCodepoint(102))), 8, false), M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(125), 10, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list(M2.cons($rjs_core.Char.charFromCodepoint(48), $rjs_core.Char.charFromCodepoint(57)), M2.cons($rjs_core.Char.charFromCodepoint(65), $rjs_core.Char.charFromCodepoint(70)), M2.cons($rjs_core.Char.charFromCodepoint(97), $rjs_core.Char.charFromCodepoint(102))), 9, false), M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(125), 10, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(125), 10, true)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("wildCard"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(46), 1, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 2, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("leftArrow"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(60), 1, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(45), 2, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 3, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("pruneArrow"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(60), 1, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(61), 2, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 3, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("voidArrow"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(60), 1, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(58), 2, true)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 3, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("leftArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("alt"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(124), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 2, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("open"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(40), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 2, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("close"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(41), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 2, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("comma"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(44), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(27, 2, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("sComment"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(35), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(40, 2, false), M0.__rjs_quoted__.edge1(26, 3, false), M0.__rjs_quoted__.edge1(39, 3, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Symbol.make("wild"), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("mComment"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(47), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(42), 2, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(25, 2, false), M0.__rjs_quoted__.edge1(41, 3, false), M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(42), 4, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Symbol.make("wild"), 2, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(47), 5, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("endOfLine"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(13), 1, false), M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(10), 2, false), M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(13), 2, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(10), 2, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("ws"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list($rjs_core.Char.charFromCodepoint(9), $rjs_core.Char.charFromCodepoint(32)), 0, false), M0.__rjs_quoted__.edge1(26, 0, false), M0.__rjs_quoted__.edge1(24, 0, false), M0.__rjs_quoted__.edge1(25, 0, false)), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("!"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(17, 1, false), M0.__rjs_quoted__.edge1(18, 1, false), M0.__rjs_quoted__.edge1(19, 1, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("!"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list($rjs_core.Char.charFromCodepoint(39)), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("!"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list($rjs_core.Char.charFromCodepoint(39)), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("!"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list($rjs_core.Char.charFromCodepoint(34)), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("!"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(M2.list($rjs_core.Char.charFromCodepoint(34)), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("!"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(26, 1, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("!"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(92), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("!"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(93), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("!"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(26, 1, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("!"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(93), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("!"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(92), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("!"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Symbol.make("wild"), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("!"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1(26, 1, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")), M0.__rjs_quoted__.fa3($rjs_core.Symbol.make("!"), M2.vector(M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(42), 1, false)), false), M0.__rjs_quoted__.state2(M2.list(M0.__rjs_quoted__.edge1($rjs_core.Char.charFromCodepoint(47), 2, false)), false), M0.__rjs_quoted__.state2(M2.list(), true)), $rjs_core.Symbol.make("voidArrow")));
  var grammar_parser = M1.make_parser(0, true, automata);
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get grammar_parser() {
      return grammar_parser;
    }
  };
})();
var $__modules_47_gen_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "modules/gen.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__collects_47_racket_47_private_47_map_46_rkt_46_js__;
  var M1 = $__collects_47_waxeye_47_ast_46_rkt_46_js__;
  var M2 = $__runtime_47_kernel_46_rkt_46_js__;
  var __times_eof_check_times_ = true;
  var __times_expression_level_times_ = $rjs_core.Pair.makeList();
  var __times_file_header_times_ = false;
  var __times_module_name_times_ = false;
  var __times_name_prefix_times_ = false;
  var __times_start_index_times_ = 0;
  var __times_start_name_times_ = $rjs_core.UString.make("");
  var eof_check_bang_ = function(val700) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    __times_eof_check_times_ = val700;
    return null;
  };
  var file_header_bang_ = function(val701) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    __times_file_header_times_ = val701;
    return null;
  };
  var module_name_bang_ = function(val702) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    __times_module_name_times_ = val702;
    return null;
  };
  var name_prefix_bang_ = function(val703) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    __times_name_prefix_times_ = val703;
    return null;
  };
  var start_index_bang_ = function(val704) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    __times_start_index_times_ = val704;
    return null;
  };
  var start_name_bang_ = function(val705) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    __times_start_name_times_ = val705;
    return null;
  };
  var start_nt_bang_ = function(name706, grammar707) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var index_of708 = function(ls709, v710) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var loop711 = function(ls712, i713) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        if (M2.null_p(ls712) !== false) {
          var if_res386 = false;
        } else {
          if (M2.equal_p(M2.car(ls712), v710) !== false) {
            var if_res385 = i713;
          } else {
            var if_res385 = loop711(M2.cdr(ls712), M2.add1(i713));
          }
          var if_res386 = if_res385;
        }
        return if_res386;
      };
      return loop711(ls709, 0);
    };
    __times_start_name_times_ = name706;
    if (M2.equal_p(name706, $rjs_core.UString.make("")) !== false) {
      var if_res388 = start_name_bang_(get_non_term(M2.car(get_defs(grammar707))));
    } else {
      var si714 = index_of708(M0.map(get_non_term, get_defs(grammar707)), name706);
      if (si714 !== false) {
        var if_res387 = start_index_bang_(si714);
      } else {
        var if_res387 = M2.error($rjs_core.Symbol.make("waxeye"), M2.format($rjs_core.UString.make("Can't find definition of starting non-terminal: ~a"), __times_start_name_times_));
      }
      var if_res388 = if_res387;
    }
    return if_res388;
  };
  var push_exp_level = function(level715) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    __times_expression_level_times_ = M2.cons(level715, __times_expression_level_times_);
    return null;
  };
  var pop_exp_level = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var top716 = M2.car(__times_expression_level_times_);
    __times_expression_level_times_ = M2.cdr(__times_expression_level_times_);
    return top716;
  };
  var peek_exp_level = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M2.car(__times_expression_level_times_);
  };
  var get_non_terms = function(grammar717) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M0.map(get_non_term, M1.ast_c(grammar717));
  };
  var get_non_term = function(def718) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M2.list__gt_string(M1.ast_c(M2.car(M1.ast_c(def718))));
  };
  var get_defs = function(grammar719) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M1.ast_c(grammar719);
  };
  var get_arrow = function(def720) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M1.ast_t(M2.cadr(M1.ast_c(def720)));
  };
  var get_alternation = function(def721) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M2.caddr(M1.ast_c(def721));
  };
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get eof_check_bang_() {
      return eof_check_bang_;
    },
    get __times_start_name_times_() {
      return __times_start_name_times_;
    },
    get __times_module_name_times_() {
      return __times_module_name_times_;
    },
    get __times_file_header_times_() {
      return __times_file_header_times_;
    },
    get __times_start_index_times_() {
      return __times_start_index_times_;
    },
    get __times_expression_level_times_() {
      return __times_expression_level_times_;
    },
    get file_header_bang_() {
      return file_header_bang_;
    },
    get pop_exp_level() {
      return pop_exp_level;
    },
    get start_name_bang_() {
      return start_name_bang_;
    },
    get start_nt_bang_() {
      return start_nt_bang_;
    },
    get __times_name_prefix_times_() {
      return __times_name_prefix_times_;
    },
    get start_index_bang_() {
      return start_index_bang_;
    },
    get module_name_bang_() {
      return module_name_bang_;
    },
    get push_exp_level() {
      return push_exp_level;
    },
    get get_non_term() {
      return get_non_term;
    },
    get name_prefix_bang_() {
      return name_prefix_bang_;
    },
    get __times_eof_check_times_() {
      return __times_eof_check_times_;
    },
    get peek_exp_level() {
      return peek_exp_level;
    },
    get get_non_terms() {
      return get_non_terms;
    },
    get get_alternation() {
      return get_alternation;
    },
    get get_defs() {
      return get_defs;
    },
    get get_arrow() {
      return get_arrow;
    }
  };
})();
var $__modules_47_expand_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "modules/expand.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__collects_47_racket_47_private_47_list_46_rkt_46_js__;
  var M1 = $__collects_47_racket_47_private_47_map_46_rkt_46_js__;
  var M2 = $__modules_47_gen_46_rkt_46_js__;
  var M3 = $__collects_47_waxeye_47_ast_46_rkt_46_js__;
  var M4 = $__runtime_47_kernel_46_rkt_46_js__;
  var M5 = $__runtime_47_read_46_rkt_46_js__;
  var M6 = $__runtime_47_unsafe_46_rkt_46_js__;
  var expand_grammar = function(grammar1734) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var lift_only_sub_exp1735 = function(visitor1736, exp1737) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var chil1738 = M3.ast_c(exp1737);
      M1.for_each(visitor1736, chil1738);
      if (M4.__eq_(M4.length(chil1738), 1) !== false) {
        var only1739 = M4.car(chil1738);
        M3.set_ast_t_bang_(exp1737, M3.ast_t(only1739));
        M3.set_ast_c_bang_(exp1737, M3.ast_c(only1739));
        var if_res1065 = M3.set_ast_pos_bang_(exp1737, M3.ast_pos(only1739));
      } else {
        var if_res1065 = M4.rvoid();
      }
      return if_res1065;
    };
    var visit_alternation1740 = function(exp1744) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return lift_only_sub_exp1735(visit_sequence1741, exp1744);
    };
    var visit_sequence1741 = function(exp1745) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      M3.set_ast_c_bang_(exp1745, M1.map(expand_unit, M3.ast_c(exp1745)));
      return lift_only_sub_exp1735(visit_exp1743, exp1745);
    };
    var visit_only_child1742 = function(exp1746) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return visit_exp1743(M4.car(M3.ast_c(exp1746)));
    };
    var visit_exp1743 = function(exp1747) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var type1748 = M3.ast_t(exp1747);
      var tmp1749 = type1748;
      if (M4.symbol_p(tmp1749) !== false) {
        var if_res1066 = M4.hash_ref($rjs_core.Hash.makeEq([[$rjs_core.Symbol.make("sequence"), 13], [$rjs_core.Symbol.make("identifier"), 7], [$rjs_core.Symbol.make("optional"), 11], [$rjs_core.Symbol.make("not"), 10], [$rjs_core.Symbol.make("caseLiteral"), 4], [$rjs_core.Symbol.make("closure"), 6], [$rjs_core.Symbol.make("charClass"), 5], [$rjs_core.Symbol.make("void"), 14], [$rjs_core.Symbol.make("action"), 1], [$rjs_core.Symbol.make("alternation"), 2], [$rjs_core.Symbol.make("plus"), 12], [$rjs_core.Symbol.make("wildCard"), 15], [$rjs_core.Symbol.make("label"), 8], [$rjs_core.Symbol.make("and"), 3], [$rjs_core.Symbol.make("literal"), 9]], false), tmp1749, function() {
          if (arguments.length !== 0) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return 0;
        });
      } else {
        var if_res1066 = 0;
      }
      var index1750 = if_res1066;
      if (M6.unsafe_fx_lt_(index1750, 7) !== false) {
        if (M6.unsafe_fx_lt_(index1750, 3) !== false) {
          if (M6.unsafe_fx_lt_(index1750, 1) !== false) {
            var if_res1068 = M4.error($rjs_core.Symbol.make("expand-grammar"), $rjs_core.UString.make("unknown expression type: ~s"), type1748);
          } else {
            if (M6.unsafe_fx_lt_(index1750, 2) !== false) {
              var if_res1067 = M4.rvoid();
            } else {
              var if_res1067 = visit_alternation1740(exp1747);
            }
            var if_res1068 = if_res1067;
          }
          var if_res1072 = if_res1068;
        } else {
          if (M6.unsafe_fx_lt_(index1750, 4) !== false) {
            var if_res1071 = visit_only_child1742(exp1747);
          } else {
            if (M6.unsafe_fx_lt_(index1750, 5) !== false) {
              var if_res1070 = visit_case_literal(exp1747);
            } else {
              if (M6.unsafe_fx_lt_(index1750, 6) !== false) {
                var if_res1069 = visit_char_class(exp1747);
              } else {
                var if_res1069 = visit_only_child1742(exp1747);
              }
              var if_res1070 = if_res1069;
            }
            var if_res1071 = if_res1070;
          }
          var if_res1072 = if_res1071;
        }
        var if_res1081 = if_res1072;
      } else {
        if (M6.unsafe_fx_lt_(index1750, 11) !== false) {
          if (M6.unsafe_fx_lt_(index1750, 8) !== false) {
            var if_res1075 = M4.rvoid();
          } else {
            if (M6.unsafe_fx_lt_(index1750, 9) !== false) {
              var if_res1074 = M4.rvoid();
            } else {
              if (M6.unsafe_fx_lt_(index1750, 10) !== false) {
                var if_res1073 = visit_literal(exp1747);
              } else {
                var if_res1073 = visit_only_child1742(exp1747);
              }
              var if_res1074 = if_res1073;
            }
            var if_res1075 = if_res1074;
          }
          var if_res1080 = if_res1075;
        } else {
          if (M6.unsafe_fx_lt_(index1750, 13) !== false) {
            if (M6.unsafe_fx_lt_(index1750, 12) !== false) {
              var if_res1076 = visit_only_child1742(exp1747);
            } else {
              var if_res1076 = visit_only_child1742(exp1747);
            }
            var if_res1079 = if_res1076;
          } else {
            if (M6.unsafe_fx_lt_(index1750, 14) !== false) {
              var if_res1078 = visit_sequence1741(exp1747);
            } else {
              if (M6.unsafe_fx_lt_(index1750, 15) !== false) {
                var if_res1077 = visit_only_child1742(exp1747);
              } else {
                var if_res1077 = M4.rvoid();
              }
              var if_res1078 = if_res1077;
            }
            var if_res1079 = if_res1078;
          }
          var if_res1080 = if_res1079;
        }
        var if_res1081 = if_res1080;
      }
      return if_res1081;
    };
    var expand_def1751 = function(def1752) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return visit_alternation1740(M4.caddr(M3.ast_c(def1752)));
    };
    return M1.for_each(expand_def1751, M2.get_defs(grammar1734));
  };
  var expand_unit = function(exp1753) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var make_prefix1754 = function(v1755, e1756) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var r1757 = M4.car(M3.ast_c(v1755));
      if (M4.equal_p(r1757, $rjs_core.Char.charFromCodepoint(42)) !== false) {
        var if_res1087 = $rjs_core.Symbol.make("closure");
      } else {
        if (M4.equal_p(r1757, $rjs_core.Char.charFromCodepoint(43)) !== false) {
          var if_res1086 = $rjs_core.Symbol.make("plus");
        } else {
          if (M4.equal_p(r1757, $rjs_core.Char.charFromCodepoint(63)) !== false) {
            var if_res1085 = $rjs_core.Symbol.make("optional");
          } else {
            if (M4.equal_p(r1757, $rjs_core.Char.charFromCodepoint(58)) !== false) {
              var if_res1084 = $rjs_core.Symbol.make("void");
            } else {
              if (M4.equal_p(r1757, $rjs_core.Char.charFromCodepoint(38)) !== false) {
                var if_res1083 = $rjs_core.Symbol.make("and");
              } else {
                if (M4.equal_p(r1757, $rjs_core.Char.charFromCodepoint(33)) !== false) {
                  var if_res1082 = $rjs_core.Symbol.make("not");
                } else {
                  var if_res1082 = M4.error($rjs_core.Symbol.make("make-prefix"), $rjs_core.UString.make("unknown expression type: ~s"), r1757);
                }
                var if_res1083 = if_res1082;
              }
              var if_res1084 = if_res1083;
            }
            var if_res1085 = if_res1084;
          }
          var if_res1086 = if_res1085;
        }
        var if_res1087 = if_res1086;
      }
      return M3.__rjs_quoted__.ast1(if_res1087, M4.list(e1756), M4.cons(0, 0));
    };
    var make_label1758 = function(v1759, e1760) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var r1761 = M4.car(M3.ast_c(v1759));
      return M3.__rjs_quoted__.ast1($rjs_core.Symbol.make("label"), M4.list(e1760), M4.cons(0, 0));
    };
    var expand_unit_iter1762 = function(el1763) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var rest1764 = M4.cdr(el1763);
      if (M4.null_p(rest1764) !== false) {
        var if_res1090 = M4.car(el1763);
      } else {
        var type1765 = M3.ast_t(M4.car(el1763));
        var tmp1766 = type1765;
        if (M4.equal_p(tmp1766, $rjs_core.Symbol.make("prefix")) !== false) {
          var if_res1089 = make_prefix1754;
        } else {
          if (M4.equal_p(tmp1766, $rjs_core.Symbol.make("label")) !== false) {
            var if_res1088 = make_label1758;
          } else {
            var if_res1088 = M4.error($rjs_core.Symbol.make("expand-unit-iter"), $rjs_core.UString.make("unknown expression type: ~s"), type1765);
          }
          var if_res1089 = if_res1088;
        }
        var if_res1090 = if_res1089(M4.car(el1763), expand_unit_iter1762(rest1764));
      }
      return if_res1090;
    };
    return expand_unit_iter1762(M3.ast_c(exp1753));
  };
  var visit_case_literal = function(exp1767) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var cc_chil1768 = function(c1769) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.char_alphabetic_p(c1769) !== false) {
        var if_res1091 = M4.list(M4.char_upcase(c1769), M4.char_downcase(c1769));
      } else {
        var if_res1091 = M4.list(c1769);
      }
      return if_res1091;
    };
    convert_chars_bang_(exp1767);
    var letters1770 = M3.ast_c(exp1767);
    if (M0.memf(M4.char_alphabetic_p, letters1770) !== false) {
      if (M4.null_p(M4.cdr(letters1770)) !== false) {
        var c1771 = M4.car(letters1770);
        M3.set_ast_t_bang_(exp1767, $rjs_core.Symbol.make("charClass"));
        var if_res1092 = M3.set_ast_c_bang_(exp1767, cc_chil1768(c1771));
      } else {
        M3.set_ast_t_bang_(exp1767, $rjs_core.Symbol.make("sequence"));
        var if_res1092 = M3.set_ast_c_bang_(exp1767, M1.map(function(a1772) {
          if (arguments.length !== 1) {
            throw $rjs_core.racketContractError("arity mismatch");
          } else {}
          return M3.__rjs_quoted__.ast1($rjs_core.Symbol.make("charClass"), cc_chil1768(a1772), M4.cons(0, 0));
        }, letters1770));
      }
      var if_res1093 = if_res1092;
    } else {
      var if_res1093 = M3.set_ast_t_bang_(exp1767, $rjs_core.Symbol.make("literal"));
    }
    return if_res1093;
  };
  var convert_char = function(c1773) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var cc_char1774 = function(c1775) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var chil1776 = M3.ast_c(c1775);
      if (M4.__eq_(M4.length(chil1776), 1) !== false) {
        var if_res1097 = M4.car(chil1776);
      } else {
        var s1777 = M4.cadr(chil1776);
        if (M4.equal_p(s1777, $rjs_core.Char.charFromCodepoint(110)) !== false) {
          var if_res1096 = $rjs_core.Char.charFromCodepoint(10);
        } else {
          if (M4.equal_p(s1777, $rjs_core.Char.charFromCodepoint(116)) !== false) {
            var if_res1095 = $rjs_core.Char.charFromCodepoint(9);
          } else {
            if (M4.equal_p(s1777, $rjs_core.Char.charFromCodepoint(114)) !== false) {
              var if_res1094 = $rjs_core.Char.charFromCodepoint(13);
            } else {
              var if_res1094 = s1777;
            }
            var if_res1095 = if_res1094;
          }
          var if_res1096 = if_res1095;
        }
        var if_res1097 = if_res1096;
      }
      return if_res1097;
    };
    var cc_hex1778 = function(c1779) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.integer__gt_char(M4.string__gt_number(M4.list__gt_string(M3.ast_c(c1779)), 16));
    };
    if (M4.equal_p(M3.ast_t(c1773), $rjs_core.Symbol.make("hex")) !== false) {
      var if_res1098 = cc_hex1778(c1773);
    } else {
      var if_res1098 = cc_char1774(c1773);
    }
    return if_res1098;
  };
  var convert_chars_bang_ = function(exp1780) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M3.set_ast_c_bang_(exp1780, M1.map(convert_char, M3.ast_c(exp1780)));
  };
  var visit_literal = function(exp1781) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return convert_chars_bang_(exp1781);
  };
  var visit_char_class = function(exp1782) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var cc_part1783 = function(part1784) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var range1785 = M3.ast_c(part1784);
      if (M4.__eq_(M4.length(range1785), 1) !== false) {
        var if_res1101 = convert_char(M4.car(range1785));
      } else {
        var r11786 = convert_char(M4.car(range1785));
        var r21787 = convert_char(M4.cadr(range1785));
        if (M4.char_eq__p(r11786, r21787) !== false) {
          var if_res1100 = r11786;
        } else {
          if (M4.char_lt__p(r11786, r21787) !== false) {
            var if_res1099 = M4.cons(r11786, r21787);
          } else {
            var if_res1099 = M4.cons(r21787, r11786);
          }
          var if_res1100 = if_res1099;
        }
        var if_res1101 = if_res1100;
      }
      return if_res1101;
    };
    var cc_less_than_p1788 = function(a1789, b1790) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.char_p(a1789) !== false) {
        var if_res1103 = a1789;
      } else {
        var if_res1103 = M4.car(a1789);
      }
      if (M4.char_p(b1790) !== false) {
        var if_res1102 = b1790;
      } else {
        var if_res1102 = M4.car(b1790);
      }
      return M4.char_lt__p(if_res1103, if_res1102);
    };
    var minimise1791 = function(cc1792) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var next_to_p1793 = function(a1794, b1795) {
        if (arguments.length !== 2) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M4.__eq_(M4.char__gt_integer(b1795) - M4.char__gt_integer(a1794), 1);
      };
      if (M4.null_p(cc1792) !== false) {
        var if_res1116 = $rjs_core.Pair.makeList();
      } else {
        var a1796 = M4.car(cc1792);
        var rest1797 = M4.cdr(cc1792);
        if (M4.null_p(rest1797) !== false) {
          var if_res1115 = cc1792;
        } else {
          var b1798 = M4.car(rest1797);
          if (M4.char_p(a1796) !== false) {
            if (M4.char_p(b1798) !== false) {
              if (M4.char_eq__p(a1796, b1798) !== false) {
                var if_res1105 = minimise1791(M4.cons(a1796, M4.cdr(rest1797)));
              } else {
                if (next_to_p1793(a1796, b1798) !== false) {
                  var if_res1104 = minimise1791(M4.cons(M4.cons(a1796, b1798), M4.cdr(rest1797)));
                } else {
                  var if_res1104 = M4.cons(a1796, minimise1791(rest1797));
                }
                var if_res1105 = if_res1104;
              }
              var if_res1107 = if_res1105;
            } else {
              if (next_to_p1793(a1796, M4.car(b1798)) !== false) {
                var if_res1106 = minimise1791(M4.cons(M4.cons(a1796, M4.cdr(b1798)), M4.cdr(rest1797)));
              } else {
                var if_res1106 = M4.cons(a1796, minimise1791(rest1797));
              }
              var if_res1107 = if_res1106;
            }
            var if_res1114 = if_res1107;
          } else {
            if (M4.char_p(b1798) !== false) {
              var or_part1799 = M4.char_eq__p(b1798, M4.car(a1796));
              if (or_part1799 !== false) {
                var if_res1108 = or_part1799;
              } else {
                var if_res1108 = M4.char_lt__eq__p(b1798, M4.cdr(a1796));
              }
              if (if_res1108 !== false) {
                var if_res1110 = minimise1791(M4.cons(a1796, M4.cdr(rest1797)));
              } else {
                if (next_to_p1793(M4.cdr(a1796), b1798) !== false) {
                  var if_res1109 = minimise1791(M4.cons(M4.cons(M4.car(a1796), b1798), M4.cdr(rest1797)));
                } else {
                  var if_res1109 = M4.cons(a1796, minimise1791(rest1797));
                }
                var if_res1110 = if_res1109;
              }
              var if_res1113 = if_res1110;
            } else {
              var or_part1800 = M4.char_lt__eq__p(M4.car(b1798), M4.cdr(a1796));
              if (or_part1800 !== false) {
                var if_res1111 = or_part1800;
              } else {
                var if_res1111 = next_to_p1793(M4.cdr(a1796), M4.car(b1798));
              }
              if (if_res1111 !== false) {
                var if_res1112 = minimise1791(M4.cons(M4.cons(M4.integer__gt_char(M4.min(M4.char__gt_integer(M4.car(a1796)), M4.char__gt_integer(M4.car(b1798)))), M4.integer__gt_char(M4.max(M4.char__gt_integer(M4.cdr(a1796)), M4.char__gt_integer(M4.cdr(b1798))))), M4.cdr(rest1797)));
              } else {
                var if_res1112 = M4.cons(a1796, minimise1791(rest1797));
              }
              var if_res1113 = if_res1112;
            }
            var if_res1114 = if_res1113;
          }
          var if_res1115 = if_res1114;
        }
        var if_res1116 = if_res1115;
      }
      return if_res1116;
    };
    var temp11801 = M1.map(cc_part1783, M3.ast_c(exp1782));
    var cc_less_than_p21802 = cc_less_than_p1788;
    if (M4.variable_reference_constant_p(M0.__rjs_quoted__.sort9) !== false) {
      var if_res1117 = M0.__rjs_quoted__.sort7(false, false, temp11801, cc_less_than_p21802);
    } else {
      var if_res1117 = M0.__rjs_quoted__.sort9(temp11801, cc_less_than_p21802);
    }
    return M3.set_ast_c_bang_(exp1782, minimise1791(if_res1117));
  };
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get visit_literal() {
      return visit_literal;
    },
    get convert_char() {
      return convert_char;
    },
    get visit_char_class() {
      return visit_char_class;
    },
    get convert_chars_bang_() {
      return convert_chars_bang_;
    },
    get expand_grammar() {
      return expand_grammar;
    },
    get expand_unit() {
      return expand_unit;
    },
    get visit_case_literal() {
      return visit_case_literal;
    }
  };
})();
var $__modules_47_action_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "modules/action.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__collects_47_racket_47_private_47_reverse_46_rkt_46_js__;
  var M1 = $__collects_47_racket_47_private_47_map_46_rkt_46_js__;
  var M2 = $__modules_47_gen_46_rkt_46_js__;
  var M3 = $__collects_47_waxeye_47_ast_46_rkt_46_js__;
  var M4 = $__runtime_47_kernel_46_rkt_46_js__;
  var collect_actions = function(grammar1716) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var action_list1717 = $rjs_core.Pair.makeList();
    var visit_action1718 = function(exp1719) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      action_list1717 = M4.cons(exp1719, action_list1717);
      return null;
    };
    var visit_alternation1720 = function(exp1724) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M1.for_each(visit_sequence1721, M3.ast_c(exp1724));
    };
    var visit_sequence1721 = function(exp1725) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M1.for_each(visit_unit1722, M3.ast_c(exp1725));
    };
    var visit_unit1722 = function(exp1726) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var el1727 = M3.ast_c(exp1726);
      var el_len1728 = M4.length(el1727);
      return visit_exp1723(M4.list_ref(el1727, el_len1728 - 1));
    };
    var visit_exp1723 = function(exp1729) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var type1730 = M3.ast_t(exp1729);
      var tmp1731 = type1730;
      if (M4.equal_p(tmp1731, $rjs_core.Symbol.make("action")) !== false) {
        var if_res1064 = visit_action1718(exp1729);
      } else {
        if (M4.equal_p(tmp1731, $rjs_core.Symbol.make("alternation")) !== false) {
          var if_res1063 = visit_alternation1720(exp1729);
        } else {
          if (M4.equal_p(tmp1731, $rjs_core.Symbol.make("sequence")) !== false) {
            var if_res1062 = visit_sequence1721(exp1729);
          } else {
            if (M4.equal_p(tmp1731, $rjs_core.Symbol.make("unit")) !== false) {
              var if_res1061 = visit_unit1722(exp1729);
            } else {
              var if_res1061 = M4.rvoid();
            }
            var if_res1062 = if_res1061;
          }
          var if_res1063 = if_res1062;
        }
        var if_res1064 = if_res1063;
      }
      return if_res1064;
    };
    var get_def_actions1732 = function(def1733) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return visit_alternation1720(M4.caddr(M3.ast_c(def1733)));
    };
    M1.for_each(get_def_actions1732, M2.get_defs(grammar1716));
    action_list1717 = M0.alt_reverse(action_list1717);
    return null;
  };
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get collect_actions() {
      return collect_actions;
    }
  };
})();
var $__modules_47_transform_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "modules/transform.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__modules_47_expand_46_rkt_46_js__;
  var M1 = $__modules_47_action_46_rkt_46_js__;
  var M2 = $__collects_47_racket_47_private_47_map_46_rkt_46_js__;
  var M3 = $__modules_47_gen_46_rkt_46_js__;
  var M4 = $__collects_47_waxeye_47_ast_46_rkt_46_js__;
  var M5 = $__runtime_47_kernel_46_rkt_46_js__;
  var transform_grammar = function(g722) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var nt_names723 = M5.make_hash();
    if (check_not_empty(g722) !== false) {
      if (M1.collect_actions(g722) !== false) {
        if (collect_nt_names(g722, nt_names723) !== false) {
          if (check_refs(g722, nt_names723) !== false) {
            var if_res389 = M0.expand_grammar(g722);
          } else {
            var if_res389 = false;
          }
          var if_res390 = if_res389;
        } else {
          var if_res390 = false;
        }
        var if_res391 = if_res390;
      } else {
        var if_res391 = false;
      }
      var if_res392 = if_res391;
    } else {
      var if_res392 = false;
    }
    return if_res392;
  };
  var check_not_empty = function(g724) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.null_p(M4.ast_c(g724)) !== false) {
      var if_res393 = M5.error($rjs_core.Symbol.make("check-not-empty"), $rjs_core.UString.make("grammar is empty"));
    } else {
      var if_res393 = M5.rvoid();
    }
    return if_res393;
  };
  var collect_nt_names = function(g725, nt_names726) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var ok727 = true;
    M2.for_each(function(a728) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var name729 = M3.get_non_term(a728);
      var found730 = M5.hash_ref(nt_names726, name729, false);
      if (found730 !== false) {
        ok727 = false;
        var if_res394 = M5.error($rjs_core.Symbol.make("check-duplicate"), $rjs_core.UString.make("duplicate definition of non-terminal: ~a"), name729);
      } else {
        var if_res394 = M5.hash_set_bang_(nt_names726, name729, name729);
      }
      return if_res394;
    }, M4.ast_c(g725));
    return ok727;
  };
  var check_refs = function(grammar731, nt_names732) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var visit_nt733 = function(exp734) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var name735 = M5.list__gt_string(M4.ast_c(exp734));
      if (M5.hash_ref(nt_names732, name735, false) !== false) {
        var if_res395 = M5.rvoid();
      } else {
        var if_res395 = M5.error($rjs_core.Symbol.make("waxeye"), $rjs_core.UString.make("undefined reference to non-terminal: ~a"), name735);
      }
      return if_res395;
    };
    var visit_alternation736 = function(exp740) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M2.for_each(visit_sequence737, M4.ast_c(exp740));
    };
    var visit_sequence737 = function(exp741) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M2.for_each(visit_unit738, M4.ast_c(exp741));
    };
    var visit_unit738 = function(exp742) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var el743 = M4.ast_c(exp742);
      var el_len744 = M5.length(el743);
      return visit_exp739(M5.list_ref(el743, el_len744 - 1));
    };
    var visit_exp739 = function(exp745) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var type746 = M4.ast_t(exp745);
      var tmp747 = type746;
      if (M5.equal_p(tmp747, $rjs_core.Symbol.make("alternation")) !== false) {
        var if_res399 = visit_alternation736(exp745);
      } else {
        if (M5.equal_p(tmp747, $rjs_core.Symbol.make("identifier")) !== false) {
          var if_res398 = visit_nt733(exp745);
        } else {
          if (M5.equal_p(tmp747, $rjs_core.Symbol.make("sequence")) !== false) {
            var if_res397 = visit_sequence737(exp745);
          } else {
            if (M5.equal_p(tmp747, $rjs_core.Symbol.make("unit")) !== false) {
              var if_res396 = visit_unit738(exp745);
            } else {
              var if_res396 = M5.rvoid();
            }
            var if_res397 = if_res396;
          }
          var if_res398 = if_res397;
        }
        var if_res399 = if_res398;
      }
      return if_res399;
    };
    var check_nt_refs748 = function(def749) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return visit_alternation736(M5.caddr(M4.ast_c(def749)));
    };
    return M2.for_each(check_nt_refs748, M3.get_defs(grammar731));
  };
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get collect_nt_names() {
      return collect_nt_names;
    },
    get check_refs() {
      return check_refs;
    },
    get transform_grammar() {
      return transform_grammar;
    },
    get check_not_empty() {
      return check_not_empty;
    }
  };
})();
var $__collects_47_racket_47_private_47_path_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/racket/private/path.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__runtime_47_kernel_46_rkt_46_js__;
  var path_string_p = function(s3805) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var or_part3806 = M0.__rjs_quoted__.path_p(s3805);
    if (or_part3806 !== false) {
      var if_res2599 = or_part3806;
    } else {
      if (M0.string_p(s3805) !== false) {
        var or_part3807 = M0.__rjs_quoted__.relative_path_p(s3805);
        if (or_part3807 !== false) {
          var if_res2597 = or_part3807;
        } else {
          var if_res2597 = M0.__rjs_quoted__.absolute_path_p(s3805);
        }
        var if_res2598 = if_res2597;
      } else {
        var if_res2598 = false;
      }
      var if_res2599 = if_res2598;
    }
    return if_res2599;
  };
  var bsbs = M0.string($rjs_core.Char.charFromCodepoint(92), $rjs_core.Char.charFromCodepoint(92));
  var normal_case_path = function(s3808) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var or_part3809 = M0.__rjs_quoted__.path_for_some_system_p(s3808);
    if (or_part3809 !== false) {
      var if_res2600 = or_part3809;
    } else {
      var if_res2600 = path_string_p(s3808);
    }
    if (if_res2600 !== false) {
      var if_res2601 = M0.rvoid();
    } else {
      var if_res2601 = M0.raise_argument_error($rjs_core.Symbol.make("normal-path-case"), $rjs_core.UString.make("(or/c path-for-some-system? path-string?)"), s3808);
    }
    if_res2601;
    if (M0.__rjs_quoted__.path_for_some_system_p(s3808) !== false) {
      var if_res2602 = M0.eq_p(M0.__rjs_quoted__.path_convention_type(s3808), $rjs_core.Symbol.make("windows"));
    } else {
      var if_res2602 = M0.eq_p(M0.system_type(), $rjs_core.Symbol.make("windows"));
    }
    if (if_res2602 !== false) {
      if (M0.string_p(s3808) !== false) {
        var if_res2603 = s3808;
      } else {
        var if_res2603 = M0.__rjs_quoted__.bytes__gt_string_by_locale(M0.__rjs_quoted__.path__gt_bytes(s3808));
      }
      var str3810 = if_res2603;
      if (M0.__rjs_quoted__.regexp_match_p("/^[\\][\\][?][\\]/", str3810) !== false) {
        if (M0.string_p(s3808) !== false) {
          var if_res2604 = M0.__rjs_quoted__.string__gt_path(s3808);
        } else {
          var if_res2604 = s3808;
        }
        var if_res2606 = if_res2604;
      } else {
        var s3811 = M0.__rjs_quoted__.string_locale_downcase(str3810);
        if (M0.__rjs_quoted__.regexp_match_p("/[\\/\\][. ]+[\\/\\]*$/", s3811) !== false) {
          var if_res2605 = s3811;
        } else {
          var if_res2605 = M0.__rjs_quoted__.regexp_replace_times_("/[ .]+([\\/\\]*)$/", s3811, $rjs_core.UString.make("\\1"));
        }
        var if_res2606 = M0.__rjs_quoted__.bytes__gt_path(M0.__rjs_quoted__.string__gt_bytes_by_locale(M0.__rjs_quoted__.regexp_replace_times_("/\\//", if_res2605, bsbs)), $rjs_core.Symbol.make("windows"));
      }
      var if_res2608 = if_res2606;
    } else {
      if (M0.string_p(s3808) !== false) {
        var if_res2607 = M0.__rjs_quoted__.string__gt_path(s3808);
      } else {
        var if_res2607 = s3808;
      }
      var if_res2608 = if_res2607;
    }
    return if_res2608;
  };
  var check_extension_call = function(s3812, sfx3813, who3814, sep3815, trust_sep_p3816) {
    if (arguments.length !== 5) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var or_part3819 = M0.__rjs_quoted__.path_for_some_system_p(s3812);
    if (or_part3819 !== false) {
      var if_res2609 = or_part3819;
    } else {
      var if_res2609 = path_string_p(s3812);
    }
    if (M0.not(if_res2609) !== false) {
      var if_res2615 = M0.values($rjs_core.UString.make("(or/c path-for-some-system? path-string?)"), 0);
    } else {
      var or_part3820 = M0.string_p(sfx3813);
      if (or_part3820 !== false) {
        var if_res2610 = or_part3820;
      } else {
        var if_res2610 = M0.bytes_p(sfx3813);
      }
      if (M0.not(if_res2610) !== false) {
        var if_res2614 = M0.values($rjs_core.UString.make("(or/c string? bytes?)"), 1);
      } else {
        var or_part3821 = trust_sep_p3816;
        if (or_part3821 !== false) {
          var if_res2612 = or_part3821;
        } else {
          var or_part3822 = M0.string_p(sep3815);
          if (or_part3822 !== false) {
            var if_res2611 = or_part3822;
          } else {
            var if_res2611 = M0.bytes_p(sep3815);
          }
          var if_res2612 = if_res2611;
        }
        if (M0.not(if_res2612) !== false) {
          var if_res2613 = M0.values($rjs_core.UString.make("(or/c string? bytes?)"), 2);
        } else {
          var if_res2613 = M0.values(false, false);
        }
        var if_res2614 = if_res2613;
      }
      var if_res2615 = if_res2614;
    }
    var let_result2616 = if_res2615;
    var err_msg3817 = let_result2616.getAt(0);
    var err_index3818 = let_result2616.getAt(1);
    if (err_msg3817 !== false) {
      if (trust_sep_p3816 !== false) {
        var if_res2617 = M0.raise_argument_error(who3814, err_msg3817, err_index3818, s3812, sfx3813);
      } else {
        var if_res2617 = M0.raise_argument_error(who3814, err_msg3817, err_index3818, s3812, sfx3813, sep3815);
      }
      var if_res2618 = if_res2617;
    } else {
      var if_res2618 = M0.rvoid();
    }
    if_res2618;
    var let_result2619 = M0.__rjs_quoted__.split_path(s3812);
    var base3823 = let_result2619.getAt(0);
    var name3824 = let_result2619.getAt(1);
    var dir_p3825 = let_result2619.getAt(2);
    if (M0.not(base3823) !== false) {
      var if_res2620 = M0.raise_mismatch_error(who3814, $rjs_core.UString.make("cannot add an extension to a root path: "), s3812);
    } else {
      var if_res2620 = M0.rvoid();
    }
    if_res2620;
    return M0.values(base3823, name3824);
  };
  var path_adjust_extension = function(name3826, sep3827, rest_bytes3828, s3829, sfx3830, trust_sep_p3831) {
    if (arguments.length !== 6) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var let_result2621 = check_extension_call(s3829, sfx3830, name3826, sep3827, trust_sep_p3831);
    var base3832 = let_result2621.getAt(0);
    var name3833 = let_result2621.getAt(1);
    var bs3834 = M0.__rjs_quoted__.path_element__gt_bytes(name3833);
    var finish3835 = function(i3836, sep3837, i23838) {
      if (arguments.length !== 3) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var temp2626 = M0.__rjs_quoted__.subbytes(bs3834, 0, i3836);
      if (M0.string_p(sep3837) !== false) {
        var if_res2625 = M0.__rjs_quoted__.string__gt_bytes_by_locale(sep3837, M0.char__gt_integer($rjs_core.Char.charFromCodepoint(63)));
      } else {
        var if_res2625 = sep3837;
      }
      var temp2624 = rest_bytes3828(bs3834, i23838);
      if (M0.string_p(sfx3830) !== false) {
        var if_res2623 = M0.__rjs_quoted__.string__gt_bytes_by_locale(sfx3830, M0.char__gt_integer($rjs_core.Char.charFromCodepoint(63)));
      } else {
        var if_res2623 = sfx3830;
      }
      var temp2627 = M0.__rjs_quoted__.bytes_append(temp2626, if_res2625, temp2624, if_res2623);
      if (M0.__rjs_quoted__.path_for_some_system_p(s3829) !== false) {
        var if_res2622 = M0.__rjs_quoted__.path_convention_type(s3829);
      } else {
        var if_res2622 = M0.__rjs_quoted__.system_path_convention_type();
      }
      return M0.__rjs_quoted__.bytes__gt_path_element(temp2627, if_res2622);
    };
    var loop3840 = function(i3841) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M0.zero_p(i3841) !== false) {
        var if_res2630 = finish3835(M0.__rjs_quoted__.bytes_length(bs3834), $rjs_core.Bytes.fromIntArray([]), M0.__rjs_quoted__.bytes_length(bs3834));
      } else {
        var i3842 = M0.sub1(i3841);
        if (M0.not(M0.zero_p(i3842)) !== false) {
          var if_res2628 = M0.eq_p(M0.char__gt_integer($rjs_core.Char.charFromCodepoint(46)), M0.__rjs_quoted__.bytes_ref(bs3834, i3842));
        } else {
          var if_res2628 = false;
        }
        if (if_res2628 !== false) {
          var if_res2629 = finish3835(i3842, sep3827, M0.add1(i3842));
        } else {
          var if_res2629 = loop3840(i3842);
        }
        var if_res2630 = if_res2629;
      }
      return if_res2630;
    };
    var new_name3839 = loop3840(M0.__rjs_quoted__.bytes_length(bs3834));
    if (M0.__rjs_quoted__.path_for_some_system_p(base3832) !== false) {
      var if_res2631 = M0.__rjs_quoted__.build_path(base3832, new_name3839);
    } else {
      var if_res2631 = new_name3839;
    }
    return if_res2631;
  };
  var path_replace_extension = function(s3843, sfx3844) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return path_adjust_extension($rjs_core.Symbol.make("path-replace-extension"), $rjs_core.Bytes.fromIntArray([]), function(bs3845, i3846) {
      if (arguments.length !== 2) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return $rjs_core.Bytes.fromIntArray([]);
    }, s3843, sfx3844, true);
  };
  var cl2632 = function(s3847, sfx3848) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return path_adjust_extension($rjs_core.Symbol.make("path-add-extension"), $rjs_core.Bytes.fromIntArray([95]), M0.__rjs_quoted__.subbytes, s3847, sfx3848, true);
  };
  var cl2633 = function(s3849, sfx3850, sep3851) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return path_adjust_extension($rjs_core.Symbol.make("path-add-extension"), sep3851, M0.__rjs_quoted__.subbytes, s3849, sfx3850, false);
  };
  var path_add_extension = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2634 = {
      '2': cl2632,
      '3': cl2633
    }[arguments.length];
    if (fixed_lam2634 !== undefined) {
      return fixed_lam2634.apply(null, arguments);
    } else {
      return M0.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var reroot_path = function(p3852, root3853) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var or_part3854 = path_string_p(p3852);
    if (or_part3854 !== false) {
      var if_res2635 = or_part3854;
    } else {
      var if_res2635 = M0.__rjs_quoted__.path_for_some_system_p(p3852);
    }
    if (if_res2635 !== false) {
      var if_res2636 = M0.rvoid();
    } else {
      var if_res2636 = M0.raise_argument_error($rjs_core.Symbol.make("reroot-path"), $rjs_core.UString.make("(or/c path-string? path-for-some-system?)"), 0, p3852, root3853);
    }
    if_res2636;
    var let_result2637 = M0.values();
    var or_part3855 = path_string_p(root3853);
    if (or_part3855 !== false) {
      var if_res2638 = or_part3855;
    } else {
      var if_res2638 = M0.__rjs_quoted__.path_for_some_system_p(root3853);
    }
    if (if_res2638 !== false) {
      var if_res2639 = M0.rvoid();
    } else {
      var if_res2639 = M0.raise_argument_error($rjs_core.Symbol.make("reroot-path"), $rjs_core.UString.make("(or/c path-string? path-for-some-system?)"), 1, p3852, root3853);
    }
    if_res2639;
    var let_result2640 = M0.values();
    if (M0.__rjs_quoted__.path_for_some_system_p(p3852) !== false) {
      var if_res2641 = M0.__rjs_quoted__.path_convention_type(p3852);
    } else {
      var if_res2641 = M0.__rjs_quoted__.system_path_convention_type();
    }
    var conv3856 = if_res2641;
    var or_part3857 = M0.__rjs_quoted__.complete_path_p(p3852);
    if (or_part3857 !== false) {
      var if_res2642 = or_part3857;
    } else {
      var if_res2642 = M0.eq_p(M0.__rjs_quoted__.system_path_convention_type(), conv3856);
    }
    if (if_res2642 !== false) {
      var if_res2643 = M0.rvoid();
    } else {
      var if_res2643 = M0.raise_arguments_error($rjs_core.Symbol.make("reroot-path"), $rjs_core.UString.make("path is not complete and not the platform's convention"), $rjs_core.UString.make("path"), p3852, $rjs_core.UString.make("platform convention type"), M0.__rjs_quoted__.system_path_convention_type());
    }
    if_res2643;
    var let_result2644 = M0.values();
    if (M0.__rjs_quoted__.path_for_some_system_p(root3853) !== false) {
      var if_res2645 = M0.__rjs_quoted__.path_convention_type(root3853);
    } else {
      var if_res2645 = M0.__rjs_quoted__.system_path_convention_type();
    }
    if (M0.eq_p(if_res2645, conv3856) !== false) {
      var if_res2646 = M0.rvoid();
    } else {
      var if_res2646 = M0.raise_arguments_error($rjs_core.Symbol.make("reroot-path"), $rjs_core.UString.make("given paths use different conventions"), $rjs_core.UString.make("path"), p3852, $rjs_core.UString.make("root path"), root3853);
    }
    if_res2646;
    var let_result2647 = M0.values();
    if (M0.__rjs_quoted__.complete_path_p(p3852) !== false) {
      var if_res2648 = p3852;
    } else {
      var if_res2648 = M0.__rjs_quoted__.path__gt_complete_path(p3852);
    }
    var c_p3858 = normal_case_path(M0.__rjs_quoted__.cleanse_path(if_res2648));
    var bstr3859 = M0.__rjs_quoted__.path__gt_bytes(c_p3858);
    if (M0.eq_p(conv3856, $rjs_core.Symbol.make("unix")) !== false) {
      if (M0.bytes_eq__p(bstr3859, $rjs_core.Bytes.fromIntArray([47])) !== false) {
        if (M0.__rjs_quoted__.path_for_some_system_p(root3853) !== false) {
          var if_res2649 = root3853;
        } else {
          var if_res2649 = M0.__rjs_quoted__.string__gt_path(root3853);
        }
        var if_res2650 = if_res2649;
      } else {
        var if_res2650 = M0.__rjs_quoted__.build_path(root3853, M0.__rjs_quoted__.bytes__gt_path(M0.__rjs_quoted__.subbytes(M0.__rjs_quoted__.path__gt_bytes(c_p3858), 1), conv3856));
      }
      var if_res2657 = if_res2650;
    } else {
      if (M0.eq_p(conv3856, $rjs_core.Symbol.make("windows")) !== false) {
        if (M0.__rjs_quoted__.regexp_match_p("/^\\\\\\\\[?]\\\\[a-z]:/", bstr3859) !== false) {
          var if_res2655 = M0.__rjs_quoted__.bytes_append($rjs_core.Bytes.fromIntArray([92, 92, 63, 92, 82, 69, 76, 92]), M0.__rjs_quoted__.subbytes(bstr3859, 4, 5), $rjs_core.Bytes.fromIntArray([92]), M0.__rjs_quoted__.subbytes(bstr3859, 6));
        } else {
          if (M0.__rjs_quoted__.regexp_match_p("/^\\\\\\\\[?]\\\\UNC\\\\/", bstr3859) !== false) {
            var if_res2654 = M0.__rjs_quoted__.bytes_append($rjs_core.Bytes.fromIntArray([92, 92, 63, 92, 82, 69, 76, 92]), M0.__rjs_quoted__.subbytes(bstr3859, 4));
          } else {
            if (M0.__rjs_quoted__.regexp_match_p("/^\\\\\\\\[?]\\\\UNC\\\\/", bstr3859) !== false) {
              var if_res2653 = M0.__rjs_quoted__.bytes_append($rjs_core.Bytes.fromIntArray([92, 92, 63, 92, 82, 69, 76, 92]), M0.__rjs_quoted__.subbytes(bstr3859, 4));
            } else {
              if (M0.__rjs_quoted__.regexp_match_p("/^\\\\\\\\/", bstr3859) !== false) {
                var if_res2652 = M0.__rjs_quoted__.bytes_append($rjs_core.Bytes.fromIntArray([85, 78, 67, 92]), M0.__rjs_quoted__.subbytes(bstr3859, 2));
              } else {
                if (M0.__rjs_quoted__.regexp_match_p("/^[a-z]:/", bstr3859) !== false) {
                  var if_res2651 = M0.__rjs_quoted__.bytes_append(M0.__rjs_quoted__.subbytes(bstr3859, 0, 1), M0.__rjs_quoted__.subbytes(bstr3859, 2));
                } else {
                  var if_res2651 = M0.rvoid();
                }
                var if_res2652 = if_res2651;
              }
              var if_res2653 = if_res2652;
            }
            var if_res2654 = if_res2653;
          }
          var if_res2655 = if_res2654;
        }
        var if_res2656 = M0.__rjs_quoted__.build_path(root3853, M0.__rjs_quoted__.bytes__gt_path(if_res2655, conv3856));
      } else {
        var if_res2656 = M0.rvoid();
      }
      var if_res2657 = if_res2656;
    }
    return if_res2657;
  };
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get reroot_path() {
      return reroot_path;
    },
    get path_add_extension() {
      return path_add_extension;
    },
    get path_replace_extension() {
      return path_replace_extension;
    },
    get normal_case_path() {
      return normal_case_path;
    },
    get path_string_p() {
      return path_string_p;
    }
  };
})();
var $__collects_47_racket_47_private_47_kw_45_file_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "collects/racket/private/kw-file.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__collects_47_racket_47_private_47_kw_46_rkt_46_js__;
  var M1 = $__collects_47_racket_47_private_47_map_46_rkt_46_js__;
  var M2 = $__collects_47_racket_47_private_47_sort_46_rkt_46_js__;
  var M3 = $__collects_47_racket_47_private_47_member_46_rkt_46_js__;
  var M4 = $__collects_47_racket_47_private_47_path_46_rkt_46_js__;
  var M5 = $__runtime_47_kernel_46_rkt_46_js__;
  var M6 = $__runtime_47_unsafe_46_rkt_46_js__;
  var exists_syms = $rjs_core.Pair.makeList($rjs_core.Symbol.make("error"), $rjs_core.Symbol.make("append"), $rjs_core.Symbol.make("update"), $rjs_core.Symbol.make("can-update"), $rjs_core.Symbol.make("replace"), $rjs_core.Symbol.make("truncate"), $rjs_core.Symbol.make("must-truncate"), $rjs_core.Symbol.make("truncate/replace"));
  var exists_desc = $rjs_core.UString.make("(or/c 'error 'append 'update 'can-update 'replace 'truncate 'must-truncate 'truncate/replace)");
  var binary_or_text_desc = $rjs_core.UString.make("(or/c 'binary 'text)");
  var open_input_file6 = function(for_module_p23268, mode13269, path53270) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var path3271 = path53270;
    if (false !== false) {
      var if_res2189 = $rjs_core.Symbol.make("binary");
    } else {
      var if_res2189 = mode13269;
    }
    var mode3272 = if_res2189;
    if (false !== false) {
      var if_res2190 = false;
    } else {
      var if_res2190 = for_module_p23268;
    }
    var for_module_p3273 = if_res2190;
    if (M4.path_string_p(path3271) !== false) {
      var if_res2191 = M5.rvoid();
    } else {
      var if_res2191 = M5.raise_argument_error($rjs_core.Symbol.make("open-input-file"), $rjs_core.UString.make("path-string?"), path3271);
    }
    if_res2191;
    if (M3.memq(mode3272, $rjs_core.Pair.makeList($rjs_core.Symbol.make("binary"), $rjs_core.Symbol.make("text"))) !== false) {
      var if_res2192 = M5.rvoid();
    } else {
      var if_res2192 = M5.raise_argument_error($rjs_core.Symbol.make("open-input-file"), binary_or_text_desc, mode3272);
    }
    if_res2192;
    if (for_module_p3273 !== false) {
      var if_res2193 = $rjs_core.Symbol.make("module");
    } else {
      var if_res2193 = $rjs_core.Symbol.make("none");
    }
    return M5.open_input_file(path3271, mode3272, if_res2193);
  };
  var unpack7 = function(given_kws3274, given_args3275, path53276) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.pair_p(given_kws3274) !== false) {
      var if_res2194 = M5.eq_p($rjs_core.Keyword.make("for-module?"), M5.car(given_kws3274));
    } else {
      var if_res2194 = false;
    }
    var for_module_p43277 = if_res2194;
    if (for_module_p43277 !== false) {
      var if_res2195 = M5.car(given_args3275);
    } else {
      var if_res2195 = false;
    }
    var for_module_p23278 = if_res2195;
    if (for_module_p43277 !== false) {
      var if_res2196 = M5.cdr(given_kws3274);
    } else {
      var if_res2196 = given_kws3274;
    }
    var given_kws3279 = if_res2196;
    if (for_module_p43277 !== false) {
      var if_res2197 = M5.cdr(given_args3275);
    } else {
      var if_res2197 = given_args3275;
    }
    var given_args3280 = if_res2197;
    var mode33281 = M5.pair_p(given_kws3279);
    if (mode33281 !== false) {
      var if_res2198 = M5.car(given_args3280);
    } else {
      var if_res2198 = $rjs_core.Symbol.make("binary");
    }
    var mode13282 = if_res2198;
    return open_input_file6(for_module_p23278, mode13282, path53276);
  };
  var cl2202 = function(given_kws3289, given_args3290, path3291) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack7(given_kws3289, given_args3290, path3291);
  };
  var temp2204 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2203 = {'3': cl2202}[arguments.length];
    if (fixed_lam2203 !== undefined) {
      return fixed_lam2203.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [3]);
  var temp2201 = $rjs_core.Pair.makeList($rjs_core.Keyword.make("for-module?"), $rjs_core.Keyword.make("mode"));
  var cl2199 = function(path3293) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack7(M5.rnull, M5.rnull, path3293);
  };
  var open_input_file3292 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2200 = {'1': cl2199}[arguments.length];
    if (fixed_lam2200 !== undefined) {
      return fixed_lam2200.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1]);
  var open_input_file8 = M0.__rjs_quoted__.make_optional_keyword_procedure(function(given_kws3283, given_argc3284) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.__eq_(given_argc3284, 3) !== false) {
      var l13285 = given_kws3283;
      if (M5.null_p(l13285) !== false) {
        var if_res2206 = l13285;
      } else {
        if (M5.eq_p(M5.car(l13285), $rjs_core.Keyword.make("for-module?")) !== false) {
          var if_res2205 = M5.cdr(l13285);
        } else {
          var if_res2205 = l13285;
        }
        var if_res2206 = if_res2205;
      }
      var l13286 = if_res2206;
      var l13287 = l13286;
      if (M5.null_p(l13287) !== false) {
        var if_res2208 = l13287;
      } else {
        if (M5.eq_p(M5.car(l13287), $rjs_core.Keyword.make("mode")) !== false) {
          var if_res2207 = M5.cdr(l13287);
        } else {
          var if_res2207 = l13287;
        }
        var if_res2208 = if_res2207;
      }
      var l13288 = if_res2208;
      var if_res2209 = M5.null_p(l13288);
    } else {
      var if_res2209 = false;
    }
    return if_res2209;
  }, temp2204, M5.rnull, temp2201, open_input_file3292);
  var open_output_file14 = function(exists103294, mode93295, path133296) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var path3297 = path133296;
    if (false !== false) {
      var if_res2210 = $rjs_core.Symbol.make("binary");
    } else {
      var if_res2210 = mode93295;
    }
    var mode3298 = if_res2210;
    if (false !== false) {
      var if_res2211 = $rjs_core.Symbol.make("error");
    } else {
      var if_res2211 = exists103294;
    }
    var exists3299 = if_res2211;
    if (M4.path_string_p(path3297) !== false) {
      var if_res2212 = M5.rvoid();
    } else {
      var if_res2212 = M5.raise_argument_error($rjs_core.Symbol.make("open-output-file"), $rjs_core.UString.make("path-string?"), path3297);
    }
    if_res2212;
    if (M3.memq(mode3298, $rjs_core.Pair.makeList($rjs_core.Symbol.make("binary"), $rjs_core.Symbol.make("text"))) !== false) {
      var if_res2213 = M5.rvoid();
    } else {
      var if_res2213 = M5.raise_argument_error($rjs_core.Symbol.make("open-output-file"), binary_or_text_desc, mode3298);
    }
    if_res2213;
    if (M3.memq(exists3299, exists_syms) !== false) {
      var if_res2214 = M5.rvoid();
    } else {
      var if_res2214 = M5.raise_argument_error($rjs_core.Symbol.make("open-output-file"), exists_desc, exists3299);
    }
    if_res2214;
    return M5.open_output_file(path3297, mode3298, exists3299);
  };
  var unpack15 = function(given_kws3300, given_args3301, path133302) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.pair_p(given_kws3300) !== false) {
      var if_res2215 = M5.eq_p($rjs_core.Keyword.make("exists"), M5.car(given_kws3300));
    } else {
      var if_res2215 = false;
    }
    var exists123303 = if_res2215;
    if (exists123303 !== false) {
      var if_res2216 = M5.car(given_args3301);
    } else {
      var if_res2216 = $rjs_core.Symbol.make("error");
    }
    var exists103304 = if_res2216;
    if (exists123303 !== false) {
      var if_res2217 = M5.cdr(given_kws3300);
    } else {
      var if_res2217 = given_kws3300;
    }
    var given_kws3305 = if_res2217;
    if (exists123303 !== false) {
      var if_res2218 = M5.cdr(given_args3301);
    } else {
      var if_res2218 = given_args3301;
    }
    var given_args3306 = if_res2218;
    var mode113307 = M5.pair_p(given_kws3305);
    if (mode113307 !== false) {
      var if_res2219 = M5.car(given_args3306);
    } else {
      var if_res2219 = $rjs_core.Symbol.make("binary");
    }
    var mode93308 = if_res2219;
    return open_output_file14(exists103304, mode93308, path133302);
  };
  var cl2223 = function(given_kws3315, given_args3316, path3317) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack15(given_kws3315, given_args3316, path3317);
  };
  var temp2225 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2224 = {'3': cl2223}[arguments.length];
    if (fixed_lam2224 !== undefined) {
      return fixed_lam2224.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [3]);
  var temp2222 = $rjs_core.Pair.makeList($rjs_core.Keyword.make("exists"), $rjs_core.Keyword.make("mode"));
  var cl2220 = function(path3319) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack15(M5.rnull, M5.rnull, path3319);
  };
  var open_output_file3318 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2221 = {'1': cl2220}[arguments.length];
    if (fixed_lam2221 !== undefined) {
      return fixed_lam2221.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1]);
  var open_output_file16 = M0.__rjs_quoted__.make_optional_keyword_procedure(function(given_kws3309, given_argc3310) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.__eq_(given_argc3310, 3) !== false) {
      var l13311 = given_kws3309;
      if (M5.null_p(l13311) !== false) {
        var if_res2227 = l13311;
      } else {
        if (M5.eq_p(M5.car(l13311), $rjs_core.Keyword.make("exists")) !== false) {
          var if_res2226 = M5.cdr(l13311);
        } else {
          var if_res2226 = l13311;
        }
        var if_res2227 = if_res2226;
      }
      var l13312 = if_res2227;
      var l13313 = l13312;
      if (M5.null_p(l13313) !== false) {
        var if_res2229 = l13313;
      } else {
        if (M5.eq_p(M5.car(l13313), $rjs_core.Keyword.make("mode")) !== false) {
          var if_res2228 = M5.cdr(l13313);
        } else {
          var if_res2228 = l13313;
        }
        var if_res2229 = if_res2228;
      }
      var l13314 = if_res2229;
      var if_res2230 = M5.null_p(l13314);
    } else {
      var if_res2230 = false;
    }
    return if_res2230;
  }, temp2225, M5.rnull, temp2222, open_output_file3318);
  var open_input_output_file22 = function(exists183320, mode173321, path213322) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var path3323 = path213322;
    if (false !== false) {
      var if_res2231 = $rjs_core.Symbol.make("binary");
    } else {
      var if_res2231 = mode173321;
    }
    var mode3324 = if_res2231;
    if (false !== false) {
      var if_res2232 = $rjs_core.Symbol.make("error");
    } else {
      var if_res2232 = exists183320;
    }
    var exists3325 = if_res2232;
    if (M4.path_string_p(path3323) !== false) {
      var if_res2233 = M5.rvoid();
    } else {
      var if_res2233 = M5.raise_argument_error($rjs_core.Symbol.make("open-input-output-file"), $rjs_core.UString.make("path-string?"), path3323);
    }
    if_res2233;
    if (M3.memq(mode3324, $rjs_core.Pair.makeList($rjs_core.Symbol.make("binary"), $rjs_core.Symbol.make("text"))) !== false) {
      var if_res2234 = M5.rvoid();
    } else {
      var if_res2234 = M5.raise_argument_error($rjs_core.Symbol.make("open-input-output-file"), binary_or_text_desc, mode3324);
    }
    if_res2234;
    if (M3.memq(exists3325, exists_syms) !== false) {
      var if_res2235 = M5.rvoid();
    } else {
      var if_res2235 = M5.raise_argument_error($rjs_core.Symbol.make("open-input-output-file"), exists_desc, exists3325);
    }
    if_res2235;
    return M5.open_input_output_file(path3323, mode3324, exists3325);
  };
  var unpack23 = function(given_kws3326, given_args3327, path213328) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.pair_p(given_kws3326) !== false) {
      var if_res2236 = M5.eq_p($rjs_core.Keyword.make("exists"), M5.car(given_kws3326));
    } else {
      var if_res2236 = false;
    }
    var exists203329 = if_res2236;
    if (exists203329 !== false) {
      var if_res2237 = M5.car(given_args3327);
    } else {
      var if_res2237 = $rjs_core.Symbol.make("error");
    }
    var exists183330 = if_res2237;
    if (exists203329 !== false) {
      var if_res2238 = M5.cdr(given_kws3326);
    } else {
      var if_res2238 = given_kws3326;
    }
    var given_kws3331 = if_res2238;
    if (exists203329 !== false) {
      var if_res2239 = M5.cdr(given_args3327);
    } else {
      var if_res2239 = given_args3327;
    }
    var given_args3332 = if_res2239;
    var mode193333 = M5.pair_p(given_kws3331);
    if (mode193333 !== false) {
      var if_res2240 = M5.car(given_args3332);
    } else {
      var if_res2240 = $rjs_core.Symbol.make("binary");
    }
    var mode173334 = if_res2240;
    return open_input_output_file22(exists183330, mode173334, path213328);
  };
  var cl2244 = function(given_kws3341, given_args3342, path3343) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack23(given_kws3341, given_args3342, path3343);
  };
  var temp2246 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2245 = {'3': cl2244}[arguments.length];
    if (fixed_lam2245 !== undefined) {
      return fixed_lam2245.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [3]);
  var temp2243 = $rjs_core.Pair.makeList($rjs_core.Keyword.make("exists"), $rjs_core.Keyword.make("mode"));
  var cl2241 = function(path3345) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack23(M5.rnull, M5.rnull, path3345);
  };
  var open_input_output_file3344 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2242 = {'1': cl2241}[arguments.length];
    if (fixed_lam2242 !== undefined) {
      return fixed_lam2242.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1]);
  var open_input_output_file24 = M0.__rjs_quoted__.make_optional_keyword_procedure(function(given_kws3335, given_argc3336) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.__eq_(given_argc3336, 3) !== false) {
      var l13337 = given_kws3335;
      if (M5.null_p(l13337) !== false) {
        var if_res2248 = l13337;
      } else {
        if (M5.eq_p(M5.car(l13337), $rjs_core.Keyword.make("exists")) !== false) {
          var if_res2247 = M5.cdr(l13337);
        } else {
          var if_res2247 = l13337;
        }
        var if_res2248 = if_res2247;
      }
      var l13338 = if_res2248;
      var l13339 = l13338;
      if (M5.null_p(l13339) !== false) {
        var if_res2250 = l13339;
      } else {
        if (M5.eq_p(M5.car(l13339), $rjs_core.Keyword.make("mode")) !== false) {
          var if_res2249 = M5.cdr(l13339);
        } else {
          var if_res2249 = l13339;
        }
        var if_res2250 = if_res2249;
      }
      var l13340 = if_res2250;
      var if_res2251 = M5.null_p(l13340);
    } else {
      var if_res2251 = false;
    }
    return if_res2251;
  }, temp2246, M5.rnull, temp2243, open_input_output_file3344);
  var call_with_input_file29 = function(mode253346, path273347, proc283348) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var path3349 = path273347;
    var proc3350 = proc283348;
    if (false !== false) {
      var if_res2252 = $rjs_core.Symbol.make("binary");
    } else {
      var if_res2252 = mode253346;
    }
    var mode3351 = if_res2252;
    if (M4.path_string_p(path3349) !== false) {
      var if_res2253 = M5.rvoid();
    } else {
      var if_res2253 = M5.raise_argument_error($rjs_core.Symbol.make("call-with-input-file"), $rjs_core.UString.make("path-string?"), path3349);
    }
    if_res2253;
    if (M5.procedure_p(proc3350) !== false) {
      var if_res2254 = M5.procedure_arity_includes_p(proc3350, 1);
    } else {
      var if_res2254 = false;
    }
    if (if_res2254 !== false) {
      var if_res2255 = M5.rvoid();
    } else {
      var if_res2255 = M5.raise_argument_error($rjs_core.Symbol.make("call-with-input-file"), $rjs_core.UString.make("(input-port? . -> . any)"), proc3350);
    }
    if_res2255;
    if (M3.memq(mode3351, $rjs_core.Pair.makeList($rjs_core.Symbol.make("binary"), $rjs_core.Symbol.make("text"))) !== false) {
      var if_res2256 = M5.rvoid();
    } else {
      var if_res2256 = M5.raise_argument_error($rjs_core.Symbol.make("call-with-input-file"), binary_or_text_desc, mode3351);
    }
    if_res2256;
    return M5.call_with_input_file(path3349, proc3350, mode3351);
  };
  var unpack30 = function(given_kws3352, given_args3353, path273354, proc283355) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var mode263356 = M5.pair_p(given_kws3352);
    if (mode263356 !== false) {
      var if_res2257 = M5.car(given_args3353);
    } else {
      var if_res2257 = $rjs_core.Symbol.make("binary");
    }
    var mode253357 = if_res2257;
    return call_with_input_file29(mode253357, path273354, proc283355);
  };
  var cl2261 = function(given_kws3362, given_args3363, path3364, proc3365) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack30(given_kws3362, given_args3363, path3364, proc3365);
  };
  var temp2263 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2262 = {'4': cl2261}[arguments.length];
    if (fixed_lam2262 !== undefined) {
      return fixed_lam2262.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [4]);
  var temp2260 = $rjs_core.Pair.makeList($rjs_core.Keyword.make("mode"));
  var cl2258 = function(path3367, proc3368) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack30(M5.rnull, M5.rnull, path3367, proc3368);
  };
  var call_with_input_file3366 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2259 = {'2': cl2258}[arguments.length];
    if (fixed_lam2259 !== undefined) {
      return fixed_lam2259.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2]);
  var call_with_input_file31 = M0.__rjs_quoted__.make_optional_keyword_procedure(function(given_kws3358, given_argc3359) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.__eq_(given_argc3359, 4) !== false) {
      var l13360 = given_kws3358;
      if (M5.null_p(l13360) !== false) {
        var if_res2265 = l13360;
      } else {
        if (M5.eq_p(M5.car(l13360), $rjs_core.Keyword.make("mode")) !== false) {
          var if_res2264 = M5.cdr(l13360);
        } else {
          var if_res2264 = l13360;
        }
        var if_res2265 = if_res2264;
      }
      var l13361 = if_res2265;
      var if_res2266 = M5.null_p(l13361);
    } else {
      var if_res2266 = false;
    }
    return if_res2266;
  }, temp2263, M5.rnull, temp2260, call_with_input_file3366);
  var call_with_output_file38 = function(exists333369, mode323370, path363371, proc373372) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var path3373 = path363371;
    var proc3374 = proc373372;
    if (false !== false) {
      var if_res2267 = $rjs_core.Symbol.make("binary");
    } else {
      var if_res2267 = mode323370;
    }
    var mode3375 = if_res2267;
    if (false !== false) {
      var if_res2268 = $rjs_core.Symbol.make("error");
    } else {
      var if_res2268 = exists333369;
    }
    var exists3376 = if_res2268;
    if (M4.path_string_p(path3373) !== false) {
      var if_res2269 = M5.rvoid();
    } else {
      var if_res2269 = M5.raise_argument_error($rjs_core.Symbol.make("call-with-output-file"), $rjs_core.UString.make("path-string?"), path3373);
    }
    if_res2269;
    if (M5.procedure_p(proc3374) !== false) {
      var if_res2270 = M5.procedure_arity_includes_p(proc3374, 1);
    } else {
      var if_res2270 = false;
    }
    if (if_res2270 !== false) {
      var if_res2271 = M5.rvoid();
    } else {
      var if_res2271 = M5.raise_argument_error($rjs_core.Symbol.make("call-with-output-file"), $rjs_core.UString.make("(output-port? . -> . any)"), proc3374);
    }
    if_res2271;
    if (M3.memq(mode3375, $rjs_core.Pair.makeList($rjs_core.Symbol.make("binary"), $rjs_core.Symbol.make("text"))) !== false) {
      var if_res2272 = M5.rvoid();
    } else {
      var if_res2272 = M5.raise_argument_error($rjs_core.Symbol.make("call-with-output-file"), binary_or_text_desc, mode3375);
    }
    if_res2272;
    if (M3.memq(exists3376, exists_syms) !== false) {
      var if_res2273 = M5.rvoid();
    } else {
      var if_res2273 = M5.raise_argument_error($rjs_core.Symbol.make("call-with-output-file"), exists_desc, exists3376);
    }
    if_res2273;
    return M5.call_with_output_file(path3373, proc3374, mode3375, exists3376);
  };
  var unpack39 = function(given_kws3377, given_args3378, path363379, proc373380) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.pair_p(given_kws3377) !== false) {
      var if_res2274 = M5.eq_p($rjs_core.Keyword.make("exists"), M5.car(given_kws3377));
    } else {
      var if_res2274 = false;
    }
    var exists353381 = if_res2274;
    if (exists353381 !== false) {
      var if_res2275 = M5.car(given_args3378);
    } else {
      var if_res2275 = $rjs_core.Symbol.make("error");
    }
    var exists333382 = if_res2275;
    if (exists353381 !== false) {
      var if_res2276 = M5.cdr(given_kws3377);
    } else {
      var if_res2276 = given_kws3377;
    }
    var given_kws3383 = if_res2276;
    if (exists353381 !== false) {
      var if_res2277 = M5.cdr(given_args3378);
    } else {
      var if_res2277 = given_args3378;
    }
    var given_args3384 = if_res2277;
    var mode343385 = M5.pair_p(given_kws3383);
    if (mode343385 !== false) {
      var if_res2278 = M5.car(given_args3384);
    } else {
      var if_res2278 = $rjs_core.Symbol.make("binary");
    }
    var mode323386 = if_res2278;
    return call_with_output_file38(exists333382, mode323386, path363379, proc373380);
  };
  var cl2282 = function(given_kws3393, given_args3394, path3395, proc3396) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack39(given_kws3393, given_args3394, path3395, proc3396);
  };
  var temp2284 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2283 = {'4': cl2282}[arguments.length];
    if (fixed_lam2283 !== undefined) {
      return fixed_lam2283.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [4]);
  var temp2281 = $rjs_core.Pair.makeList($rjs_core.Keyword.make("exists"), $rjs_core.Keyword.make("mode"));
  var cl2279 = function(path3398, proc3399) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack39(M5.rnull, M5.rnull, path3398, proc3399);
  };
  var call_with_output_file3397 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2280 = {'2': cl2279}[arguments.length];
    if (fixed_lam2280 !== undefined) {
      return fixed_lam2280.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2]);
  var call_with_output_file40 = M0.__rjs_quoted__.make_optional_keyword_procedure(function(given_kws3387, given_argc3388) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.__eq_(given_argc3388, 4) !== false) {
      var l13389 = given_kws3387;
      if (M5.null_p(l13389) !== false) {
        var if_res2286 = l13389;
      } else {
        if (M5.eq_p(M5.car(l13389), $rjs_core.Keyword.make("exists")) !== false) {
          var if_res2285 = M5.cdr(l13389);
        } else {
          var if_res2285 = l13389;
        }
        var if_res2286 = if_res2285;
      }
      var l13390 = if_res2286;
      var l13391 = l13390;
      if (M5.null_p(l13391) !== false) {
        var if_res2288 = l13391;
      } else {
        if (M5.eq_p(M5.car(l13391), $rjs_core.Keyword.make("mode")) !== false) {
          var if_res2287 = M5.cdr(l13391);
        } else {
          var if_res2287 = l13391;
        }
        var if_res2288 = if_res2287;
      }
      var l13392 = if_res2288;
      var if_res2289 = M5.null_p(l13392);
    } else {
      var if_res2289 = false;
    }
    return if_res2289;
  }, temp2284, M5.rnull, temp2281, call_with_output_file3397);
  var with_input_from_file45 = function(mode413400, path433401, proc443402) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var path3403 = path433401;
    var proc3404 = proc443402;
    if (false !== false) {
      var if_res2290 = $rjs_core.Symbol.make("binary");
    } else {
      var if_res2290 = mode413400;
    }
    var mode3405 = if_res2290;
    if (M4.path_string_p(path3403) !== false) {
      var if_res2291 = M5.rvoid();
    } else {
      var if_res2291 = M5.raise_argument_error($rjs_core.Symbol.make("with-input-from-file"), $rjs_core.UString.make("path-string?"), path3403);
    }
    if_res2291;
    if (M5.procedure_p(proc3404) !== false) {
      var if_res2292 = M5.procedure_arity_includes_p(proc3404, 0);
    } else {
      var if_res2292 = false;
    }
    if (if_res2292 !== false) {
      var if_res2293 = M5.rvoid();
    } else {
      var if_res2293 = M5.raise_argument_error($rjs_core.Symbol.make("with-input-from-file"), $rjs_core.UString.make("(-> any)"), proc3404);
    }
    if_res2293;
    if (M3.memq(mode3405, $rjs_core.Pair.makeList($rjs_core.Symbol.make("binary"), $rjs_core.Symbol.make("text"))) !== false) {
      var if_res2294 = M5.rvoid();
    } else {
      var if_res2294 = M5.raise_argument_error($rjs_core.Symbol.make("with-input-from-file"), binary_or_text_desc, mode3405);
    }
    if_res2294;
    return M5.with_input_from_file(path3403, proc3404, mode3405);
  };
  var unpack46 = function(given_kws3406, given_args3407, path433408, proc443409) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var mode423410 = M5.pair_p(given_kws3406);
    if (mode423410 !== false) {
      var if_res2295 = M5.car(given_args3407);
    } else {
      var if_res2295 = $rjs_core.Symbol.make("binary");
    }
    var mode413411 = if_res2295;
    return with_input_from_file45(mode413411, path433408, proc443409);
  };
  var cl2299 = function(given_kws3416, given_args3417, path3418, proc3419) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack46(given_kws3416, given_args3417, path3418, proc3419);
  };
  var temp2301 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2300 = {'4': cl2299}[arguments.length];
    if (fixed_lam2300 !== undefined) {
      return fixed_lam2300.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [4]);
  var temp2298 = $rjs_core.Pair.makeList($rjs_core.Keyword.make("mode"));
  var cl2296 = function(path3421, proc3422) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack46(M5.rnull, M5.rnull, path3421, proc3422);
  };
  var with_input_from_file3420 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2297 = {'2': cl2296}[arguments.length];
    if (fixed_lam2297 !== undefined) {
      return fixed_lam2297.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2]);
  var with_input_from_file47 = M0.__rjs_quoted__.make_optional_keyword_procedure(function(given_kws3412, given_argc3413) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.__eq_(given_argc3413, 4) !== false) {
      var l13414 = given_kws3412;
      if (M5.null_p(l13414) !== false) {
        var if_res2303 = l13414;
      } else {
        if (M5.eq_p(M5.car(l13414), $rjs_core.Keyword.make("mode")) !== false) {
          var if_res2302 = M5.cdr(l13414);
        } else {
          var if_res2302 = l13414;
        }
        var if_res2303 = if_res2302;
      }
      var l13415 = if_res2303;
      var if_res2304 = M5.null_p(l13415);
    } else {
      var if_res2304 = false;
    }
    return if_res2304;
  }, temp2301, M5.rnull, temp2298, with_input_from_file3420);
  var with_output_to_file54 = function(exists493423, mode483424, path523425, proc533426) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var path3427 = path523425;
    var proc3428 = proc533426;
    if (false !== false) {
      var if_res2305 = $rjs_core.Symbol.make("binary");
    } else {
      var if_res2305 = mode483424;
    }
    var mode3429 = if_res2305;
    if (false !== false) {
      var if_res2306 = $rjs_core.Symbol.make("error");
    } else {
      var if_res2306 = exists493423;
    }
    var exists3430 = if_res2306;
    if (M4.path_string_p(path3427) !== false) {
      var if_res2307 = M5.rvoid();
    } else {
      var if_res2307 = M5.raise_argument_error($rjs_core.Symbol.make("with-output-to-file"), $rjs_core.UString.make("path-string?"), path3427);
    }
    if_res2307;
    if (M5.procedure_p(proc3428) !== false) {
      var if_res2308 = M5.procedure_arity_includes_p(proc3428, 0);
    } else {
      var if_res2308 = false;
    }
    if (if_res2308 !== false) {
      var if_res2309 = M5.rvoid();
    } else {
      var if_res2309 = M5.raise_argument_error($rjs_core.Symbol.make("with-output-to-file"), $rjs_core.UString.make("(-> any)"), proc3428);
    }
    if_res2309;
    if (M3.memq(mode3429, $rjs_core.Pair.makeList($rjs_core.Symbol.make("binary"), $rjs_core.Symbol.make("text"))) !== false) {
      var if_res2310 = M5.rvoid();
    } else {
      var if_res2310 = M5.raise_argument_error($rjs_core.Symbol.make("with-output-to-file"), binary_or_text_desc, mode3429);
    }
    if_res2310;
    if (M3.memq(exists3430, exists_syms) !== false) {
      var if_res2311 = M5.rvoid();
    } else {
      var if_res2311 = M5.raise_argument_error($rjs_core.Symbol.make("with-output-to-file"), exists_desc, exists3430);
    }
    if_res2311;
    return M5.with_output_to_file(path3427, proc3428, mode3429, exists3430);
  };
  var unpack55 = function(given_kws3431, given_args3432, path523433, proc533434) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.pair_p(given_kws3431) !== false) {
      var if_res2312 = M5.eq_p($rjs_core.Keyword.make("exists"), M5.car(given_kws3431));
    } else {
      var if_res2312 = false;
    }
    var exists513435 = if_res2312;
    if (exists513435 !== false) {
      var if_res2313 = M5.car(given_args3432);
    } else {
      var if_res2313 = $rjs_core.Symbol.make("error");
    }
    var exists493436 = if_res2313;
    if (exists513435 !== false) {
      var if_res2314 = M5.cdr(given_kws3431);
    } else {
      var if_res2314 = given_kws3431;
    }
    var given_kws3437 = if_res2314;
    if (exists513435 !== false) {
      var if_res2315 = M5.cdr(given_args3432);
    } else {
      var if_res2315 = given_args3432;
    }
    var given_args3438 = if_res2315;
    var mode503439 = M5.pair_p(given_kws3437);
    if (mode503439 !== false) {
      var if_res2316 = M5.car(given_args3438);
    } else {
      var if_res2316 = $rjs_core.Symbol.make("binary");
    }
    var mode483440 = if_res2316;
    return with_output_to_file54(exists493436, mode483440, path523433, proc533434);
  };
  var cl2320 = function(given_kws3447, given_args3448, path3449, proc3450) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack55(given_kws3447, given_args3448, path3449, proc3450);
  };
  var temp2322 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2321 = {'4': cl2320}[arguments.length];
    if (fixed_lam2321 !== undefined) {
      return fixed_lam2321.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [4]);
  var temp2319 = $rjs_core.Pair.makeList($rjs_core.Keyword.make("exists"), $rjs_core.Keyword.make("mode"));
  var cl2317 = function(path3452, proc3453) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack55(M5.rnull, M5.rnull, path3452, proc3453);
  };
  var with_output_to_file3451 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2318 = {'2': cl2317}[arguments.length];
    if (fixed_lam2318 !== undefined) {
      return fixed_lam2318.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2]);
  var with_output_to_file56 = M0.__rjs_quoted__.make_optional_keyword_procedure(function(given_kws3441, given_argc3442) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.__eq_(given_argc3442, 4) !== false) {
      var l13443 = given_kws3441;
      if (M5.null_p(l13443) !== false) {
        var if_res2324 = l13443;
      } else {
        if (M5.eq_p(M5.car(l13443), $rjs_core.Keyword.make("exists")) !== false) {
          var if_res2323 = M5.cdr(l13443);
        } else {
          var if_res2323 = l13443;
        }
        var if_res2324 = if_res2323;
      }
      var l13444 = if_res2324;
      var l13445 = l13444;
      if (M5.null_p(l13445) !== false) {
        var if_res2326 = l13445;
      } else {
        if (M5.eq_p(M5.car(l13445), $rjs_core.Keyword.make("mode")) !== false) {
          var if_res2325 = M5.cdr(l13445);
        } else {
          var if_res2325 = l13445;
        }
        var if_res2326 = if_res2325;
      }
      var l13446 = if_res2326;
      var if_res2327 = M5.null_p(l13446);
    } else {
      var if_res2327 = false;
    }
    return if_res2327;
  }, temp2322, M5.rnull, temp2319, with_output_to_file3451);
  var call_with_input_file_times_61 = function(mode573454, path593455, proc603456) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var path3457 = path593455;
    var proc3458 = proc603456;
    if (false !== false) {
      var if_res2328 = $rjs_core.Symbol.make("binary");
    } else {
      var if_res2328 = mode573454;
    }
    var mode3459 = if_res2328;
    if (M4.path_string_p(path3457) !== false) {
      var if_res2329 = M5.rvoid();
    } else {
      var if_res2329 = M5.raise_argument_error($rjs_core.Symbol.make("call-with-input-file*"), $rjs_core.UString.make("path-string?"), path3457);
    }
    if_res2329;
    if (M5.procedure_p(proc3458) !== false) {
      var if_res2330 = M5.procedure_arity_includes_p(proc3458, 1);
    } else {
      var if_res2330 = false;
    }
    if (if_res2330 !== false) {
      var if_res2331 = M5.rvoid();
    } else {
      var if_res2331 = M5.raise_argument_error($rjs_core.Symbol.make("call-with-input-file*"), $rjs_core.UString.make("(input-port? . -> . any)"), proc3458);
    }
    if_res2331;
    if (M3.memq(mode3459, $rjs_core.Pair.makeList($rjs_core.Symbol.make("binary"), $rjs_core.Symbol.make("text"))) !== false) {
      var if_res2332 = M5.rvoid();
    } else {
      var if_res2332 = M5.raise_argument_error($rjs_core.Symbol.make("call-with-input-file*"), binary_or_text_desc, mode3459);
    }
    if_res2332;
    var p3460 = M5.open_input_file(path3457, mode3459);
    return M5.dynamic_wind(M5.rvoid, function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return proc3458(p3460);
    }, function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M5.close_input_port(p3460);
    });
  };
  var unpack62 = function(given_kws3461, given_args3462, path593463, proc603464) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var mode583465 = M5.pair_p(given_kws3461);
    if (mode583465 !== false) {
      var if_res2333 = M5.car(given_args3462);
    } else {
      var if_res2333 = $rjs_core.Symbol.make("binary");
    }
    var mode573466 = if_res2333;
    return call_with_input_file_times_61(mode573466, path593463, proc603464);
  };
  var cl2337 = function(given_kws3471, given_args3472, path3473, proc3474) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack62(given_kws3471, given_args3472, path3473, proc3474);
  };
  var temp2339 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2338 = {'4': cl2337}[arguments.length];
    if (fixed_lam2338 !== undefined) {
      return fixed_lam2338.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [4]);
  var temp2336 = $rjs_core.Pair.makeList($rjs_core.Keyword.make("mode"));
  var cl2334 = function(path3476, proc3477) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack62(M5.rnull, M5.rnull, path3476, proc3477);
  };
  var call_with_input_file_times_3475 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2335 = {'2': cl2334}[arguments.length];
    if (fixed_lam2335 !== undefined) {
      return fixed_lam2335.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2]);
  var call_with_input_file_times_63 = M0.__rjs_quoted__.make_optional_keyword_procedure(function(given_kws3467, given_argc3468) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.__eq_(given_argc3468, 4) !== false) {
      var l13469 = given_kws3467;
      if (M5.null_p(l13469) !== false) {
        var if_res2341 = l13469;
      } else {
        if (M5.eq_p(M5.car(l13469), $rjs_core.Keyword.make("mode")) !== false) {
          var if_res2340 = M5.cdr(l13469);
        } else {
          var if_res2340 = l13469;
        }
        var if_res2341 = if_res2340;
      }
      var l13470 = if_res2341;
      var if_res2342 = M5.null_p(l13470);
    } else {
      var if_res2342 = false;
    }
    return if_res2342;
  }, temp2339, M5.rnull, temp2336, call_with_input_file_times_3475);
  var call_with_output_file_times_70 = function(exists653478, mode643479, path683480, proc693481) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var path3482 = path683480;
    var proc3483 = proc693481;
    if (false !== false) {
      var if_res2343 = $rjs_core.Symbol.make("binary");
    } else {
      var if_res2343 = mode643479;
    }
    var mode3484 = if_res2343;
    if (false !== false) {
      var if_res2344 = $rjs_core.Symbol.make("error");
    } else {
      var if_res2344 = exists653478;
    }
    var exists3485 = if_res2344;
    if (M4.path_string_p(path3482) !== false) {
      var if_res2345 = M5.rvoid();
    } else {
      var if_res2345 = M5.raise_argument_error($rjs_core.Symbol.make("call-with-output-file*"), $rjs_core.UString.make("path-string?"), path3482);
    }
    if_res2345;
    if (M5.procedure_p(proc3483) !== false) {
      var if_res2346 = M5.procedure_arity_includes_p(proc3483, 1);
    } else {
      var if_res2346 = false;
    }
    if (if_res2346 !== false) {
      var if_res2347 = M5.rvoid();
    } else {
      var if_res2347 = M5.raise_argument_error($rjs_core.Symbol.make("call-with-output-file*"), $rjs_core.UString.make("(output-port? . -> . any)"), proc3483);
    }
    if_res2347;
    if (M3.memq(mode3484, $rjs_core.Pair.makeList($rjs_core.Symbol.make("binary"), $rjs_core.Symbol.make("text"))) !== false) {
      var if_res2348 = M5.rvoid();
    } else {
      var if_res2348 = M5.raise_argument_error($rjs_core.Symbol.make("call-with-output-file*"), binary_or_text_desc, mode3484);
    }
    if_res2348;
    if (M3.memq(exists3485, exists_syms) !== false) {
      var if_res2349 = M5.rvoid();
    } else {
      var if_res2349 = M5.raise_argument_error($rjs_core.Symbol.make("call-with-output-file*"), exists_desc, exists3485);
    }
    if_res2349;
    var p3486 = M5.open_output_file(path3482, mode3484, exists3485);
    return M5.dynamic_wind(M5.rvoid, function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return proc3483(p3486);
    }, function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M5.close_output_port(p3486);
    });
  };
  var unpack71 = function(given_kws3487, given_args3488, path683489, proc693490) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.pair_p(given_kws3487) !== false) {
      var if_res2350 = M5.eq_p($rjs_core.Keyword.make("exists"), M5.car(given_kws3487));
    } else {
      var if_res2350 = false;
    }
    var exists673491 = if_res2350;
    if (exists673491 !== false) {
      var if_res2351 = M5.car(given_args3488);
    } else {
      var if_res2351 = $rjs_core.Symbol.make("error");
    }
    var exists653492 = if_res2351;
    if (exists673491 !== false) {
      var if_res2352 = M5.cdr(given_kws3487);
    } else {
      var if_res2352 = given_kws3487;
    }
    var given_kws3493 = if_res2352;
    if (exists673491 !== false) {
      var if_res2353 = M5.cdr(given_args3488);
    } else {
      var if_res2353 = given_args3488;
    }
    var given_args3494 = if_res2353;
    var mode663495 = M5.pair_p(given_kws3493);
    if (mode663495 !== false) {
      var if_res2354 = M5.car(given_args3494);
    } else {
      var if_res2354 = $rjs_core.Symbol.make("binary");
    }
    var mode643496 = if_res2354;
    return call_with_output_file_times_70(exists653492, mode643496, path683489, proc693490);
  };
  var cl2358 = function(given_kws3503, given_args3504, path3505, proc3506) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack71(given_kws3503, given_args3504, path3505, proc3506);
  };
  var temp2360 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2359 = {'4': cl2358}[arguments.length];
    if (fixed_lam2359 !== undefined) {
      return fixed_lam2359.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [4]);
  var temp2357 = $rjs_core.Pair.makeList($rjs_core.Keyword.make("exists"), $rjs_core.Keyword.make("mode"));
  var cl2355 = function(path3508, proc3509) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack71(M5.rnull, M5.rnull, path3508, proc3509);
  };
  var call_with_output_file_times_3507 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2356 = {'2': cl2355}[arguments.length];
    if (fixed_lam2356 !== undefined) {
      return fixed_lam2356.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2]);
  var call_with_output_file_times_72 = M0.__rjs_quoted__.make_optional_keyword_procedure(function(given_kws3497, given_argc3498) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.__eq_(given_argc3498, 4) !== false) {
      var l13499 = given_kws3497;
      if (M5.null_p(l13499) !== false) {
        var if_res2362 = l13499;
      } else {
        if (M5.eq_p(M5.car(l13499), $rjs_core.Keyword.make("exists")) !== false) {
          var if_res2361 = M5.cdr(l13499);
        } else {
          var if_res2361 = l13499;
        }
        var if_res2362 = if_res2361;
      }
      var l13500 = if_res2362;
      var l13501 = l13500;
      if (M5.null_p(l13501) !== false) {
        var if_res2364 = l13501;
      } else {
        if (M5.eq_p(M5.car(l13501), $rjs_core.Keyword.make("mode")) !== false) {
          var if_res2363 = M5.cdr(l13501);
        } else {
          var if_res2363 = l13501;
        }
        var if_res2364 = if_res2363;
      }
      var l13502 = if_res2364;
      var if_res2365 = M5.null_p(l13502);
    } else {
      var if_res2365 = false;
    }
    return if_res2365;
  }, temp2360, M5.rnull, temp2357, call_with_output_file_times_3507);
  var core763510 = function(build_p733511, dir753512) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.eq_p(dir753512, M6.__rjs_quoted__.unsafe_undefined) !== false) {
      var if_res2366 = M5.current_directory();
    } else {
      var if_res2366 = dir753512;
    }
    var dir3513 = if_res2366;
    if (false !== false) {
      var if_res2367 = false;
    } else {
      var if_res2367 = build_p733511;
    }
    var build_p3514 = if_res2367;
    if (M4.path_string_p(dir3513) !== false) {
      var if_res2368 = M5.rvoid();
    } else {
      var if_res2368 = M5.raise_argument_error($rjs_core.Symbol.make("directory-list"), $rjs_core.UString.make("path-string?"), dir3513);
    }
    if_res2368;
    var content3515 = M2.sort(M5.directory_list(dir3513), M5.path_lt__p);
    if (build_p3514 !== false) {
      var if_res2369 = M1.map(function(i3516) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M5.build_path(dir3513, i3516);
      }, content3515);
    } else {
      var if_res2369 = content3515;
    }
    return if_res2369;
  };
  var unpack773517 = function(given_kws3518, given_args3519, dir753520) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var build_p743521 = M5.pair_p(given_kws3518);
    if (build_p743521 !== false) {
      var if_res2370 = M5.car(given_args3519);
    } else {
      var if_res2370 = false;
    }
    var build_p733522 = if_res2370;
    return core763510(build_p733522, dir753520);
  };
  var cl2375 = function(given_kws3527, given_args3528) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack773517(given_kws3527, given_args3528, M6.__rjs_quoted__.unsafe_undefined);
  };
  var cl2376 = function(given_kws3529, given_args3530, dir753531) {
    if (arguments.length !== 3) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack773517(given_kws3529, given_args3530, dir753531);
  };
  var temp2378 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2377 = {
      '2': cl2375,
      '3': cl2376
    }[arguments.length];
    if (fixed_lam2377 !== undefined) {
      return fixed_lam2377.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [2, 3]);
  var temp2374 = $rjs_core.Pair.makeList($rjs_core.Keyword.make("build?"));
  var cl2371 = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack773517(M5.rnull, M5.rnull, M6.__rjs_quoted__.unsafe_undefined);
  };
  var cl2372 = function(dir753533) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return unpack773517(M5.rnull, M5.rnull, dir753533);
  };
  var directory_list3532 = $rjs_core.attachProcedureArity(function() {
    var fixed_lam2373 = {
      '0': cl2371,
      '1': cl2372
    }[arguments.length];
    if (fixed_lam2373 !== undefined) {
      return fixed_lam2373.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [0, 1]);
  var directory_list = M0.__rjs_quoted__.make_optional_keyword_procedure(function(given_kws3523, given_argc3524) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M5.__gt__eq_(given_argc3524, 2) !== false) {
      var if_res2379 = M5.__lt__eq_(given_argc3524, 3);
    } else {
      var if_res2379 = false;
    }
    if (if_res2379 !== false) {
      var l13525 = given_kws3523;
      if (M5.null_p(l13525) !== false) {
        var if_res2381 = l13525;
      } else {
        if (M5.eq_p(M5.car(l13525), $rjs_core.Keyword.make("build?")) !== false) {
          var if_res2380 = M5.cdr(l13525);
        } else {
          var if_res2380 = l13525;
        }
        var if_res2381 = if_res2380;
      }
      var l13526 = if_res2381;
      var if_res2382 = M5.null_p(l13526);
    } else {
      var if_res2382 = false;
    }
    return if_res2382;
  }, temp2378, M5.rnull, temp2374, directory_list3532);
  var __rjs_quoted__ = {};
  __rjs_quoted__.open_input_output_file22 = open_input_output_file22;
  __rjs_quoted__.call_with_input_file31 = call_with_input_file31;
  __rjs_quoted__.open_input_file6 = open_input_file6;
  __rjs_quoted__.call_with_output_file40 = call_with_output_file40;
  __rjs_quoted__.call_with_input_file_times_61 = call_with_input_file_times_61;
  __rjs_quoted__.call_with_output_file_times_70 = call_with_output_file_times_70;
  __rjs_quoted__.open_output_file14 = open_output_file14;
  __rjs_quoted__.open_output_file16 = open_output_file16;
  __rjs_quoted__.with_output_to_file54 = with_output_to_file54;
  __rjs_quoted__.with_output_to_file56 = with_output_to_file56;
  __rjs_quoted__.with_input_from_file45 = with_input_from_file45;
  __rjs_quoted__.call_with_input_file29 = call_with_input_file29;
  __rjs_quoted__.call_with_input_file_times_63 = call_with_input_file_times_63;
  __rjs_quoted__.call_with_output_file38 = call_with_output_file38;
  __rjs_quoted__.with_input_from_file47 = with_input_from_file47;
  __rjs_quoted__.open_input_file8 = open_input_file8;
  __rjs_quoted__.open_input_output_file24 = open_input_output_file24;
  __rjs_quoted__.call_with_output_file_times_72 = call_with_output_file_times_72;
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get __directory_list() {
      return directory_list;
    }
  };
})();
var $__modules_47_version_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "modules/version.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var __times_version_times_ = $rjs_core.UString.make("0.8.1");
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get __times_version_times_() {
      return __times_version_times_;
    }
  };
})();
var $__modules_47_code_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "modules/code.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__collects_47_racket_47_private_47_kw_45_file_46_rkt_46_js__;
  var M1 = $__modules_47_version_46_rkt_46_js__;
  var M2 = $__collects_47_racket_47_private_47_kw_46_rkt_46_js__;
  var M3 = $__collects_47_racket_47_private_47_map_46_rkt_46_js__;
  var M4 = $__runtime_47_kernel_46_rkt_46_js__;
  var M5 = $__collects_47_racket_47_list_46_rkt_46_js__;
  var __times_default_header_times_ = M4.list(M4.string_append($rjs_core.UString.make("Generated by the Waxeye Parser Generator - version "), M1.__times_version_times_), $rjs_core.UString.make("www.waxeye.org"));
  var __times_indent_unit_times_ = 4;
  var __times_indent_level_times_ = 0;
  var indent_unit_bang_ = function(val1577) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    __times_indent_unit_times_ = val1577;
    return null;
  };
  var dump_string = function(s1578, path1579) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var __dot__dot__dot__by_src_by_waxeye_by_code_dot_rkt__5411580 = M0.__rjs_quoted__.call_with_output_file40;
    var path11581 = path1579;
    var temp21582 = function(p1584) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      return M4.display(s1578, p1584);
    };
    var temp31583 = $rjs_core.Symbol.make("replace");
    if (M4.variable_reference_constant_p(M0.__rjs_quoted__.call_with_output_file40) !== false) {
      var if_res939 = M0.__rjs_quoted__.call_with_output_file38(temp31583, $rjs_core.Symbol.make("binary"), path11581, temp21582);
    } else {
      var if_res939 = M4.checked_procedure_check_and_extract(M2.__rjs_quoted__.struct_keyword_procedure, __dot__dot__dot__by_src_by_waxeye_by_code_dot_rkt__5411580, M2.__rjs_quoted__.keyword_procedure_extract, $rjs_core.Pair.makeList($rjs_core.Keyword.make("exists")), 4)($rjs_core.Pair.makeList($rjs_core.Keyword.make("exists")), M4.list(temp31583), path11581, temp21582);
    }
    return if_res939;
  };
  var ind = function() {
    if (arguments.length !== 0) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.apply(M4.string_append, M5.make_list(__times_indent_level_times_, M4.make_string(__times_indent_unit_times_, $rjs_core.Char.charFromCodepoint(32))));
  };
  var indent_plus_ = function(n1585) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    __times_indent_level_times_ = __times_indent_level_times_ + n1585;
    return null;
  };
  var indent_ = function(n1586) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    __times_indent_level_times_ = __times_indent_level_times_ - n1586;
    return null;
  };
  var bool__gt_s = function(b1587) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (b1587 !== false) {
      var if_res940 = $rjs_core.UString.make("true");
    } else {
      var if_res940 = $rjs_core.UString.make("false");
    }
    return if_res940;
  };
  var comment_bookend = function(top1588, unit1589, bot1590, lines1591) {
    if (arguments.length !== 4) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.string_append(ind(), top1588, $rjs_core.UString.make("\n"), comment_base(unit1589, lines1591), ind(), bot1590, $rjs_core.UString.make("\n"));
  };
  var comment_base = function(unit1592, lines1593) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.apply(M4.string_append, M3.map(function(a1594) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.equal_p($rjs_core.UString.make(""), a1594) !== false) {
        var if_res941 = M4.format($rjs_core.UString.make("~a~a\n"), ind(), unit1592);
      } else {
        var if_res941 = M4.format($rjs_core.UString.make("~a~a ~a\n"), ind(), unit1592, a1594);
      }
      return if_res941;
    }, lines1593));
  };
  var script_comment = function(lines1595) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return comment_base($rjs_core.UString.make("#"), lines1595);
  };
  var camel_case_lower = function(s1596) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var sl1597 = M4.string__gt_list(s1596);
    if (M4.null_p(sl1597) !== false) {
      var if_res942 = $rjs_core.UString.make("");
    } else {
      var if_res942 = M4.list__gt_string(M4.cons(M4.char_downcase(M4.car(sl1597)), M4.cdr(sl1597)));
    }
    return if_res942;
  };
  var camel_case_upper = function(s1598) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var sl1599 = M4.string__gt_list(s1598);
    if (M4.null_p(sl1599) !== false) {
      var if_res943 = $rjs_core.UString.make("");
    } else {
      var if_res943 = M4.list__gt_string(M4.cons(M4.char_upcase(M4.car(sl1599)), M4.cdr(sl1599)));
    }
    return if_res943;
  };
  var string__gt_upper = function(s1600) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M4.list__gt_string(M3.map(M4.char_upcase, M4.string__gt_list(s1600)));
  };
  var escape_for_java_char_p = function(ch1601) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var or_part1602 = M4.equal_p(ch1601, $rjs_core.Char.charFromCodepoint(92));
    if (or_part1602 !== false) {
      var if_res944 = or_part1602;
    } else {
      var if_res944 = M4.equal_p(ch1601, $rjs_core.Char.charFromCodepoint(39));
    }
    return if_res944;
  };
  var escape_java_string = function(s1603) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var escape_java_string_iter1604 = function(sl1605) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M4.null_p(sl1605) !== false) {
        var if_res946 = $rjs_core.Pair.makeList();
      } else {
        if (M4.equal_p(M4.car(sl1605), $rjs_core.Char.charFromCodepoint(34)) !== false) {
          var if_res945 = M4.cons($rjs_core.Char.charFromCodepoint(92), M4.cons($rjs_core.Char.charFromCodepoint(34), escape_java_string_iter1604(M4.cdr(sl1605))));
        } else {
          var if_res945 = M4.cons(M4.car(sl1605), escape_java_string_iter1604(M4.cdr(sl1605)));
        }
        var if_res946 = if_res945;
      }
      return if_res946;
    };
    return M4.list__gt_string(escape_java_string_iter1604(M4.string__gt_list(s1603)));
  };
  var __rjs_quoted__ = {};
  __rjs_quoted__.indent_ = indent_;
  __rjs_quoted__.indent_plus_ = indent_plus_;
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get indent_unit_bang_() {
      return indent_unit_bang_;
    },
    get indent_plus_() {
      return indent_plus_;
    },
    get indent_() {
      return indent_;
    },
    get comment_bookend() {
      return comment_bookend;
    },
    get camel_case_upper() {
      return camel_case_upper;
    },
    get string__gt_upper() {
      return string__gt_upper;
    },
    get escape_for_java_char_p() {
      return escape_for_java_char_p;
    },
    get camel_case_lower() {
      return camel_case_lower;
    },
    get comment_base() {
      return comment_base;
    },
    get __times_default_header_times_() {
      return __times_default_header_times_;
    },
    get __times_indent_level_times_() {
      return __times_indent_level_times_;
    },
    get dump_string() {
      return dump_string;
    },
    get escape_java_string() {
      return escape_java_string;
    },
    get script_comment() {
      return script_comment;
    },
    get ind() {
      return ind;
    },
    get __times_indent_unit_times_() {
      return __times_indent_unit_times_;
    },
    get bool__gt_s() {
      return bool__gt_s;
    }
  };
})();
var $__modules_47_javascript_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "modules/javascript.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__runtime_47_paramz_46_rkt_46_js__;
  var M1 = $__collects_47_racket_47_private_47_map_46_rkt_46_js__;
  var M2 = $__modules_47_code_46_rkt_46_js__;
  var M3 = $__modules_47_gen_46_rkt_46_js__;
  var M4 = $__collects_47_waxeye_47_ast_46_rkt_46_js__;
  var M5 = $__runtime_47_kernel_46_rkt_46_js__;
  var M6 = $__collects_47_racket_47_list_46_rkt_46_js__;
  var M7 = $__runtime_47_unsafe_46_rkt_46_js__;
  var javascript_comment = function(lines619) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M2.comment_bookend($rjs_core.UString.make("/*"), $rjs_core.UString.make(" *"), $rjs_core.UString.make(" */"), lines619);
  };
  var typescript = M5.make_parameter(false);
  var gen_typescript = function(grammar620, path621) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    M2.indent_unit_bang_(2);
    if (M3.__times_name_prefix_times_ !== false) {
      var if_res308 = M5.string_append(M5.string_downcase(M3.__times_name_prefix_times_), $rjs_core.UString.make("_parser.ts"));
    } else {
      var if_res308 = $rjs_core.UString.make("parser.ts");
    }
    var file_path622 = M5.string_append(path621, if_res308);
    M2.dump_string(gen_typescript_parser(grammar620), file_path622);
    return M5.list(file_path622);
  };
  var gen_javascript = function(grammar623, path624) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    M2.indent_unit_bang_(4);
    if (M3.__times_name_prefix_times_ !== false) {
      var if_res309 = M5.string_append(M5.string_downcase(M3.__times_name_prefix_times_), $rjs_core.UString.make("_parser.js"));
    } else {
      var if_res309 = $rjs_core.UString.make("parser.js");
    }
    var file_path625 = M5.string_append(path624, if_res309);
    M2.dump_string(gen_javascript_parser(grammar623), file_path625);
    return M5.list(file_path625);
  };
  var gen_char = function(t626) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var temp315 = $rjs_core.UString.make("'~a~a'");
    if (M2.escape_for_java_char_p(t626) !== false) {
      var if_res314 = $rjs_core.UString.make("\\");
    } else {
      var if_res314 = $rjs_core.UString.make("");
    }
    if (M5.equal_p(t626, $rjs_core.Char.charFromCodepoint(34)) !== false) {
      var if_res313 = $rjs_core.UString.make("\\\"");
    } else {
      if (M5.equal_p(t626, $rjs_core.Char.charFromCodepoint(10)) !== false) {
        var if_res312 = $rjs_core.UString.make("\\n");
      } else {
        if (M5.equal_p(t626, $rjs_core.Char.charFromCodepoint(9)) !== false) {
          var if_res311 = $rjs_core.UString.make("\\t");
        } else {
          if (M5.equal_p(t626, $rjs_core.Char.charFromCodepoint(13)) !== false) {
            var if_res310 = $rjs_core.UString.make("\\r");
          } else {
            var if_res310 = t626;
          }
          var if_res311 = if_res310;
        }
        var if_res312 = if_res311;
      }
      var if_res313 = if_res312;
    }
    return M5.format(temp315, if_res314, if_res313);
  };
  var gen_char_class = function(a627) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var gen_char_class_item628 = function(a629) {
      if (arguments.length !== 1) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      if (M5.char_p(a629) !== false) {
        var if_res316 = M5.format($rjs_core.UString.make("0x~x"), M5.char__gt_integer(a629));
      } else {
        var if_res316 = M5.format($rjs_core.UString.make("[0x~x, 0x~x]"), M5.char__gt_integer(M5.car(a629)), M5.char__gt_integer(M5.cdr(a629)));
      }
      return if_res316;
    };
    if (M5.symbol_p(a627) !== false) {
      var if_res319 = $rjs_core.UString.make("-1");
    } else {
      if (M5.list_p(a627) !== false) {
        var if_res318 = gen_array(gen_char_class_item628, a627);
      } else {
        if (M5.char_p(a627) !== false) {
          var if_res317 = gen_char_class_item628(a627);
        } else {
          var if_res317 = a627;
        }
        var if_res318 = if_res317;
      }
      var if_res319 = if_res318;
    }
    return if_res319;
  };
  var exp_id_map = M5.make_hash($rjs_core.Pair.makeList($rjs_core.Pair.make($rjs_core.UString.make("NT"), 1), $rjs_core.Pair.make($rjs_core.UString.make("ALT"), 2), $rjs_core.Pair.make($rjs_core.UString.make("SEQ"), 3), $rjs_core.Pair.make($rjs_core.UString.make("PLUS"), 4), $rjs_core.Pair.make($rjs_core.UString.make("STAR"), 5), $rjs_core.Pair.make($rjs_core.UString.make("OPT"), 6), $rjs_core.Pair.make($rjs_core.UString.make("AND"), 7), $rjs_core.Pair.make($rjs_core.UString.make("NOT"), 8), $rjs_core.Pair.make($rjs_core.UString.make("VOID"), 9), $rjs_core.Pair.make($rjs_core.UString.make("ANY_CHAR"), 10), $rjs_core.Pair.make($rjs_core.UString.make("CHAR"), 11), $rjs_core.Pair.make($rjs_core.UString.make("CHAR_CLASS"), 12)));
  var gen_exp = function(a630) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var tmp633 = M4.ast_t(a630);
    if (M5.symbol_p(tmp633) !== false) {
      var if_res320 = M5.hash_ref($rjs_core.Hash.makeEq([[$rjs_core.Symbol.make("sequence"), 11], [$rjs_core.Symbol.make("identifier"), 1], [$rjs_core.Symbol.make("optional"), 7], [$rjs_core.Symbol.make("not"), 6], [$rjs_core.Symbol.make("closure"), 8], [$rjs_core.Symbol.make("charClass"), 3], [$rjs_core.Symbol.make("void"), 4], [$rjs_core.Symbol.make("alternation"), 10], [$rjs_core.Symbol.make("plus"), 9], [$rjs_core.Symbol.make("wildCard"), 12], [$rjs_core.Symbol.make("and"), 5], [$rjs_core.Symbol.make("literal"), 2]], false), tmp633, function() {
        if (arguments.length !== 0) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return 0;
      });
    } else {
      var if_res320 = 0;
    }
    var index634 = if_res320;
    if (M7.unsafe_fx_lt_(index634, 6) !== false) {
      if (M7.unsafe_fx_lt_(index634, 2) !== false) {
        if (M7.unsafe_fx_lt_(index634, 1) !== false) {
          var if_res321 = M5.format($rjs_core.UString.make("unknown:~a"), M4.ast_t(a630));
        } else {
          var if_res321 = M5.values($rjs_core.UString.make("NT"), M5.format($rjs_core.UString.make("name: '~a'"), M5.list__gt_string(M4.ast_c(a630))));
        }
        var if_res326 = if_res321;
      } else {
        if (M7.unsafe_fx_lt_(index634, 3) !== false) {
          if (M5.__lt__eq_(M5.length(M4.ast_c(a630)), 1) !== false) {
            var if_res322 = M5.values($rjs_core.UString.make("CHAR"), M5.format($rjs_core.UString.make("char: ~a"), gen_char(M5.car(M4.ast_c(a630)))));
          } else {
            var if_res322 = M5.values($rjs_core.UString.make("SEQ"), M5.format($rjs_core.UString.make("exprs: ~a"), gen_array(gen_exp, M1.map(function(b635) {
              if (arguments.length !== 1) {
                throw $rjs_core.racketContractError("arity mismatch");
              } else {}
              return M4.__rjs_quoted__.ast1($rjs_core.Symbol.make("literal"), M5.cons(b635, $rjs_core.Pair.makeList()), $rjs_core.Pair.makeList());
            }, M4.ast_c(a630)))));
          }
          var if_res325 = if_res322;
        } else {
          if (M7.unsafe_fx_lt_(index634, 4) !== false) {
            var if_res324 = M5.values($rjs_core.UString.make("CHAR_CLASS"), M5.format($rjs_core.UString.make("codepoints: ~a"), gen_char_class(M4.ast_c(a630))));
          } else {
            if (M7.unsafe_fx_lt_(index634, 5) !== false) {
              var if_res323 = M5.values($rjs_core.UString.make("VOID"), M5.format($rjs_core.UString.make("expr: ~a"), gen_exp(M5.car(M4.ast_c(a630)))));
            } else {
              var if_res323 = M5.values($rjs_core.UString.make("AND"), M5.format($rjs_core.UString.make("expr: ~a"), gen_exp(M5.car(M4.ast_c(a630)))));
            }
            var if_res324 = if_res323;
          }
          var if_res325 = if_res324;
        }
        var if_res326 = if_res325;
      }
      var if_res333 = if_res326;
    } else {
      if (M7.unsafe_fx_lt_(index634, 9) !== false) {
        if (M7.unsafe_fx_lt_(index634, 7) !== false) {
          var if_res328 = M5.values($rjs_core.UString.make("NOT"), M5.format($rjs_core.UString.make("expr: ~a"), gen_exp(M5.car(M4.ast_c(a630)))));
        } else {
          if (M7.unsafe_fx_lt_(index634, 8) !== false) {
            var if_res327 = M5.values($rjs_core.UString.make("OPT"), M5.format($rjs_core.UString.make("expr: ~a"), gen_exp(M5.car(M4.ast_c(a630)))));
          } else {
            var if_res327 = M5.values($rjs_core.UString.make("STAR"), M5.format($rjs_core.UString.make("expr: ~a"), gen_exp(M5.car(M4.ast_c(a630)))));
          }
          var if_res328 = if_res327;
        }
        var if_res332 = if_res328;
      } else {
        if (M7.unsafe_fx_lt_(index634, 10) !== false) {
          var if_res331 = M5.values($rjs_core.UString.make("PLUS"), M5.format($rjs_core.UString.make("expr: ~a"), gen_exp(M5.car(M4.ast_c(a630)))));
        } else {
          if (M7.unsafe_fx_lt_(index634, 11) !== false) {
            var if_res330 = M5.values($rjs_core.UString.make("ALT"), M5.format($rjs_core.UString.make("exprs: ~a"), gen_array(gen_exp, M4.ast_c(a630))));
          } else {
            if (M7.unsafe_fx_lt_(index634, 12) !== false) {
              var if_res329 = M5.values($rjs_core.UString.make("SEQ"), M5.format($rjs_core.UString.make("exprs: ~a"), gen_array(gen_exp, M4.ast_c(a630))));
            } else {
              var if_res329 = M5.values($rjs_core.UString.make("ANY_CHAR"), $rjs_core.UString.make(""));
            }
            var if_res330 = if_res329;
          }
          var if_res331 = if_res330;
        }
        var if_res332 = if_res331;
      }
      var if_res333 = if_res332;
    }
    var let_result334 = if_res333;
    var name631 = let_result334.getAt(0);
    var args632 = let_result334.getAt(1);
    if (M5.__eq_(0, M5.string_length(args632)) !== false) {
      var if_res335 = $rjs_core.UString.make("");
    } else {
      var if_res335 = M5.format($rjs_core.UString.make(", ~a"), args632);
    }
    var args_str636 = if_res335;
    if (typescript() !== false) {
      var if_res336 = M5.format($rjs_core.UString.make("{ type: ExprType.~a~a }"), name631, args_str636);
    } else {
      var if_res336 = M5.format($rjs_core.UString.make("{ type: ~a /* ~a */~a }"), M5.hash_ref(exp_id_map, name631), name631, args_str636);
    }
    return if_res336;
  };
  var nonterminal_mode_map = M5.make_hash($rjs_core.Pair.makeList($rjs_core.Pair.make($rjs_core.UString.make("NORMAL"), 1), $rjs_core.Pair.make($rjs_core.UString.make("PRUNING"), 2), $rjs_core.Pair.make($rjs_core.UString.make("VOIDING"), 3)));
  var gen_def = function(a637) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var tmp641 = M4.ast_t(M5.list_ref(M4.ast_c(a637), 1));
    if (M5.equal_p(tmp641, $rjs_core.Symbol.make("voidArrow")) !== false) {
      var if_res339 = $rjs_core.UString.make("VOIDING");
    } else {
      if (M5.equal_p(tmp641, $rjs_core.Symbol.make("pruneArrow")) !== false) {
        var if_res338 = $rjs_core.UString.make("PRUNING");
      } else {
        if (M5.equal_p(tmp641, $rjs_core.Symbol.make("leftArrow")) !== false) {
          var if_res337 = $rjs_core.UString.make("NORMAL");
        } else {
          var if_res337 = M5.rvoid();
        }
        var if_res338 = if_res337;
      }
      var if_res339 = if_res338;
    }
    var mode_name638 = if_res339;
    var nt_name639 = M5.list__gt_string(M4.ast_c(M5.list_ref(M4.ast_c(a637), 0)));
    var exp640 = gen_exp(M5.list_ref(M4.ast_c(a637), 2));
    if (typescript() !== false) {
      var if_res340 = M5.format($rjs_core.UString.make("'~a': { mode: NonTerminalMode.~a, exp: ~a }"), nt_name639, mode_name638, exp640);
    } else {
      var if_res340 = M5.format($rjs_core.UString.make("'~a': { mode: ~a /* ~a */, exp: ~a }"), nt_name639, M5.hash_ref(nonterminal_mode_map, mode_name638), mode_name638, exp640);
    }
    return if_res340;
  };
  var gen_defs = function(a642) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return gen_map(gen_def, M4.ast_c(a642));
  };
  var gen_map = function(fn643, data644) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var temp342 = $rjs_core.UString.make("{~a}");
    M2.indent_plus_(1);
    if (M5.null_p(data644) !== false) {
      var if_res341 = $rjs_core.UString.make("");
    } else {
      var if_res341 = M5.string_append(fn643(M5.car(data644)), M5.apply(M5.string_append, M1.map(function(a646) {
        if (arguments.length !== 1) {
          throw $rjs_core.racketContractError("arity mismatch");
        } else {}
        return M5.string_append($rjs_core.UString.make(",\n"), M2.ind(), fn643(a646));
      }, M5.cdr(data644))));
    }
    var val645 = if_res341;
    M2.indent_(1);
    return M5.format(temp342, val645);
  };
  var gen_array = function(fn647, data648) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var temp345 = $rjs_core.UString.make("[~a]");
    M2.indent_plus_(1);
    if (M5.null_p(data648) !== false) {
      var if_res344 = $rjs_core.UString.make("");
    } else {
      var temp1650 = M1.map(fn647, data648);
      var temp2651 = $rjs_core.UString.make(", ");
      if (M5.variable_reference_constant_p(M6.__rjs_quoted__.add_between33) !== false) {
        var if_res343 = M6.__rjs_quoted__.add_between31($rjs_core.Pair.makeList(), $rjs_core.Pair.makeList(), M7.__rjs_quoted__.unsafe_undefined, false, temp1650, temp2651);
      } else {
        var if_res343 = M6.__rjs_quoted__.add_between33(temp1650, temp2651);
      }
      var if_res344 = M5.apply(M5.string_append, if_res343);
    }
    var val649 = if_res344;
    M2.indent_(1);
    return M5.format(temp345, val649);
  };
  var gen_typescript_parser = function(grammar652) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M3.__times_name_prefix_times_ !== false) {
      var if_res346 = M5.string_append(M2.camel_case_upper(M3.__times_name_prefix_times_), $rjs_core.UString.make("Parser"));
    } else {
      var if_res346 = $rjs_core.UString.make("Parser");
    }
    var parser_name653 = if_res346;
    var temp354 = $rjs_core.UString.make("~a\nimport { ExprType, NonTerminalMode, ParserConfig, WaxeyeParser } from 'waxeye';\n\nconst parserConfig: ParserConfig =\n ~a~a~a;\nconst start = '~a';\n\nexport class ~a extends WaxeyeParser {\n  public constructor() {\n    super(parserConfig, start);\n  }\n}\n");
    if (M3.__times_file_header_times_ !== false) {
      var if_res353 = javascript_comment(M3.__times_file_header_times_);
    } else {
      var if_res353 = javascript_comment(M2.__times_default_header_times_);
    }
    var temp352 = M2.ind();
    var temp351 = M2.ind();
    var __context347 = $rjs_core.Marks.getFrames();
    var __context348;
    try {
      __context348 = $rjs_core.Marks.enterFrame();
      $rjs_core.Marks.setMark(M0.parameterization_key, M0.extend_parameterization(M5.continuation_mark_set_first(false, M0.parameterization_key), typescript, true));
      var __wcm_result349 = gen_defs(grammar652);
    } finally {
      $rjs_core.Marks.updateFrame(__context347, __context348);
    }
    return M5.format(temp354, if_res353, temp352, temp351, __wcm_result349, M3.__times_start_name_times_, parser_name653);
  };
  var gen_javascript_parser = function(grammar654) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M3.__times_name_prefix_times_ !== false) {
      var if_res355 = M5.string_append(M2.camel_case_upper(M3.__times_name_prefix_times_), $rjs_core.UString.make("Parser"));
    } else {
      var if_res355 = $rjs_core.UString.make("Parser");
    }
    var parser_name655 = if_res355;
    var gen_parser_class656 = function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      var temp362 = $rjs_core.UString.make("\nfunction ~a() {}\n~a.prototype = new waxeye.WaxeyeParser(\n~a~a~a\n~a, '~a');\n");
      var temp361 = M2.ind();
      var temp360 = M2.ind();
      var __context356 = $rjs_core.Marks.getFrames();
      var __context357;
      try {
        __context357 = $rjs_core.Marks.enterFrame();
        $rjs_core.Marks.setMark(M0.parameterization_key, M0.extend_parameterization(M5.continuation_mark_set_first(false, M0.parameterization_key), typescript, false));
        var __wcm_result358 = gen_defs(grammar654);
      } finally {
        $rjs_core.Marks.updateFrame(__context356, __context357);
      }
      return M5.format(temp362, parser_name655, parser_name655, temp361, temp360, __wcm_result358, M2.ind(), M3.__times_start_name_times_);
    };
    var gen_nodejs_imports657 = function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      M2.indent_plus_(1);
      var val658 = M5.format($rjs_core.UString.make("\nvar waxeye = waxeye;\nif (typeof module !== 'undefined') {\n~a// require from module system\n~awaxeye = require('waxeye');\n}\n"), M2.ind(), M2.ind());
      M2.indent_(1);
      return val658;
    };
    var gen_nodejs_exports659 = function() {
      if (arguments.length !== 0) {
        throw $rjs_core.racketContractError("arity mismatch");
      } else {}
      M2.indent_plus_(1);
      var val660 = M5.format($rjs_core.UString.make("\n// Add to module system\nif (typeof module !== 'undefined') {\n~amodule.exports.~a = ~a;\n}\n"), M2.ind(), parser_name655, parser_name655);
      M2.indent_(1);
      return val660;
    };
    var temp364 = $rjs_core.UString.make("~a~a~a~a");
    if (M3.__times_file_header_times_ !== false) {
      var if_res363 = javascript_comment(M3.__times_file_header_times_);
    } else {
      var if_res363 = javascript_comment(M2.__times_default_header_times_);
    }
    return M5.format(temp364, if_res363, gen_nodejs_imports657(), gen_parser_class656(), gen_nodejs_exports659());
  };
  var __rjs_quoted__ = {};
  ;
  return {
    get __rjs_quoted__() {
      return __rjs_quoted__;
    },
    get gen_typescript_parser() {
      return gen_typescript_parser;
    },
    get gen_typescript() {
      return gen_typescript;
    },
    get gen_javascript_parser() {
      return gen_javascript_parser;
    },
    get gen_javascript() {
      return gen_javascript;
    }
  };
})();
var $__modules_47_racketscript_46_rkt_46_js__ = (function() {
  "use strict";
  var __moduleName = "modules/racketscript.rkt.js";
  var $rjs_core = $__runtime_47_core_46_js__;
  var M0 = $__links_47_racketscript_45_compiler_47_racketscript_47_interop_46_rkt_46_js__;
  var M1 = $__modules_47_grammar_45_parser_46_rkt_46_js__;
  var M2 = $__modules_47_transform_46_rkt_46_js__;
  var M3 = $__modules_47_gen_46_rkt_46_js__;
  var M4 = $__collects_47_waxeye_47_ast_46_rkt_46_js__;
  var M5 = $__runtime_47_kernel_46_rkt_46_js__;
  var M6 = $__modules_47_javascript_46_rkt_46_js__;
  var M7 = $__links_47_racketscript_45_compiler_47_racketscript_47_private_47_interop_46_rkt_46_js__;
  var syntax_error_message = function(error1) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return M5.string_append($rjs_core.UString.make("syntax error in grammar: "), M4.parse_error__gt_string(error1));
  };
  var transform_and_set_start32 = function(grammar_or_error23, start_name14) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    var grammar_or_error5 = grammar_or_error23;
    if (false !== false) {
      var if_res1 = $rjs_core.UString.make("");
    } else {
      var if_res1 = start_name14;
    }
    var start_name6 = if_res1;
    if (M4.ast_p(grammar_or_error5) !== false) {
      var grammar7 = grammar_or_error5;
      M2.transform_grammar(grammar7);
      M3.start_nt_bang_(start_name6, grammar7);
      var if_res2 = grammar7;
    } else {
      var if_res2 = grammar_or_error5;
    }
    return if_res2;
  };
  var cl3 = function(grammar_or_error8) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return transform_and_set_start32(grammar_or_error8, $rjs_core.UString.make(""));
  };
  var cl4 = function(grammar_or_error9, start_name110) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return transform_and_set_start32(grammar_or_error9, start_name110);
  };
  var transform_and_set_start = $rjs_core.attachProcedureArity(function() {
    var fixed_lam5 = {
      '1': cl3,
      '2': cl4
    }[arguments.length];
    if (fixed_lam5 !== undefined) {
      return fixed_lam5.apply(null, arguments);
    } else {
      return M5.error($rjs_core.UString.make("case-lambda: invalid case"));
    }
  }, [1, 2]);
  var js_result = function(grammar_or_error11, fn12) {
    if (arguments.length !== 2) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    if (M4.ast_p(grammar_or_error11) !== false) {
      var if_res6 = [M0.js_string(fn12(grammar_or_error11)), null];
    } else {
      var if_res6 = [null, M0.js_string(syntax_error_message(grammar_or_error11))];
    }
    return if_res6;
  };
  var grammar_to_ast_string = function(grammar_src13) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return js_result(M1.grammar_parser(M0.racket_string(grammar_src13)), M4.ast__gt_string);
  };
  var grammar_to_transformed_ast_string = function(grammar_src14) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return js_result(transform_and_set_start(M1.grammar_parser(M0.racket_string(grammar_src14))), M4.ast__gt_string);
  };
  var generate_parser = function(grammar_src15) {
    if (arguments.length !== 1) {
      throw $rjs_core.racketContractError("arity mismatch");
    } else {}
    return js_result(transform_and_set_start(M1.grammar_parser(M0.racket_string(grammar_src15))), M6.gen_javascript_parser);
  };
  window.waxeyeCompiler = {
    'grammarToAstString': grammar_to_ast_string,
    'grammarToTransformedAstString': grammar_to_transformed_ast_string,
    'generateParser': generate_parser
  };
  var __rjs_quoted__ = {};
  ;
  return {get __rjs_quoted__() {
      return __rjs_quoted__;
    }};
})();
